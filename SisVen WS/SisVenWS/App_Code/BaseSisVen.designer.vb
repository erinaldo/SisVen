'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="SisVen")>  _
Partial Public Class BaseSisVenDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertVentas(instance As Ventas)
    End Sub
  Partial Private Sub UpdateVentas(instance As Ventas)
    End Sub
  Partial Private Sub DeleteVentas(instance As Ventas)
    End Sub
  Partial Private Sub InsertClientes(instance As Clientes)
    End Sub
  Partial Private Sub UpdateClientes(instance As Clientes)
    End Sub
  Partial Private Sub DeleteClientes(instance As Clientes)
    End Sub
  Partial Private Sub InsertStocks(instance As Stocks)
    End Sub
  Partial Private Sub UpdateStocks(instance As Stocks)
    End Sub
  Partial Private Sub DeleteStocks(instance As Stocks)
    End Sub
  Partial Private Sub InsertComunas(instance As Comunas)
    End Sub
  Partial Private Sub UpdateComunas(instance As Comunas)
    End Sub
  Partial Private Sub DeleteComunas(instance As Comunas)
    End Sub
  Partial Private Sub InsertCiudades(instance As Ciudades)
    End Sub
  Partial Private Sub UpdateCiudades(instance As Ciudades)
    End Sub
  Partial Private Sub DeleteCiudades(instance As Ciudades)
    End Sub
  Partial Private Sub InsertLocales(instance As Locales)
    End Sub
  Partial Private Sub UpdateLocales(instance As Locales)
    End Sub
  Partial Private Sub DeleteLocales(instance As Locales)
    End Sub
  Partial Private Sub InsertFPagos(instance As FPagos)
    End Sub
  Partial Private Sub UpdateFPagos(instance As FPagos)
    End Sub
  Partial Private Sub DeleteFPagos(instance As FPagos)
    End Sub
  Partial Private Sub InsertUsuarios(instance As Usuarios)
    End Sub
  Partial Private Sub UpdateUsuarios(instance As Usuarios)
    End Sub
  Partial Private Sub DeleteUsuarios(instance As Usuarios)
    End Sub
  Partial Private Sub InsertDocumentosD(instance As DocumentosD)
    End Sub
  Partial Private Sub UpdateDocumentosD(instance As DocumentosD)
    End Sub
  Partial Private Sub DeleteDocumentosD(instance As DocumentosD)
    End Sub
  Partial Private Sub InsertDocumentosP(instance As DocumentosP)
    End Sub
  Partial Private Sub UpdateDocumentosP(instance As DocumentosP)
    End Sub
  Partial Private Sub DeleteDocumentosP(instance As DocumentosP)
    End Sub
  Partial Private Sub InsertDocumentosG(instance As DocumentosG)
    End Sub
  Partial Private Sub UpdateDocumentosG(instance As DocumentosG)
    End Sub
  Partial Private Sub DeleteDocumentosG(instance As DocumentosG)
    End Sub
  Partial Private Sub InsertBodegas(instance As Bodegas)
    End Sub
  Partial Private Sub UpdateBodegas(instance As Bodegas)
    End Sub
  Partial Private Sub DeleteBodegas(instance As Bodegas)
    End Sub
  Partial Private Sub InsertUnidades(instance As Unidades)
    End Sub
  Partial Private Sub UpdateUnidades(instance As Unidades)
    End Sub
  Partial Private Sub DeleteUnidades(instance As Unidades)
    End Sub
  Partial Private Sub InsertTipoDoc(instance As TipoDoc)
    End Sub
  Partial Private Sub UpdateTipoDoc(instance As TipoDoc)
    End Sub
  Partial Private Sub DeleteTipoDoc(instance As TipoDoc)
    End Sub
  Partial Private Sub InsertParametros(instance As Parametros)
    End Sub
  Partial Private Sub UpdateParametros(instance As Parametros)
    End Sub
  Partial Private Sub DeleteParametros(instance As Parametros)
    End Sub
  Partial Private Sub InsertArticulos(instance As Articulos)
    End Sub
  Partial Private Sub UpdateArticulos(instance As Articulos)
    End Sub
  Partial Private Sub DeleteArticulos(instance As Articulos)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("SisVenConnectionString1").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Ventas() As System.Data.Linq.Table(Of Ventas)
		Get
			Return Me.GetTable(Of Ventas)
		End Get
	End Property
	
	Public ReadOnly Property Clientes() As System.Data.Linq.Table(Of Clientes)
		Get
			Return Me.GetTable(Of Clientes)
		End Get
	End Property
	
	Public ReadOnly Property Stocks() As System.Data.Linq.Table(Of Stocks)
		Get
			Return Me.GetTable(Of Stocks)
		End Get
	End Property
	
	Public ReadOnly Property DocumentosRef() As System.Data.Linq.Table(Of DocumentosRef)
		Get
			Return Me.GetTable(Of DocumentosRef)
		End Get
	End Property
	
	Public ReadOnly Property Comunas() As System.Data.Linq.Table(Of Comunas)
		Get
			Return Me.GetTable(Of Comunas)
		End Get
	End Property
	
	Public ReadOnly Property Ciudades() As System.Data.Linq.Table(Of Ciudades)
		Get
			Return Me.GetTable(Of Ciudades)
		End Get
	End Property
	
	Public ReadOnly Property Motivos() As System.Data.Linq.Table(Of Motivos)
		Get
			Return Me.GetTable(Of Motivos)
		End Get
	End Property
	
	Public ReadOnly Property Correlativos() As System.Data.Linq.Table(Of Correlativos)
		Get
			Return Me.GetTable(Of Correlativos)
		End Get
	End Property
	
	Public ReadOnly Property Locales() As System.Data.Linq.Table(Of Locales)
		Get
			Return Me.GetTable(Of Locales)
		End Get
	End Property
	
	Public ReadOnly Property FPagos() As System.Data.Linq.Table(Of FPagos)
		Get
			Return Me.GetTable(Of FPagos)
		End Get
	End Property
	
	Public ReadOnly Property Usuarios() As System.Data.Linq.Table(Of Usuarios)
		Get
			Return Me.GetTable(Of Usuarios)
		End Get
	End Property
	
	Public ReadOnly Property DocumentosD() As System.Data.Linq.Table(Of DocumentosD)
		Get
			Return Me.GetTable(Of DocumentosD)
		End Get
	End Property
	
	Public ReadOnly Property DocumentosP() As System.Data.Linq.Table(Of DocumentosP)
		Get
			Return Me.GetTable(Of DocumentosP)
		End Get
	End Property
	
	Public ReadOnly Property DocumentosG() As System.Data.Linq.Table(Of DocumentosG)
		Get
			Return Me.GetTable(Of DocumentosG)
		End Get
	End Property
	
	Public ReadOnly Property Bodegas() As System.Data.Linq.Table(Of Bodegas)
		Get
			Return Me.GetTable(Of Bodegas)
		End Get
	End Property
	
	Public ReadOnly Property Unidades() As System.Data.Linq.Table(Of Unidades)
		Get
			Return Me.GetTable(Of Unidades)
		End Get
	End Property
	
	Public ReadOnly Property TipoDoc() As System.Data.Linq.Table(Of TipoDoc)
		Get
			Return Me.GetTable(Of TipoDoc)
		End Get
	End Property
	
	Public ReadOnly Property Parametros() As System.Data.Linq.Table(Of Parametros)
		Get
			Return Me.GetTable(Of Parametros)
		End Get
	End Property
	
	Public ReadOnly Property Articulos() As System.Data.Linq.Table(Of Articulos)
		Get
			Return Me.GetTable(Of Articulos)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Ventas")>  _
Partial Public Class Ventas
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Decimal
	
	Private _Ticket As System.Nullable(Of Decimal)
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Local As System.Nullable(Of Decimal)
	
	Private _Usuario As String
	
	Private _Cliente As System.Nullable(Of Decimal)
	
	Private _OT As System.Nullable(Of Decimal)
	
	Private _FPago As String
	
	Private _TipoDoc As String
	
	Private _NumDoc As System.Nullable(Of Decimal)
	
	Private _Caja As System.Nullable(Of Decimal)
	
	Private _SubTotal As System.Nullable(Of Decimal)
	
	Private _Descuento As System.Nullable(Of Decimal)
	
	Private _Total As System.Nullable(Of Double)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnTicketChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTicketChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnOTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOTChanged()
    End Sub
    Partial Private Sub OnFPagoChanging(value As String)
    End Sub
    Partial Private Sub OnFPagoChanged()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnNumDocChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNumDocChanged()
    End Sub
    Partial Private Sub OnCajaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCajaChanged()
    End Sub
    Partial Private Sub OnSubTotalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSubTotalChanged()
    End Sub
    Partial Private Sub OnDescuentoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDescuentoChanged()
    End Sub
    Partial Private Sub OnTotalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Decimal
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ticket", DbType:="Decimal(18,0)")>  _
	Public Property Ticket() As System.Nullable(Of Decimal)
		Get
			Return Me._Ticket
		End Get
		Set
			If (Me._Ticket.Equals(value) = false) Then
				Me.OnTicketChanging(value)
				Me.SendPropertyChanging
				Me._Ticket = value
				Me.SendPropertyChanged("Ticket")
				Me.OnTicketChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0)")>  _
	Public Property Local() As System.Nullable(Of Decimal)
		Get
			Return Me._Local
		End Get
		Set
			If (Me._Local.Equals(value) = false) Then
				Me.OnLocalChanging(value)
				Me.SendPropertyChanging
				Me._Local = value
				Me.SendPropertyChanged("Local")
				Me.OnLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="Char(3)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0)")>  _
	Public Property Cliente() As System.Nullable(Of Decimal)
		Get
			Return Me._Cliente
		End Get
		Set
			If (Me._Cliente.Equals(value) = false) Then
				Me.OnClienteChanging(value)
				Me.SendPropertyChanging
				Me._Cliente = value
				Me.SendPropertyChanged("Cliente")
				Me.OnClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OT", DbType:="Decimal(18,0)")>  _
	Public Property OT() As System.Nullable(Of Decimal)
		Get
			Return Me._OT
		End Get
		Set
			If (Me._OT.Equals(value) = false) Then
				Me.OnOTChanging(value)
				Me.SendPropertyChanging
				Me._OT = value
				Me.SendPropertyChanged("OT")
				Me.OnOTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPago", DbType:="Char(2)")>  _
	Public Property FPago() As String
		Get
			Return Me._FPago
		End Get
		Set
			If (String.Equals(Me._FPago, value) = false) Then
				Me.OnFPagoChanging(value)
				Me.SendPropertyChanging
				Me._FPago = value
				Me.SendPropertyChanged("FPago")
				Me.OnFPagoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="Char(2)")>  _
	Public Property TipoDoc() As String
		Get
			Return Me._TipoDoc
		End Get
		Set
			If (String.Equals(Me._TipoDoc, value) = false) Then
				Me.OnTipoDocChanging(value)
				Me.SendPropertyChanging
				Me._TipoDoc = value
				Me.SendPropertyChanged("TipoDoc")
				Me.OnTipoDocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumDoc", DbType:="Decimal(18,0)")>  _
	Public Property NumDoc() As System.Nullable(Of Decimal)
		Get
			Return Me._NumDoc
		End Get
		Set
			If (Me._NumDoc.Equals(value) = false) Then
				Me.OnNumDocChanging(value)
				Me.SendPropertyChanging
				Me._NumDoc = value
				Me.SendPropertyChanged("NumDoc")
				Me.OnNumDocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Caja", DbType:="Decimal(18,0)")>  _
	Public Property Caja() As System.Nullable(Of Decimal)
		Get
			Return Me._Caja
		End Get
		Set
			If (Me._Caja.Equals(value) = false) Then
				Me.OnCajaChanging(value)
				Me.SendPropertyChanging
				Me._Caja = value
				Me.SendPropertyChanged("Caja")
				Me.OnCajaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubTotal", DbType:="Decimal(18,0)")>  _
	Public Property SubTotal() As System.Nullable(Of Decimal)
		Get
			Return Me._SubTotal
		End Get
		Set
			If (Me._SubTotal.Equals(value) = false) Then
				Me.OnSubTotalChanging(value)
				Me.SendPropertyChanging
				Me._SubTotal = value
				Me.SendPropertyChanged("SubTotal")
				Me.OnSubTotalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descuento", DbType:="Decimal(18,0)")>  _
	Public Property Descuento() As System.Nullable(Of Decimal)
		Get
			Return Me._Descuento
		End Get
		Set
			If (Me._Descuento.Equals(value) = false) Then
				Me.OnDescuentoChanging(value)
				Me.SendPropertyChanging
				Me._Descuento = value
				Me.SendPropertyChanged("Descuento")
				Me.OnDescuentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total", DbType:="Float")>  _
	Public Property Total() As System.Nullable(Of Double)
		Get
			Return Me._Total
		End Get
		Set
			If (Me._Total.Equals(value) = false) Then
				Me.OnTotalChanging(value)
				Me.SendPropertyChanging
				Me._Total = value
				Me.SendPropertyChanged("Total")
				Me.OnTotalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Clientes")>  _
Partial Public Class Clientes
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Cliente As Decimal
	
	Private _Nombre As String
	
	Private _Rut As String
	
	Private _Fantasia As String
	
	Private _Direccion As String
	
	Private _Ciudad As String
	
	Private _Comuna As String
	
	Private _Giro As String
	
	Private _Telefonos As String
	
	Private _Contacto As String
	
	Private _Tipo As String
	
	Private _Email As String
	
	Private _Proveedor As System.Nullable(Of Boolean)
	
	Private _Comision As System.Nullable(Of Boolean)
	
	Private _MaxDescuento As System.Nullable(Of Double)
	
	Private _CupoMax As System.Nullable(Of Decimal)
	
	Private _Vencimiento As System.Nullable(Of Decimal)
	
	Private _Estado As System.Nullable(Of Char)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnClienteChanging(value As Decimal)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnRutChanging(value As String)
    End Sub
    Partial Private Sub OnRutChanged()
    End Sub
    Partial Private Sub OnFantasiaChanging(value As String)
    End Sub
    Partial Private Sub OnFantasiaChanged()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnCiudadChanging(value As String)
    End Sub
    Partial Private Sub OnCiudadChanged()
    End Sub
    Partial Private Sub OnComunaChanging(value As String)
    End Sub
    Partial Private Sub OnComunaChanged()
    End Sub
    Partial Private Sub OnGiroChanging(value As String)
    End Sub
    Partial Private Sub OnGiroChanged()
    End Sub
    Partial Private Sub OnTelefonosChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonosChanged()
    End Sub
    Partial Private Sub OnContactoChanging(value As String)
    End Sub
    Partial Private Sub OnContactoChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnProveedorChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnProveedorChanged()
    End Sub
    Partial Private Sub OnComisionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnComisionChanged()
    End Sub
    Partial Private Sub OnMaxDescuentoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMaxDescuentoChanged()
    End Sub
    Partial Private Sub OnCupoMaxChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCupoMaxChanged()
    End Sub
    Partial Private Sub OnVencimientoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnVencimientoChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Cliente() As Decimal
		Get
			Return Me._Cliente
		End Get
		Set
			If ((Me._Cliente = value)  _
						= false) Then
				Me.OnClienteChanging(value)
				Me.SendPropertyChanging
				Me._Cliente = value
				Me.SendPropertyChanged("Cliente")
				Me.OnClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(200)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rut", DbType:="VarChar(12)")>  _
	Public Property Rut() As String
		Get
			Return Me._Rut
		End Get
		Set
			If (String.Equals(Me._Rut, value) = false) Then
				Me.OnRutChanging(value)
				Me.SendPropertyChanging
				Me._Rut = value
				Me.SendPropertyChanged("Rut")
				Me.OnRutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fantasia", DbType:="VarChar(30)")>  _
	Public Property Fantasia() As String
		Get
			Return Me._Fantasia
		End Get
		Set
			If (String.Equals(Me._Fantasia, value) = false) Then
				Me.OnFantasiaChanging(value)
				Me.SendPropertyChanging
				Me._Fantasia = value
				Me.SendPropertyChanged("Fantasia")
				Me.OnFantasiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Direccion", DbType:="VarChar(255)")>  _
	Public Property Direccion() As String
		Get
			Return Me._Direccion
		End Get
		Set
			If (String.Equals(Me._Direccion, value) = false) Then
				Me.OnDireccionChanging(value)
				Me.SendPropertyChanging
				Me._Direccion = value
				Me.SendPropertyChanged("Direccion")
				Me.OnDireccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ciudad", DbType:="VarChar(3)")>  _
	Public Property Ciudad() As String
		Get
			Return Me._Ciudad
		End Get
		Set
			If (String.Equals(Me._Ciudad, value) = false) Then
				Me.OnCiudadChanging(value)
				Me.SendPropertyChanging
				Me._Ciudad = value
				Me.SendPropertyChanged("Ciudad")
				Me.OnCiudadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comuna", DbType:="VarChar(3)")>  _
	Public Property Comuna() As String
		Get
			Return Me._Comuna
		End Get
		Set
			If (String.Equals(Me._Comuna, value) = false) Then
				Me.OnComunaChanging(value)
				Me.SendPropertyChanging
				Me._Comuna = value
				Me.SendPropertyChanged("Comuna")
				Me.OnComunaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Giro", DbType:="VarChar(100)")>  _
	Public Property Giro() As String
		Get
			Return Me._Giro
		End Get
		Set
			If (String.Equals(Me._Giro, value) = false) Then
				Me.OnGiroChanging(value)
				Me.SendPropertyChanging
				Me._Giro = value
				Me.SendPropertyChanged("Giro")
				Me.OnGiroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telefonos", DbType:="VarChar(50)")>  _
	Public Property Telefonos() As String
		Get
			Return Me._Telefonos
		End Get
		Set
			If (String.Equals(Me._Telefonos, value) = false) Then
				Me.OnTelefonosChanging(value)
				Me.SendPropertyChanging
				Me._Telefonos = value
				Me.SendPropertyChanged("Telefonos")
				Me.OnTelefonosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contacto", DbType:="VarChar(100)")>  _
	Public Property Contacto() As String
		Get
			Return Me._Contacto
		End Get
		Set
			If (String.Equals(Me._Contacto, value) = false) Then
				Me.OnContactoChanging(value)
				Me.SendPropertyChanging
				Me._Contacto = value
				Me.SendPropertyChanged("Contacto")
				Me.OnContactoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="VarChar(2)")>  _
	Public Property Tipo() As String
		Get
			Return Me._Tipo
		End Get
		Set
			If (String.Equals(Me._Tipo, value) = false) Then
				Me.OnTipoChanging(value)
				Me.SendPropertyChanging
				Me._Tipo = value
				Me.SendPropertyChanged("Tipo")
				Me.OnTipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Proveedor", DbType:="Bit")>  _
	Public Property Proveedor() As System.Nullable(Of Boolean)
		Get
			Return Me._Proveedor
		End Get
		Set
			If (Me._Proveedor.Equals(value) = false) Then
				Me.OnProveedorChanging(value)
				Me.SendPropertyChanging
				Me._Proveedor = value
				Me.SendPropertyChanged("Proveedor")
				Me.OnProveedorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comision", DbType:="Bit")>  _
	Public Property Comision() As System.Nullable(Of Boolean)
		Get
			Return Me._Comision
		End Get
		Set
			If (Me._Comision.Equals(value) = false) Then
				Me.OnComisionChanging(value)
				Me.SendPropertyChanging
				Me._Comision = value
				Me.SendPropertyChanged("Comision")
				Me.OnComisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxDescuento", DbType:="Float")>  _
	Public Property MaxDescuento() As System.Nullable(Of Double)
		Get
			Return Me._MaxDescuento
		End Get
		Set
			If (Me._MaxDescuento.Equals(value) = false) Then
				Me.OnMaxDescuentoChanging(value)
				Me.SendPropertyChanging
				Me._MaxDescuento = value
				Me.SendPropertyChanged("MaxDescuento")
				Me.OnMaxDescuentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CupoMax", DbType:="Decimal(18,0)")>  _
	Public Property CupoMax() As System.Nullable(Of Decimal)
		Get
			Return Me._CupoMax
		End Get
		Set
			If (Me._CupoMax.Equals(value) = false) Then
				Me.OnCupoMaxChanging(value)
				Me.SendPropertyChanging
				Me._CupoMax = value
				Me.SendPropertyChanged("CupoMax")
				Me.OnCupoMaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vencimiento", DbType:="Decimal(18,0)")>  _
	Public Property Vencimiento() As System.Nullable(Of Decimal)
		Get
			Return Me._Vencimiento
		End Get
		Set
			If (Me._Vencimiento.Equals(value) = false) Then
				Me.OnVencimientoChanging(value)
				Me.SendPropertyChanging
				Me._Vencimiento = value
				Me.SendPropertyChanged("Vencimiento")
				Me.OnVencimientoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="Char(1)")>  _
	Public Property Estado() As System.Nullable(Of Char)
		Get
			Return Me._Estado
		End Get
		Set
			If (Me._Estado.Equals(value) = false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Stocks")>  _
Partial Public Class Stocks
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Articulo As String
	
	Private _Bodega As Decimal
	
	Private _Local As System.Nullable(Of Decimal)
	
	Private _StockMin As System.Nullable(Of Double)
	
	Private _StockMax As System.Nullable(Of Double)
	
	Private _Stock As System.Nullable(Of Double)
	
	Private _Id As Decimal
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnArticuloChanging(value As String)
    End Sub
    Partial Private Sub OnArticuloChanged()
    End Sub
    Partial Private Sub OnBodegaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBodegaChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnStockMinChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnStockMinChanged()
    End Sub
    Partial Private Sub OnStockMaxChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnStockMaxChanged()
    End Sub
    Partial Private Sub OnStockChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnStockChanged()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="NVarChar(30)")>  _
	Public Property Articulo() As String
		Get
			Return Me._Articulo
		End Get
		Set
			If (String.Equals(Me._Articulo, value) = false) Then
				Me.OnArticuloChanging(value)
				Me.SendPropertyChanging
				Me._Articulo = value
				Me.SendPropertyChanged("Articulo")
				Me.OnArticuloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bodega", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Bodega() As Decimal
		Get
			Return Me._Bodega
		End Get
		Set
			If ((Me._Bodega = value)  _
						= false) Then
				Me.OnBodegaChanging(value)
				Me.SendPropertyChanging
				Me._Bodega = value
				Me.SendPropertyChanged("Bodega")
				Me.OnBodegaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0)")>  _
	Public Property Local() As System.Nullable(Of Decimal)
		Get
			Return Me._Local
		End Get
		Set
			If (Me._Local.Equals(value) = false) Then
				Me.OnLocalChanging(value)
				Me.SendPropertyChanging
				Me._Local = value
				Me.SendPropertyChanged("Local")
				Me.OnLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockMin", DbType:="Float")>  _
	Public Property StockMin() As System.Nullable(Of Double)
		Get
			Return Me._StockMin
		End Get
		Set
			If (Me._StockMin.Equals(value) = false) Then
				Me.OnStockMinChanging(value)
				Me.SendPropertyChanging
				Me._StockMin = value
				Me.SendPropertyChanged("StockMin")
				Me.OnStockMinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockMax", DbType:="Float")>  _
	Public Property StockMax() As System.Nullable(Of Double)
		Get
			Return Me._StockMax
		End Get
		Set
			If (Me._StockMax.Equals(value) = false) Then
				Me.OnStockMaxChanging(value)
				Me.SendPropertyChanging
				Me._StockMax = value
				Me.SendPropertyChanged("StockMax")
				Me.OnStockMaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stock", DbType:="Float")>  _
	Public Property Stock() As System.Nullable(Of Double)
		Get
			Return Me._Stock
		End Get
		Set
			If (Me._Stock.Equals(value) = false) Then
				Me.OnStockChanging(value)
				Me.SendPropertyChanging
				Me._Stock = value
				Me.SendPropertyChanged("Stock")
				Me.OnStockChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Decimal
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DocumentosRef")>  _
Partial Public Class DocumentosRef
	
	Private _Id As Decimal
	
	Private _TipoDoc As String
	
	Private _TipoDocRef As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.Always, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property Id() As Decimal
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me._Id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2)")>  _
	Public Property TipoDoc() As String
		Get
			Return Me._TipoDoc
		End Get
		Set
			If (String.Equals(Me._TipoDoc, value) = false) Then
				Me._TipoDoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDocRef", DbType:="VarChar(2)")>  _
	Public Property TipoDocRef() As String
		Get
			Return Me._TipoDocRef
		End Get
		Set
			If (String.Equals(Me._TipoDocRef, value) = false) Then
				Me._TipoDocRef = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Comunas")>  _
Partial Public Class Comunas
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Comuna As String
	
	Private _NombreComuna As String
	
	Private _CodigoArea As Short
	
	Private _Region As Short
	
	Private _Ciudad As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnComunaChanging(value As String)
    End Sub
    Partial Private Sub OnComunaChanged()
    End Sub
    Partial Private Sub OnNombreComunaChanging(value As String)
    End Sub
    Partial Private Sub OnNombreComunaChanged()
    End Sub
    Partial Private Sub OnCodigoAreaChanging(value As Short)
    End Sub
    Partial Private Sub OnCodigoAreaChanged()
    End Sub
    Partial Private Sub OnRegionChanging(value As Short)
    End Sub
    Partial Private Sub OnRegionChanged()
    End Sub
    Partial Private Sub OnCiudadChanging(value As String)
    End Sub
    Partial Private Sub OnCiudadChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comuna", DbType:="Char(5) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Comuna() As String
		Get
			Return Me._Comuna
		End Get
		Set
			If (String.Equals(Me._Comuna, value) = false) Then
				Me.OnComunaChanging(value)
				Me.SendPropertyChanging
				Me._Comuna = value
				Me.SendPropertyChanged("Comuna")
				Me.OnComunaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreComuna", DbType:="NChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property NombreComuna() As String
		Get
			Return Me._NombreComuna
		End Get
		Set
			If (String.Equals(Me._NombreComuna, value) = false) Then
				Me.OnNombreComunaChanging(value)
				Me.SendPropertyChanging
				Me._NombreComuna = value
				Me.SendPropertyChanged("NombreComuna")
				Me.OnNombreComunaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodigoArea", DbType:="SmallInt NOT NULL")>  _
	Public Property CodigoArea() As Short
		Get
			Return Me._CodigoArea
		End Get
		Set
			If ((Me._CodigoArea = value)  _
						= false) Then
				Me.OnCodigoAreaChanging(value)
				Me.SendPropertyChanging
				Me._CodigoArea = value
				Me.SendPropertyChanged("CodigoArea")
				Me.OnCodigoAreaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="SmallInt NOT NULL")>  _
	Public Property Region() As Short
		Get
			Return Me._Region
		End Get
		Set
			If ((Me._Region = value)  _
						= false) Then
				Me.OnRegionChanging(value)
				Me.SendPropertyChanging
				Me._Region = value
				Me.SendPropertyChanged("Region")
				Me.OnRegionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ciudad", DbType:="Char(5) NOT NULL", CanBeNull:=false)>  _
	Public Property Ciudad() As String
		Get
			Return Me._Ciudad
		End Get
		Set
			If (String.Equals(Me._Ciudad, value) = false) Then
				Me.OnCiudadChanging(value)
				Me.SendPropertyChanging
				Me._Ciudad = value
				Me.SendPropertyChanged("Ciudad")
				Me.OnCiudadChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Ciudades")>  _
Partial Public Class Ciudades
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Ciudad As String
	
	Private _NombreCiudad As String
	
	Private _CodigoArea As System.Nullable(Of Short)
	
	Private _Region As System.Nullable(Of Short)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCiudadChanging(value As String)
    End Sub
    Partial Private Sub OnCiudadChanged()
    End Sub
    Partial Private Sub OnNombreCiudadChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCiudadChanged()
    End Sub
    Partial Private Sub OnCodigoAreaChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCodigoAreaChanged()
    End Sub
    Partial Private Sub OnRegionChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnRegionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ciudad", DbType:="Char(5) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Ciudad() As String
		Get
			Return Me._Ciudad
		End Get
		Set
			If (String.Equals(Me._Ciudad, value) = false) Then
				Me.OnCiudadChanging(value)
				Me.SendPropertyChanging
				Me._Ciudad = value
				Me.SendPropertyChanged("Ciudad")
				Me.OnCiudadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCiudad", DbType:="VarChar(50)")>  _
	Public Property NombreCiudad() As String
		Get
			Return Me._NombreCiudad
		End Get
		Set
			If (String.Equals(Me._NombreCiudad, value) = false) Then
				Me.OnNombreCiudadChanging(value)
				Me.SendPropertyChanging
				Me._NombreCiudad = value
				Me.SendPropertyChanged("NombreCiudad")
				Me.OnNombreCiudadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodigoArea", DbType:="SmallInt")>  _
	Public Property CodigoArea() As System.Nullable(Of Short)
		Get
			Return Me._CodigoArea
		End Get
		Set
			If (Me._CodigoArea.Equals(value) = false) Then
				Me.OnCodigoAreaChanging(value)
				Me.SendPropertyChanging
				Me._CodigoArea = value
				Me.SendPropertyChanged("CodigoArea")
				Me.OnCodigoAreaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="SmallInt")>  _
	Public Property Region() As System.Nullable(Of Short)
		Get
			Return Me._Region
		End Get
		Set
			If (Me._Region.Equals(value) = false) Then
				Me.OnRegionChanging(value)
				Me.SendPropertyChanging
				Me._Region = value
				Me.SendPropertyChanged("Region")
				Me.OnRegionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Motivos")>  _
Partial Public Class Motivos
	
	Private _Motivo As System.Nullable(Of Char)
	
	Private _DescMotivo As String
	
	Private _TipoDoc As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Motivo", DbType:="NChar(1)")>  _
	Public Property Motivo() As System.Nullable(Of Char)
		Get
			Return Me._Motivo
		End Get
		Set
			If (Me._Motivo.Equals(value) = false) Then
				Me._Motivo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescMotivo", DbType:="VarChar(50)")>  _
	Public Property DescMotivo() As String
		Get
			Return Me._DescMotivo
		End Get
		Set
			If (String.Equals(Me._DescMotivo, value) = false) Then
				Me._DescMotivo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="NVarChar(2)")>  _
	Public Property TipoDoc() As String
		Get
			Return Me._TipoDoc
		End Get
		Set
			If (String.Equals(Me._TipoDoc, value) = false) Then
				Me._TipoDoc = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Correlativos")>  _
Partial Public Class Correlativos
	
	Private _Local As Decimal
	
	Private _Caja As Decimal
	
	Private _TipoDoc As String
	
	Private _Correlativo As System.Nullable(Of Decimal)
	
	Private _Inicial As System.Nullable(Of Decimal)
	
	Private _Final As System.Nullable(Of Decimal)
	
	Private _FechaCAF As System.Nullable(Of Date)
	
	Private _CAF As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Local() As Decimal
		Get
			Return Me._Local
		End Get
		Set
			If ((Me._Local = value)  _
						= false) Then
				Me._Local = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Caja", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Caja() As Decimal
		Get
			Return Me._Caja
		End Get
		Set
			If ((Me._Caja = value)  _
						= false) Then
				Me._Caja = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="Char(2) NOT NULL", CanBeNull:=false)>  _
	Public Property TipoDoc() As String
		Get
			Return Me._TipoDoc
		End Get
		Set
			If (String.Equals(Me._TipoDoc, value) = false) Then
				Me._TipoDoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Correlativo", DbType:="Decimal(18,0)")>  _
	Public Property Correlativo() As System.Nullable(Of Decimal)
		Get
			Return Me._Correlativo
		End Get
		Set
			If (Me._Correlativo.Equals(value) = false) Then
				Me._Correlativo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inicial", DbType:="Decimal(18,0)")>  _
	Public Property Inicial() As System.Nullable(Of Decimal)
		Get
			Return Me._Inicial
		End Get
		Set
			If (Me._Inicial.Equals(value) = false) Then
				Me._Inicial = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Final", DbType:="Decimal(18,0)")>  _
	Public Property Final() As System.Nullable(Of Decimal)
		Get
			Return Me._Final
		End Get
		Set
			If (Me._Final.Equals(value) = false) Then
				Me._Final = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaCAF", DbType:="Date")>  _
	Public Property FechaCAF() As System.Nullable(Of Date)
		Get
			Return Me._FechaCAF
		End Get
		Set
			If (Me._FechaCAF.Equals(value) = false) Then
				Me._FechaCAF = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAF", DbType:="VarChar(2000)")>  _
	Public Property CAF() As String
		Get
			Return Me._CAF
		End Get
		Set
			If (String.Equals(Me._CAF, value) = false) Then
				Me._CAF = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Locales")>  _
Partial Public Class Locales
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Local As Decimal
	
	Private _NombreLocal As String
	
	Private _RazonLocal As String
	
	Private _RutLocal As String
	
	Private _GiroLocal As String
	
	Private _DirLocal As String
	
	Private _Ciudad As String
	
	Private _Comuna As String
	
	Private _Cliente As System.Nullable(Of Decimal)
	
	Private _EMailLocal As String
	
	Private _TelefonosLocal As String
	
	Private _HorarioLocal As String
	
	Private _MaxDeuda As System.Nullable(Of Decimal)
	
	Private _EnvioPrecios As System.Nullable(Of Boolean)
	
	Private _CargadeVentas As System.Nullable(Of Boolean)
	
	Private _FElectronica As System.Nullable(Of Boolean)
	
	Private _Produccion As System.Nullable(Of Boolean)
	
	Private _IP_DTE As String
	
	Private _FV_Elect As System.Nullable(Of Boolean)
	
	Private _GD_Elect As System.Nullable(Of Boolean)
	
	Private _NC_Elect As System.Nullable(Of Boolean)
	
	Private _FE_Elect As System.Nullable(Of Boolean)
	
	Private _ND_Elect As System.Nullable(Of Boolean)
	
	Private _FC_Elect As System.Nullable(Of Boolean)
	
	Private _BV_Elect As System.Nullable(Of Boolean)
	
	Private _BE_Elect As System.Nullable(Of Boolean)
	
	Private _Llave As String
	
	Private _NResolucion As System.Nullable(Of Decimal)
	
	Private _FResolucion As System.Nullable(Of Date)
	
	Private _ATECO As String
	
	Private _Logo As System.Data.Linq.Binary
	
	Private _SII As String
	
	Private _Envio_Automatico As System.Nullable(Of Boolean)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnNombreLocalChanging(value As String)
    End Sub
    Partial Private Sub OnNombreLocalChanged()
    End Sub
    Partial Private Sub OnRazonLocalChanging(value As String)
    End Sub
    Partial Private Sub OnRazonLocalChanged()
    End Sub
    Partial Private Sub OnRutLocalChanging(value As String)
    End Sub
    Partial Private Sub OnRutLocalChanged()
    End Sub
    Partial Private Sub OnGiroLocalChanging(value As String)
    End Sub
    Partial Private Sub OnGiroLocalChanged()
    End Sub
    Partial Private Sub OnDirLocalChanging(value As String)
    End Sub
    Partial Private Sub OnDirLocalChanged()
    End Sub
    Partial Private Sub OnCiudadChanging(value As String)
    End Sub
    Partial Private Sub OnCiudadChanged()
    End Sub
    Partial Private Sub OnComunaChanging(value As String)
    End Sub
    Partial Private Sub OnComunaChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnEMailLocalChanging(value As String)
    End Sub
    Partial Private Sub OnEMailLocalChanged()
    End Sub
    Partial Private Sub OnTelefonosLocalChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonosLocalChanged()
    End Sub
    Partial Private Sub OnHorarioLocalChanging(value As String)
    End Sub
    Partial Private Sub OnHorarioLocalChanged()
    End Sub
    Partial Private Sub OnMaxDeudaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMaxDeudaChanged()
    End Sub
    Partial Private Sub OnEnvioPreciosChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnEnvioPreciosChanged()
    End Sub
    Partial Private Sub OnCargadeVentasChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCargadeVentasChanged()
    End Sub
    Partial Private Sub OnFElectronicaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFElectronicaChanged()
    End Sub
    Partial Private Sub OnProduccionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnProduccionChanged()
    End Sub
    Partial Private Sub OnIP_DTEChanging(value As String)
    End Sub
    Partial Private Sub OnIP_DTEChanged()
    End Sub
    Partial Private Sub OnFV_ElectChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFV_ElectChanged()
    End Sub
    Partial Private Sub OnGD_ElectChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnGD_ElectChanged()
    End Sub
    Partial Private Sub OnNC_ElectChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnNC_ElectChanged()
    End Sub
    Partial Private Sub OnFE_ElectChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFE_ElectChanged()
    End Sub
    Partial Private Sub OnND_ElectChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnND_ElectChanged()
    End Sub
    Partial Private Sub OnFC_ElectChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFC_ElectChanged()
    End Sub
    Partial Private Sub OnBV_ElectChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnBV_ElectChanged()
    End Sub
    Partial Private Sub OnBE_ElectChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnBE_ElectChanged()
    End Sub
    Partial Private Sub OnLlaveChanging(value As String)
    End Sub
    Partial Private Sub OnLlaveChanged()
    End Sub
    Partial Private Sub OnNResolucionChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNResolucionChanged()
    End Sub
    Partial Private Sub OnFResolucionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFResolucionChanged()
    End Sub
    Partial Private Sub OnATECOChanging(value As String)
    End Sub
    Partial Private Sub OnATECOChanged()
    End Sub
    Partial Private Sub OnLogoChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnLogoChanged()
    End Sub
    Partial Private Sub OnSIIChanging(value As String)
    End Sub
    Partial Private Sub OnSIIChanged()
    End Sub
    Partial Private Sub OnEnvio_AutomaticoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnEnvio_AutomaticoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Local() As Decimal
		Get
			Return Me._Local
		End Get
		Set
			If ((Me._Local = value)  _
						= false) Then
				Me.OnLocalChanging(value)
				Me.SendPropertyChanging
				Me._Local = value
				Me.SendPropertyChanged("Local")
				Me.OnLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreLocal", DbType:="VarChar(50)")>  _
	Public Property NombreLocal() As String
		Get
			Return Me._NombreLocal
		End Get
		Set
			If (String.Equals(Me._NombreLocal, value) = false) Then
				Me.OnNombreLocalChanging(value)
				Me.SendPropertyChanging
				Me._NombreLocal = value
				Me.SendPropertyChanged("NombreLocal")
				Me.OnNombreLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RazonLocal", DbType:="VarChar(100)")>  _
	Public Property RazonLocal() As String
		Get
			Return Me._RazonLocal
		End Get
		Set
			If (String.Equals(Me._RazonLocal, value) = false) Then
				Me.OnRazonLocalChanging(value)
				Me.SendPropertyChanging
				Me._RazonLocal = value
				Me.SendPropertyChanged("RazonLocal")
				Me.OnRazonLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RutLocal", DbType:="Char(12)")>  _
	Public Property RutLocal() As String
		Get
			Return Me._RutLocal
		End Get
		Set
			If (String.Equals(Me._RutLocal, value) = false) Then
				Me.OnRutLocalChanging(value)
				Me.SendPropertyChanging
				Me._RutLocal = value
				Me.SendPropertyChanged("RutLocal")
				Me.OnRutLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GiroLocal", DbType:="VarChar(100)")>  _
	Public Property GiroLocal() As String
		Get
			Return Me._GiroLocal
		End Get
		Set
			If (String.Equals(Me._GiroLocal, value) = false) Then
				Me.OnGiroLocalChanging(value)
				Me.SendPropertyChanging
				Me._GiroLocal = value
				Me.SendPropertyChanged("GiroLocal")
				Me.OnGiroLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DirLocal", DbType:="VarChar(100)")>  _
	Public Property DirLocal() As String
		Get
			Return Me._DirLocal
		End Get
		Set
			If (String.Equals(Me._DirLocal, value) = false) Then
				Me.OnDirLocalChanging(value)
				Me.SendPropertyChanging
				Me._DirLocal = value
				Me.SendPropertyChanged("DirLocal")
				Me.OnDirLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ciudad", DbType:="VarChar(3)")>  _
	Public Property Ciudad() As String
		Get
			Return Me._Ciudad
		End Get
		Set
			If (String.Equals(Me._Ciudad, value) = false) Then
				Me.OnCiudadChanging(value)
				Me.SendPropertyChanging
				Me._Ciudad = value
				Me.SendPropertyChanged("Ciudad")
				Me.OnCiudadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comuna", DbType:="VarChar(3)")>  _
	Public Property Comuna() As String
		Get
			Return Me._Comuna
		End Get
		Set
			If (String.Equals(Me._Comuna, value) = false) Then
				Me.OnComunaChanging(value)
				Me.SendPropertyChanging
				Me._Comuna = value
				Me.SendPropertyChanged("Comuna")
				Me.OnComunaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0)")>  _
	Public Property Cliente() As System.Nullable(Of Decimal)
		Get
			Return Me._Cliente
		End Get
		Set
			If (Me._Cliente.Equals(value) = false) Then
				Me.OnClienteChanging(value)
				Me.SendPropertyChanging
				Me._Cliente = value
				Me.SendPropertyChanged("Cliente")
				Me.OnClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMailLocal", DbType:="VarChar(50)")>  _
	Public Property EMailLocal() As String
		Get
			Return Me._EMailLocal
		End Get
		Set
			If (String.Equals(Me._EMailLocal, value) = false) Then
				Me.OnEMailLocalChanging(value)
				Me.SendPropertyChanging
				Me._EMailLocal = value
				Me.SendPropertyChanged("EMailLocal")
				Me.OnEMailLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TelefonosLocal", DbType:="VarChar(50)")>  _
	Public Property TelefonosLocal() As String
		Get
			Return Me._TelefonosLocal
		End Get
		Set
			If (String.Equals(Me._TelefonosLocal, value) = false) Then
				Me.OnTelefonosLocalChanging(value)
				Me.SendPropertyChanging
				Me._TelefonosLocal = value
				Me.SendPropertyChanged("TelefonosLocal")
				Me.OnTelefonosLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HorarioLocal", DbType:="VarChar(250)")>  _
	Public Property HorarioLocal() As String
		Get
			Return Me._HorarioLocal
		End Get
		Set
			If (String.Equals(Me._HorarioLocal, value) = false) Then
				Me.OnHorarioLocalChanging(value)
				Me.SendPropertyChanging
				Me._HorarioLocal = value
				Me.SendPropertyChanged("HorarioLocal")
				Me.OnHorarioLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxDeuda", DbType:="Decimal(18,0)")>  _
	Public Property MaxDeuda() As System.Nullable(Of Decimal)
		Get
			Return Me._MaxDeuda
		End Get
		Set
			If (Me._MaxDeuda.Equals(value) = false) Then
				Me.OnMaxDeudaChanging(value)
				Me.SendPropertyChanging
				Me._MaxDeuda = value
				Me.SendPropertyChanged("MaxDeuda")
				Me.OnMaxDeudaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnvioPrecios", DbType:="Bit")>  _
	Public Property EnvioPrecios() As System.Nullable(Of Boolean)
		Get
			Return Me._EnvioPrecios
		End Get
		Set
			If (Me._EnvioPrecios.Equals(value) = false) Then
				Me.OnEnvioPreciosChanging(value)
				Me.SendPropertyChanging
				Me._EnvioPrecios = value
				Me.SendPropertyChanged("EnvioPrecios")
				Me.OnEnvioPreciosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CargadeVentas", DbType:="Bit")>  _
	Public Property CargadeVentas() As System.Nullable(Of Boolean)
		Get
			Return Me._CargadeVentas
		End Get
		Set
			If (Me._CargadeVentas.Equals(value) = false) Then
				Me.OnCargadeVentasChanging(value)
				Me.SendPropertyChanging
				Me._CargadeVentas = value
				Me.SendPropertyChanged("CargadeVentas")
				Me.OnCargadeVentasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FElectronica", DbType:="Bit")>  _
	Public Property FElectronica() As System.Nullable(Of Boolean)
		Get
			Return Me._FElectronica
		End Get
		Set
			If (Me._FElectronica.Equals(value) = false) Then
				Me.OnFElectronicaChanging(value)
				Me.SendPropertyChanging
				Me._FElectronica = value
				Me.SendPropertyChanged("FElectronica")
				Me.OnFElectronicaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Produccion", DbType:="Bit")>  _
	Public Property Produccion() As System.Nullable(Of Boolean)
		Get
			Return Me._Produccion
		End Get
		Set
			If (Me._Produccion.Equals(value) = false) Then
				Me.OnProduccionChanging(value)
				Me.SendPropertyChanging
				Me._Produccion = value
				Me.SendPropertyChanged("Produccion")
				Me.OnProduccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IP_DTE", DbType:="VarChar(50)")>  _
	Public Property IP_DTE() As String
		Get
			Return Me._IP_DTE
		End Get
		Set
			If (String.Equals(Me._IP_DTE, value) = false) Then
				Me.OnIP_DTEChanging(value)
				Me.SendPropertyChanging
				Me._IP_DTE = value
				Me.SendPropertyChanged("IP_DTE")
				Me.OnIP_DTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FV_Elect", DbType:="Bit")>  _
	Public Property FV_Elect() As System.Nullable(Of Boolean)
		Get
			Return Me._FV_Elect
		End Get
		Set
			If (Me._FV_Elect.Equals(value) = false) Then
				Me.OnFV_ElectChanging(value)
				Me.SendPropertyChanging
				Me._FV_Elect = value
				Me.SendPropertyChanged("FV_Elect")
				Me.OnFV_ElectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GD_Elect", DbType:="Bit")>  _
	Public Property GD_Elect() As System.Nullable(Of Boolean)
		Get
			Return Me._GD_Elect
		End Get
		Set
			If (Me._GD_Elect.Equals(value) = false) Then
				Me.OnGD_ElectChanging(value)
				Me.SendPropertyChanging
				Me._GD_Elect = value
				Me.SendPropertyChanged("GD_Elect")
				Me.OnGD_ElectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NC_Elect", DbType:="Bit")>  _
	Public Property NC_Elect() As System.Nullable(Of Boolean)
		Get
			Return Me._NC_Elect
		End Get
		Set
			If (Me._NC_Elect.Equals(value) = false) Then
				Me.OnNC_ElectChanging(value)
				Me.SendPropertyChanging
				Me._NC_Elect = value
				Me.SendPropertyChanged("NC_Elect")
				Me.OnNC_ElectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FE_Elect", DbType:="Bit")>  _
	Public Property FE_Elect() As System.Nullable(Of Boolean)
		Get
			Return Me._FE_Elect
		End Get
		Set
			If (Me._FE_Elect.Equals(value) = false) Then
				Me.OnFE_ElectChanging(value)
				Me.SendPropertyChanging
				Me._FE_Elect = value
				Me.SendPropertyChanged("FE_Elect")
				Me.OnFE_ElectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ND_Elect", DbType:="Bit")>  _
	Public Property ND_Elect() As System.Nullable(Of Boolean)
		Get
			Return Me._ND_Elect
		End Get
		Set
			If (Me._ND_Elect.Equals(value) = false) Then
				Me.OnND_ElectChanging(value)
				Me.SendPropertyChanging
				Me._ND_Elect = value
				Me.SendPropertyChanged("ND_Elect")
				Me.OnND_ElectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FC_Elect", DbType:="Bit")>  _
	Public Property FC_Elect() As System.Nullable(Of Boolean)
		Get
			Return Me._FC_Elect
		End Get
		Set
			If (Me._FC_Elect.Equals(value) = false) Then
				Me.OnFC_ElectChanging(value)
				Me.SendPropertyChanging
				Me._FC_Elect = value
				Me.SendPropertyChanged("FC_Elect")
				Me.OnFC_ElectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BV_Elect", DbType:="Bit")>  _
	Public Property BV_Elect() As System.Nullable(Of Boolean)
		Get
			Return Me._BV_Elect
		End Get
		Set
			If (Me._BV_Elect.Equals(value) = false) Then
				Me.OnBV_ElectChanging(value)
				Me.SendPropertyChanging
				Me._BV_Elect = value
				Me.SendPropertyChanged("BV_Elect")
				Me.OnBV_ElectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BE_Elect", DbType:="Bit")>  _
	Public Property BE_Elect() As System.Nullable(Of Boolean)
		Get
			Return Me._BE_Elect
		End Get
		Set
			If (Me._BE_Elect.Equals(value) = false) Then
				Me.OnBE_ElectChanging(value)
				Me.SendPropertyChanging
				Me._BE_Elect = value
				Me.SendPropertyChanged("BE_Elect")
				Me.OnBE_ElectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Llave", DbType:="VarChar(50)")>  _
	Public Property Llave() As String
		Get
			Return Me._Llave
		End Get
		Set
			If (String.Equals(Me._Llave, value) = false) Then
				Me.OnLlaveChanging(value)
				Me.SendPropertyChanging
				Me._Llave = value
				Me.SendPropertyChanged("Llave")
				Me.OnLlaveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NResolucion", DbType:="Decimal(18,0)")>  _
	Public Property NResolucion() As System.Nullable(Of Decimal)
		Get
			Return Me._NResolucion
		End Get
		Set
			If (Me._NResolucion.Equals(value) = false) Then
				Me.OnNResolucionChanging(value)
				Me.SendPropertyChanging
				Me._NResolucion = value
				Me.SendPropertyChanged("NResolucion")
				Me.OnNResolucionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FResolucion", DbType:="Date")>  _
	Public Property FResolucion() As System.Nullable(Of Date)
		Get
			Return Me._FResolucion
		End Get
		Set
			If (Me._FResolucion.Equals(value) = false) Then
				Me.OnFResolucionChanging(value)
				Me.SendPropertyChanging
				Me._FResolucion = value
				Me.SendPropertyChanged("FResolucion")
				Me.OnFResolucionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATECO", DbType:="VarChar(50)")>  _
	Public Property ATECO() As String
		Get
			Return Me._ATECO
		End Get
		Set
			If (String.Equals(Me._ATECO, value) = false) Then
				Me.OnATECOChanging(value)
				Me.SendPropertyChanging
				Me._ATECO = value
				Me.SendPropertyChanged("ATECO")
				Me.OnATECOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Logo", DbType:="Image", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Logo() As System.Data.Linq.Binary
		Get
			Return Me._Logo
		End Get
		Set
			If (Object.Equals(Me._Logo, value) = false) Then
				Me.OnLogoChanging(value)
				Me.SendPropertyChanging
				Me._Logo = value
				Me.SendPropertyChanged("Logo")
				Me.OnLogoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SII", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property SII() As String
		Get
			Return Me._SII
		End Get
		Set
			If (String.Equals(Me._SII, value) = false) Then
				Me.OnSIIChanging(value)
				Me.SendPropertyChanging
				Me._SII = value
				Me.SendPropertyChanged("SII")
				Me.OnSIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Envio_Automatico", DbType:="Bit")>  _
	Public Property Envio_Automatico() As System.Nullable(Of Boolean)
		Get
			Return Me._Envio_Automatico
		End Get
		Set
			If (Me._Envio_Automatico.Equals(value) = false) Then
				Me.OnEnvio_AutomaticoChanging(value)
				Me.SendPropertyChanging
				Me._Envio_Automatico = value
				Me.SendPropertyChanged("Envio_Automatico")
				Me.OnEnvio_AutomaticoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FPagos")>  _
Partial Public Class FPagos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FPago As String
	
	Private _DescFPago As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFPagoChanging(value As String)
    End Sub
    Partial Private Sub OnFPagoChanged()
    End Sub
    Partial Private Sub OnDescFPagoChanging(value As String)
    End Sub
    Partial Private Sub OnDescFPagoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPago", DbType:="VarChar(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FPago() As String
		Get
			Return Me._FPago
		End Get
		Set
			If (String.Equals(Me._FPago, value) = false) Then
				Me.OnFPagoChanging(value)
				Me.SendPropertyChanging
				Me._FPago = value
				Me.SendPropertyChanged("FPago")
				Me.OnFPagoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescFPago", DbType:="VarChar(50)")>  _
	Public Property DescFPago() As String
		Get
			Return Me._DescFPago
		End Get
		Set
			If (String.Equals(Me._DescFPago, value) = false) Then
				Me.OnDescFPagoChanging(value)
				Me.SendPropertyChanging
				Me._DescFPago = value
				Me.SendPropertyChanged("DescFPago")
				Me.OnDescFPagoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Usuarios")>  _
Partial Public Class Usuarios
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Usuario As String
	
	Private _NombreUsr As String
	
	Private _Rut As String
	
	Private _Acceso As System.Nullable(Of Decimal)
	
	Private _Clave As String
	
	Private _Local As System.Nullable(Of Decimal)
	
	Private _Bodega As System.Nullable(Of Decimal)
	
	Private _Funcionario As System.Nullable(Of Boolean)
	
	Private _Empresa As System.Nullable(Of Decimal)
	
	Private _MaxDescuento As System.Nullable(Of Double)
	
	Private _Base As System.Nullable(Of Decimal)
	
	Private _Bruto As System.Nullable(Of Decimal)
	
	Private _AFP As System.Nullable(Of Decimal)
	
	Private _Salud As System.Nullable(Of Decimal)
	
	Private _Pactado As System.Nullable(Of Double)
	
	Private _CajaComp As System.Nullable(Of Decimal)
	
	Private _Vigencia As System.Nullable(Of Date)
	
	Private _Movilizacion As System.Nullable(Of Double)
	
	Private _Colacion As System.Nullable(Of Double)
	
	Private _Gratificacion As System.Nullable(Of Double)
	
	Private _Cargas As System.Nullable(Of Decimal)
	
	Private _MontoCargas As System.Nullable(Of Double)
	
	Private _SIS As System.Nullable(Of Double)
	
	Private _ImpuestoUnico As System.Nullable(Of Double)
	
	Private _Banco As String
	
	Private _CuentaCorriente As String
	
	Private _Correo As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnNombreUsrChanging(value As String)
    End Sub
    Partial Private Sub OnNombreUsrChanged()
    End Sub
    Partial Private Sub OnRutChanging(value As String)
    End Sub
    Partial Private Sub OnRutChanged()
    End Sub
    Partial Private Sub OnAccesoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAccesoChanged()
    End Sub
    Partial Private Sub OnClaveChanging(value As String)
    End Sub
    Partial Private Sub OnClaveChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnBodegaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBodegaChanged()
    End Sub
    Partial Private Sub OnFuncionarioChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFuncionarioChanged()
    End Sub
    Partial Private Sub OnEmpresaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnEmpresaChanged()
    End Sub
    Partial Private Sub OnMaxDescuentoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMaxDescuentoChanged()
    End Sub
    Partial Private Sub OnBaseChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBaseChanged()
    End Sub
    Partial Private Sub OnBrutoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBrutoChanged()
    End Sub
    Partial Private Sub OnAFPChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAFPChanged()
    End Sub
    Partial Private Sub OnSaludChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSaludChanged()
    End Sub
    Partial Private Sub OnPactadoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPactadoChanged()
    End Sub
    Partial Private Sub OnCajaCompChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCajaCompChanged()
    End Sub
    Partial Private Sub OnVigenciaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnVigenciaChanged()
    End Sub
    Partial Private Sub OnMovilizacionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMovilizacionChanged()
    End Sub
    Partial Private Sub OnColacionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnColacionChanged()
    End Sub
    Partial Private Sub OnGratificacionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGratificacionChanged()
    End Sub
    Partial Private Sub OnCargasChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCargasChanged()
    End Sub
    Partial Private Sub OnMontoCargasChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMontoCargasChanged()
    End Sub
    Partial Private Sub OnSISChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSISChanged()
    End Sub
    Partial Private Sub OnImpuestoUnicoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnImpuestoUnicoChanged()
    End Sub
    Partial Private Sub OnBancoChanging(value As String)
    End Sub
    Partial Private Sub OnBancoChanged()
    End Sub
    Partial Private Sub OnCuentaCorrienteChanging(value As String)
    End Sub
    Partial Private Sub OnCuentaCorrienteChanged()
    End Sub
    Partial Private Sub OnCorreoChanging(value As String)
    End Sub
    Partial Private Sub OnCorreoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="NChar(3) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreUsr", DbType:="VarChar(100)")>  _
	Public Property NombreUsr() As String
		Get
			Return Me._NombreUsr
		End Get
		Set
			If (String.Equals(Me._NombreUsr, value) = false) Then
				Me.OnNombreUsrChanging(value)
				Me.SendPropertyChanging
				Me._NombreUsr = value
				Me.SendPropertyChanged("NombreUsr")
				Me.OnNombreUsrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rut", DbType:="NVarChar(12)")>  _
	Public Property Rut() As String
		Get
			Return Me._Rut
		End Get
		Set
			If (String.Equals(Me._Rut, value) = false) Then
				Me.OnRutChanging(value)
				Me.SendPropertyChanging
				Me._Rut = value
				Me.SendPropertyChanged("Rut")
				Me.OnRutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Acceso", DbType:="Decimal(18,0)")>  _
	Public Property Acceso() As System.Nullable(Of Decimal)
		Get
			Return Me._Acceso
		End Get
		Set
			If (Me._Acceso.Equals(value) = false) Then
				Me.OnAccesoChanging(value)
				Me.SendPropertyChanging
				Me._Acceso = value
				Me.SendPropertyChanged("Acceso")
				Me.OnAccesoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Clave", DbType:="NVarChar(50)")>  _
	Public Property Clave() As String
		Get
			Return Me._Clave
		End Get
		Set
			If (String.Equals(Me._Clave, value) = false) Then
				Me.OnClaveChanging(value)
				Me.SendPropertyChanging
				Me._Clave = value
				Me.SendPropertyChanged("Clave")
				Me.OnClaveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0)")>  _
	Public Property Local() As System.Nullable(Of Decimal)
		Get
			Return Me._Local
		End Get
		Set
			If (Me._Local.Equals(value) = false) Then
				Me.OnLocalChanging(value)
				Me.SendPropertyChanging
				Me._Local = value
				Me.SendPropertyChanged("Local")
				Me.OnLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bodega", DbType:="Decimal(18,0)")>  _
	Public Property Bodega() As System.Nullable(Of Decimal)
		Get
			Return Me._Bodega
		End Get
		Set
			If (Me._Bodega.Equals(value) = false) Then
				Me.OnBodegaChanging(value)
				Me.SendPropertyChanging
				Me._Bodega = value
				Me.SendPropertyChanged("Bodega")
				Me.OnBodegaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Funcionario", DbType:="Bit")>  _
	Public Property Funcionario() As System.Nullable(Of Boolean)
		Get
			Return Me._Funcionario
		End Get
		Set
			If (Me._Funcionario.Equals(value) = false) Then
				Me.OnFuncionarioChanging(value)
				Me.SendPropertyChanging
				Me._Funcionario = value
				Me.SendPropertyChanged("Funcionario")
				Me.OnFuncionarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Empresa", DbType:="Decimal(18,0)")>  _
	Public Property Empresa() As System.Nullable(Of Decimal)
		Get
			Return Me._Empresa
		End Get
		Set
			If (Me._Empresa.Equals(value) = false) Then
				Me.OnEmpresaChanging(value)
				Me.SendPropertyChanging
				Me._Empresa = value
				Me.SendPropertyChanged("Empresa")
				Me.OnEmpresaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxDescuento", DbType:="Float")>  _
	Public Property MaxDescuento() As System.Nullable(Of Double)
		Get
			Return Me._MaxDescuento
		End Get
		Set
			If (Me._MaxDescuento.Equals(value) = false) Then
				Me.OnMaxDescuentoChanging(value)
				Me.SendPropertyChanging
				Me._MaxDescuento = value
				Me.SendPropertyChanged("MaxDescuento")
				Me.OnMaxDescuentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Base", DbType:="Decimal(18,0)")>  _
	Public Property Base() As System.Nullable(Of Decimal)
		Get
			Return Me._Base
		End Get
		Set
			If (Me._Base.Equals(value) = false) Then
				Me.OnBaseChanging(value)
				Me.SendPropertyChanging
				Me._Base = value
				Me.SendPropertyChanged("Base")
				Me.OnBaseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bruto", DbType:="Decimal(18,0)")>  _
	Public Property Bruto() As System.Nullable(Of Decimal)
		Get
			Return Me._Bruto
		End Get
		Set
			If (Me._Bruto.Equals(value) = false) Then
				Me.OnBrutoChanging(value)
				Me.SendPropertyChanging
				Me._Bruto = value
				Me.SendPropertyChanged("Bruto")
				Me.OnBrutoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AFP", DbType:="Decimal(18,0)")>  _
	Public Property AFP() As System.Nullable(Of Decimal)
		Get
			Return Me._AFP
		End Get
		Set
			If (Me._AFP.Equals(value) = false) Then
				Me.OnAFPChanging(value)
				Me.SendPropertyChanging
				Me._AFP = value
				Me.SendPropertyChanged("AFP")
				Me.OnAFPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Salud", DbType:="Decimal(18,0)")>  _
	Public Property Salud() As System.Nullable(Of Decimal)
		Get
			Return Me._Salud
		End Get
		Set
			If (Me._Salud.Equals(value) = false) Then
				Me.OnSaludChanging(value)
				Me.SendPropertyChanging
				Me._Salud = value
				Me.SendPropertyChanged("Salud")
				Me.OnSaludChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pactado", DbType:="Float")>  _
	Public Property Pactado() As System.Nullable(Of Double)
		Get
			Return Me._Pactado
		End Get
		Set
			If (Me._Pactado.Equals(value) = false) Then
				Me.OnPactadoChanging(value)
				Me.SendPropertyChanging
				Me._Pactado = value
				Me.SendPropertyChanged("Pactado")
				Me.OnPactadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CajaComp", DbType:="Decimal(18,0)")>  _
	Public Property CajaComp() As System.Nullable(Of Decimal)
		Get
			Return Me._CajaComp
		End Get
		Set
			If (Me._CajaComp.Equals(value) = false) Then
				Me.OnCajaCompChanging(value)
				Me.SendPropertyChanging
				Me._CajaComp = value
				Me.SendPropertyChanged("CajaComp")
				Me.OnCajaCompChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vigencia", DbType:="DateTime")>  _
	Public Property Vigencia() As System.Nullable(Of Date)
		Get
			Return Me._Vigencia
		End Get
		Set
			If (Me._Vigencia.Equals(value) = false) Then
				Me.OnVigenciaChanging(value)
				Me.SendPropertyChanging
				Me._Vigencia = value
				Me.SendPropertyChanged("Vigencia")
				Me.OnVigenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Movilizacion", DbType:="Float")>  _
	Public Property Movilizacion() As System.Nullable(Of Double)
		Get
			Return Me._Movilizacion
		End Get
		Set
			If (Me._Movilizacion.Equals(value) = false) Then
				Me.OnMovilizacionChanging(value)
				Me.SendPropertyChanging
				Me._Movilizacion = value
				Me.SendPropertyChanged("Movilizacion")
				Me.OnMovilizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Colacion", DbType:="Float")>  _
	Public Property Colacion() As System.Nullable(Of Double)
		Get
			Return Me._Colacion
		End Get
		Set
			If (Me._Colacion.Equals(value) = false) Then
				Me.OnColacionChanging(value)
				Me.SendPropertyChanging
				Me._Colacion = value
				Me.SendPropertyChanged("Colacion")
				Me.OnColacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gratificacion", DbType:="Float")>  _
	Public Property Gratificacion() As System.Nullable(Of Double)
		Get
			Return Me._Gratificacion
		End Get
		Set
			If (Me._Gratificacion.Equals(value) = false) Then
				Me.OnGratificacionChanging(value)
				Me.SendPropertyChanging
				Me._Gratificacion = value
				Me.SendPropertyChanged("Gratificacion")
				Me.OnGratificacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cargas", DbType:="Decimal(18,0)")>  _
	Public Property Cargas() As System.Nullable(Of Decimal)
		Get
			Return Me._Cargas
		End Get
		Set
			If (Me._Cargas.Equals(value) = false) Then
				Me.OnCargasChanging(value)
				Me.SendPropertyChanging
				Me._Cargas = value
				Me.SendPropertyChanged("Cargas")
				Me.OnCargasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MontoCargas", DbType:="Float")>  _
	Public Property MontoCargas() As System.Nullable(Of Double)
		Get
			Return Me._MontoCargas
		End Get
		Set
			If (Me._MontoCargas.Equals(value) = false) Then
				Me.OnMontoCargasChanging(value)
				Me.SendPropertyChanging
				Me._MontoCargas = value
				Me.SendPropertyChanged("MontoCargas")
				Me.OnMontoCargasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIS", DbType:="Float")>  _
	Public Property SIS() As System.Nullable(Of Double)
		Get
			Return Me._SIS
		End Get
		Set
			If (Me._SIS.Equals(value) = false) Then
				Me.OnSISChanging(value)
				Me.SendPropertyChanging
				Me._SIS = value
				Me.SendPropertyChanged("SIS")
				Me.OnSISChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImpuestoUnico", DbType:="Float")>  _
	Public Property ImpuestoUnico() As System.Nullable(Of Double)
		Get
			Return Me._ImpuestoUnico
		End Get
		Set
			If (Me._ImpuestoUnico.Equals(value) = false) Then
				Me.OnImpuestoUnicoChanging(value)
				Me.SendPropertyChanging
				Me._ImpuestoUnico = value
				Me.SendPropertyChanged("ImpuestoUnico")
				Me.OnImpuestoUnicoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Banco", DbType:="NVarChar(3)")>  _
	Public Property Banco() As String
		Get
			Return Me._Banco
		End Get
		Set
			If (String.Equals(Me._Banco, value) = false) Then
				Me.OnBancoChanging(value)
				Me.SendPropertyChanging
				Me._Banco = value
				Me.SendPropertyChanged("Banco")
				Me.OnBancoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CuentaCorriente", DbType:="NVarChar(50)")>  _
	Public Property CuentaCorriente() As String
		Get
			Return Me._CuentaCorriente
		End Get
		Set
			If (String.Equals(Me._CuentaCorriente, value) = false) Then
				Me.OnCuentaCorrienteChanging(value)
				Me.SendPropertyChanging
				Me._CuentaCorriente = value
				Me.SendPropertyChanged("CuentaCorriente")
				Me.OnCuentaCorrienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Correo", DbType:="NChar(50)")>  _
	Public Property Correo() As String
		Get
			Return Me._Correo
		End Get
		Set
			If (String.Equals(Me._Correo, value) = false) Then
				Me.OnCorreoChanging(value)
				Me.SendPropertyChanging
				Me._Correo = value
				Me.SendPropertyChanged("Correo")
				Me.OnCorreoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DocumentosD")>  _
Partial Public Class DocumentosD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Decimal
	
	Private _Local As System.Nullable(Of Decimal)
	
	Private _TipoDoc As String
	
	Private _Numero As System.Nullable(Of Decimal)
	
	Private _Articulo As String
	
	Private _Cantidad As Double
	
	Private _Neto As Double
	
	Private _IVA As Decimal
	
	Private _iEXE As Decimal
	
	Private _iMIN As Decimal
	
	Private _iBEB As Decimal
	
	Private _iVIN As Decimal
	
	Private _iCER As Decimal
	
	Private _iLIC As Decimal
	
	Private _iCAR As Decimal
	
	Private _iHAR As Decimal
	
	Private _iTAB As Decimal
	
	Private _iFEP As Decimal
	
	Private _iLOG As Decimal
	
	Private _iOTRO As Decimal
	
	Private _PVenta As Decimal
	
	Private _Glosa As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnArticuloChanging(value As String)
    End Sub
    Partial Private Sub OnArticuloChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As Double)
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnNetoChanging(value As Double)
    End Sub
    Partial Private Sub OnNetoChanged()
    End Sub
    Partial Private Sub OnIVAChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIVAChanged()
    End Sub
    Partial Private Sub OniEXEChanging(value As Decimal)
    End Sub
    Partial Private Sub OniEXEChanged()
    End Sub
    Partial Private Sub OniMINChanging(value As Decimal)
    End Sub
    Partial Private Sub OniMINChanged()
    End Sub
    Partial Private Sub OniBEBChanging(value As Decimal)
    End Sub
    Partial Private Sub OniBEBChanged()
    End Sub
    Partial Private Sub OniVINChanging(value As Decimal)
    End Sub
    Partial Private Sub OniVINChanged()
    End Sub
    Partial Private Sub OniCERChanging(value As Decimal)
    End Sub
    Partial Private Sub OniCERChanged()
    End Sub
    Partial Private Sub OniLICChanging(value As Decimal)
    End Sub
    Partial Private Sub OniLICChanged()
    End Sub
    Partial Private Sub OniCARChanging(value As Decimal)
    End Sub
    Partial Private Sub OniCARChanged()
    End Sub
    Partial Private Sub OniHARChanging(value As Decimal)
    End Sub
    Partial Private Sub OniHARChanged()
    End Sub
    Partial Private Sub OniTABChanging(value As Decimal)
    End Sub
    Partial Private Sub OniTABChanged()
    End Sub
    Partial Private Sub OniFEPChanging(value As Decimal)
    End Sub
    Partial Private Sub OniFEPChanged()
    End Sub
    Partial Private Sub OniLOGChanging(value As Decimal)
    End Sub
    Partial Private Sub OniLOGChanged()
    End Sub
    Partial Private Sub OniOTROChanging(value As Decimal)
    End Sub
    Partial Private Sub OniOTROChanged()
    End Sub
    Partial Private Sub OnPVentaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPVentaChanged()
    End Sub
    Partial Private Sub OnGlosaChanging(value As String)
    End Sub
    Partial Private Sub OnGlosaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Decimal
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0)")>  _
	Public Property Local() As System.Nullable(Of Decimal)
		Get
			Return Me._Local
		End Get
		Set
			If (Me._Local.Equals(value) = false) Then
				Me.OnLocalChanging(value)
				Me.SendPropertyChanging
				Me._Local = value
				Me.SendPropertyChanged("Local")
				Me.OnLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2)")>  _
	Public Property TipoDoc() As String
		Get
			Return Me._TipoDoc
		End Get
		Set
			If (String.Equals(Me._TipoDoc, value) = false) Then
				Me.OnTipoDocChanging(value)
				Me.SendPropertyChanging
				Me._TipoDoc = value
				Me.SendPropertyChanged("TipoDoc")
				Me.OnTipoDocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Numero", DbType:="Decimal(18,0)")>  _
	Public Property Numero() As System.Nullable(Of Decimal)
		Get
			Return Me._Numero
		End Get
		Set
			If (Me._Numero.Equals(value) = false) Then
				Me.OnNumeroChanging(value)
				Me.SendPropertyChanging
				Me._Numero = value
				Me.SendPropertyChanged("Numero")
				Me.OnNumeroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="VarChar(30)")>  _
	Public Property Articulo() As String
		Get
			Return Me._Articulo
		End Get
		Set
			If (String.Equals(Me._Articulo, value) = false) Then
				Me.OnArticuloChanging(value)
				Me.SendPropertyChanging
				Me._Articulo = value
				Me.SendPropertyChanged("Articulo")
				Me.OnArticuloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Float")>  _
	Public Property Cantidad() As Double
		Get
			Return Me._Cantidad
		End Get
		Set
			If ((Me._Cantidad = value)  _
						= false) Then
				Me.OnCantidadChanging(value)
				Me.SendPropertyChanging
				Me._Cantidad = value
				Me.SendPropertyChanged("Cantidad")
				Me.OnCantidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Neto", DbType:="Float")>  _
	Public Property Neto() As Double
		Get
			Return Me._Neto
		End Get
		Set
			If ((Me._Neto = value)  _
						= false) Then
				Me.OnNetoChanging(value)
				Me.SendPropertyChanging
				Me._Neto = value
				Me.SendPropertyChanged("Neto")
				Me.OnNetoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IVA", DbType:="Decimal(18,0)")>  _
	Public Property IVA() As Decimal
		Get
			Return Me._IVA
		End Get
		Set
			If ((Me._IVA = value)  _
						= false) Then
				Me.OnIVAChanging(value)
				Me.SendPropertyChanging
				Me._IVA = value
				Me.SendPropertyChanged("IVA")
				Me.OnIVAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iEXE", DbType:="Decimal(18,0)")>  _
	Public Property iEXE() As Decimal
		Get
			Return Me._iEXE
		End Get
		Set
			If ((Me._iEXE = value)  _
						= false) Then
				Me.OniEXEChanging(value)
				Me.SendPropertyChanging
				Me._iEXE = value
				Me.SendPropertyChanged("iEXE")
				Me.OniEXEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iMIN", DbType:="Decimal(18,0)")>  _
	Public Property iMIN() As Decimal
		Get
			Return Me._iMIN
		End Get
		Set
			If ((Me._iMIN = value)  _
						= false) Then
				Me.OniMINChanging(value)
				Me.SendPropertyChanging
				Me._iMIN = value
				Me.SendPropertyChanged("iMIN")
				Me.OniMINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iBEB", DbType:="Decimal(18,0)")>  _
	Public Property iBEB() As Decimal
		Get
			Return Me._iBEB
		End Get
		Set
			If ((Me._iBEB = value)  _
						= false) Then
				Me.OniBEBChanging(value)
				Me.SendPropertyChanging
				Me._iBEB = value
				Me.SendPropertyChanged("iBEB")
				Me.OniBEBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iVIN", DbType:="Decimal(18,0)")>  _
	Public Property iVIN() As Decimal
		Get
			Return Me._iVIN
		End Get
		Set
			If ((Me._iVIN = value)  _
						= false) Then
				Me.OniVINChanging(value)
				Me.SendPropertyChanging
				Me._iVIN = value
				Me.SendPropertyChanged("iVIN")
				Me.OniVINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iCER", DbType:="Decimal(18,0)")>  _
	Public Property iCER() As Decimal
		Get
			Return Me._iCER
		End Get
		Set
			If ((Me._iCER = value)  _
						= false) Then
				Me.OniCERChanging(value)
				Me.SendPropertyChanging
				Me._iCER = value
				Me.SendPropertyChanged("iCER")
				Me.OniCERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iLIC", DbType:="Decimal(18,0)")>  _
	Public Property iLIC() As Decimal
		Get
			Return Me._iLIC
		End Get
		Set
			If ((Me._iLIC = value)  _
						= false) Then
				Me.OniLICChanging(value)
				Me.SendPropertyChanging
				Me._iLIC = value
				Me.SendPropertyChanged("iLIC")
				Me.OniLICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iCAR", DbType:="Decimal(18,0)")>  _
	Public Property iCAR() As Decimal
		Get
			Return Me._iCAR
		End Get
		Set
			If ((Me._iCAR = value)  _
						= false) Then
				Me.OniCARChanging(value)
				Me.SendPropertyChanging
				Me._iCAR = value
				Me.SendPropertyChanged("iCAR")
				Me.OniCARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iHAR", DbType:="Decimal(18,0)")>  _
	Public Property iHAR() As Decimal
		Get
			Return Me._iHAR
		End Get
		Set
			If ((Me._iHAR = value)  _
						= false) Then
				Me.OniHARChanging(value)
				Me.SendPropertyChanging
				Me._iHAR = value
				Me.SendPropertyChanged("iHAR")
				Me.OniHARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iTAB", DbType:="Decimal(18,0)")>  _
	Public Property iTAB() As Decimal
		Get
			Return Me._iTAB
		End Get
		Set
			If ((Me._iTAB = value)  _
						= false) Then
				Me.OniTABChanging(value)
				Me.SendPropertyChanging
				Me._iTAB = value
				Me.SendPropertyChanged("iTAB")
				Me.OniTABChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iFEP", DbType:="Decimal(18,0)")>  _
	Public Property iFEP() As Decimal
		Get
			Return Me._iFEP
		End Get
		Set
			If ((Me._iFEP = value)  _
						= false) Then
				Me.OniFEPChanging(value)
				Me.SendPropertyChanging
				Me._iFEP = value
				Me.SendPropertyChanged("iFEP")
				Me.OniFEPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iLOG", DbType:="Decimal(18,0)")>  _
	Public Property iLOG() As Decimal
		Get
			Return Me._iLOG
		End Get
		Set
			If ((Me._iLOG = value)  _
						= false) Then
				Me.OniLOGChanging(value)
				Me.SendPropertyChanging
				Me._iLOG = value
				Me.SendPropertyChanged("iLOG")
				Me.OniLOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iOTRO", DbType:="Decimal(18,0)")>  _
	Public Property iOTRO() As Decimal
		Get
			Return Me._iOTRO
		End Get
		Set
			If ((Me._iOTRO = value)  _
						= false) Then
				Me.OniOTROChanging(value)
				Me.SendPropertyChanging
				Me._iOTRO = value
				Me.SendPropertyChanged("iOTRO")
				Me.OniOTROChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVenta", DbType:="Decimal(18,0)")>  _
	Public Property PVenta() As Decimal
		Get
			Return Me._PVenta
		End Get
		Set
			If ((Me._PVenta = value)  _
						= false) Then
				Me.OnPVentaChanging(value)
				Me.SendPropertyChanging
				Me._PVenta = value
				Me.SendPropertyChanged("PVenta")
				Me.OnPVentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Glosa", DbType:="VarChar(4000)")>  _
	Public Property Glosa() As String
		Get
			Return Me._Glosa
		End Get
		Set
			If (String.Equals(Me._Glosa, value) = false) Then
				Me.OnGlosaChanging(value)
				Me.SendPropertyChanging
				Me._Glosa = value
				Me.SendPropertyChanged("Glosa")
				Me.OnGlosaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DocumentosP")>  _
Partial Public Class DocumentosP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Decimal
	
	Private _Local As System.Nullable(Of Decimal)
	
	Private _TipoDoc As String
	
	Private _Numero As Decimal
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Cliente As System.Nullable(Of Decimal)
	
	Private _Vendedor As String
	
	Private _Estado As System.Nullable(Of Char)
	
	Private _FPago As System.Nullable(Of Char)
	
	Private _FechaPago As System.Nullable(Of Date)
	
	Private _NumeroPago As String
	
	Private _Cuenta As String
	
	Private _Banco As String
	
	Private _Titular As String
	
	Private _Monto As Decimal
	
	Private _Obs As String
	
	Private _Usuario As String
	
	Private _FechaCanc As System.Nullable(Of Date)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnVendedorChanging(value As String)
    End Sub
    Partial Private Sub OnVendedorChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnFPagoChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFPagoChanged()
    End Sub
    Partial Private Sub OnFechaPagoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaPagoChanged()
    End Sub
    Partial Private Sub OnNumeroPagoChanging(value As String)
    End Sub
    Partial Private Sub OnNumeroPagoChanged()
    End Sub
    Partial Private Sub OnCuentaChanging(value As String)
    End Sub
    Partial Private Sub OnCuentaChanged()
    End Sub
    Partial Private Sub OnBancoChanging(value As String)
    End Sub
    Partial Private Sub OnBancoChanged()
    End Sub
    Partial Private Sub OnTitularChanging(value As String)
    End Sub
    Partial Private Sub OnTitularChanged()
    End Sub
    Partial Private Sub OnMontoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMontoChanged()
    End Sub
    Partial Private Sub OnObsChanging(value As String)
    End Sub
    Partial Private Sub OnObsChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnFechaCancChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaCancChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Decimal
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0)")>  _
	Public Property Local() As System.Nullable(Of Decimal)
		Get
			Return Me._Local
		End Get
		Set
			If (Me._Local.Equals(value) = false) Then
				Me.OnLocalChanging(value)
				Me.SendPropertyChanging
				Me._Local = value
				Me.SendPropertyChanged("Local")
				Me.OnLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property TipoDoc() As String
		Get
			Return Me._TipoDoc
		End Get
		Set
			If (String.Equals(Me._TipoDoc, value) = false) Then
				Me.OnTipoDocChanging(value)
				Me.SendPropertyChanging
				Me._TipoDoc = value
				Me.SendPropertyChanged("TipoDoc")
				Me.OnTipoDocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Numero", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Numero() As Decimal
		Get
			Return Me._Numero
		End Get
		Set
			If ((Me._Numero = value)  _
						= false) Then
				Me.OnNumeroChanging(value)
				Me.SendPropertyChanging
				Me._Numero = value
				Me.SendPropertyChanged("Numero")
				Me.OnNumeroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0)")>  _
	Public Property Cliente() As System.Nullable(Of Decimal)
		Get
			Return Me._Cliente
		End Get
		Set
			If (Me._Cliente.Equals(value) = false) Then
				Me.OnClienteChanging(value)
				Me.SendPropertyChanging
				Me._Cliente = value
				Me.SendPropertyChanged("Cliente")
				Me.OnClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vendedor", DbType:="NVarChar(3)")>  _
	Public Property Vendedor() As String
		Get
			Return Me._Vendedor
		End Get
		Set
			If (String.Equals(Me._Vendedor, value) = false) Then
				Me.OnVendedorChanging(value)
				Me.SendPropertyChanging
				Me._Vendedor = value
				Me.SendPropertyChanged("Vendedor")
				Me.OnVendedorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="NChar(1)")>  _
	Public Property Estado() As System.Nullable(Of Char)
		Get
			Return Me._Estado
		End Get
		Set
			If (Me._Estado.Equals(value) = false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPago", DbType:="NChar(1)")>  _
	Public Property FPago() As System.Nullable(Of Char)
		Get
			Return Me._FPago
		End Get
		Set
			If (Me._FPago.Equals(value) = false) Then
				Me.OnFPagoChanging(value)
				Me.SendPropertyChanging
				Me._FPago = value
				Me.SendPropertyChanged("FPago")
				Me.OnFPagoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaPago", DbType:="DateTime")>  _
	Public Property FechaPago() As System.Nullable(Of Date)
		Get
			Return Me._FechaPago
		End Get
		Set
			If (Me._FechaPago.Equals(value) = false) Then
				Me.OnFechaPagoChanging(value)
				Me.SendPropertyChanging
				Me._FechaPago = value
				Me.SendPropertyChanged("FechaPago")
				Me.OnFechaPagoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumeroPago", DbType:="VarChar(50)")>  _
	Public Property NumeroPago() As String
		Get
			Return Me._NumeroPago
		End Get
		Set
			If (String.Equals(Me._NumeroPago, value) = false) Then
				Me.OnNumeroPagoChanging(value)
				Me.SendPropertyChanging
				Me._NumeroPago = value
				Me.SendPropertyChanged("NumeroPago")
				Me.OnNumeroPagoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cuenta", DbType:="VarChar(50)")>  _
	Public Property Cuenta() As String
		Get
			Return Me._Cuenta
		End Get
		Set
			If (String.Equals(Me._Cuenta, value) = false) Then
				Me.OnCuentaChanging(value)
				Me.SendPropertyChanging
				Me._Cuenta = value
				Me.SendPropertyChanged("Cuenta")
				Me.OnCuentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Banco", DbType:="VarChar(50)")>  _
	Public Property Banco() As String
		Get
			Return Me._Banco
		End Get
		Set
			If (String.Equals(Me._Banco, value) = false) Then
				Me.OnBancoChanging(value)
				Me.SendPropertyChanging
				Me._Banco = value
				Me.SendPropertyChanged("Banco")
				Me.OnBancoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Titular", DbType:="VarChar(50)")>  _
	Public Property Titular() As String
		Get
			Return Me._Titular
		End Get
		Set
			If (String.Equals(Me._Titular, value) = false) Then
				Me.OnTitularChanging(value)
				Me.SendPropertyChanging
				Me._Titular = value
				Me.SendPropertyChanged("Titular")
				Me.OnTitularChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Monto", DbType:="Decimal(18,0)")>  _
	Public Property Monto() As Decimal
		Get
			Return Me._Monto
		End Get
		Set
			If ((Me._Monto = value)  _
						= false) Then
				Me.OnMontoChanging(value)
				Me.SendPropertyChanging
				Me._Monto = value
				Me.SendPropertyChanged("Monto")
				Me.OnMontoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Obs", DbType:="VarChar(4000)")>  _
	Public Property Obs() As String
		Get
			Return Me._Obs
		End Get
		Set
			If (String.Equals(Me._Obs, value) = false) Then
				Me.OnObsChanging(value)
				Me.SendPropertyChanging
				Me._Obs = value
				Me.SendPropertyChanged("Obs")
				Me.OnObsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="NChar(3)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaCanc", DbType:="Date")>  _
	Public Property FechaCanc() As System.Nullable(Of Date)
		Get
			Return Me._FechaCanc
		End Get
		Set
			If (Me._FechaCanc.Equals(value) = false) Then
				Me.OnFechaCancChanging(value)
				Me.SendPropertyChanging
				Me._FechaCanc = value
				Me.SendPropertyChanged("FechaCanc")
				Me.OnFechaCancChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DocumentosG")>  _
Partial Public Class DocumentosG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Decimal
	
	Private _Local As Decimal
	
	Private _TipoDoc As String
	
	Private _Numero As Decimal
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Estado As System.Nullable(Of Char)
	
	Private _Cliente As System.Nullable(Of Decimal)
	
	Private _Rut As String
	
	Private _Aprobado As System.Nullable(Of Boolean)
	
	Private _FPago As String
	
	Private _Bodega As System.Nullable(Of Decimal)
	
	Private _OC As String
	
	Private _Motivo As System.Nullable(Of Char)
	
	Private _TipoDocReferencia As String
	
	Private _NumDocReferencia As System.Nullable(Of Decimal)
	
	Private _FechaDocReferencia As System.Nullable(Of Date)
	
	Private _Observaciones As String
	
	Private _Usuario As String
	
	Private _Vendedor As String
	
	Private _Electronica As System.Nullable(Of Boolean)
	
	Private _POS As System.Nullable(Of Decimal)
	
	Private _Ticket As System.Nullable(Of Decimal)
	
	Private _SubTotal As System.Nullable(Of Double)
	
	Private _Descuento As Double
	
	Private _Neto As Double
	
	Private _IVA As Decimal
	
	Private _iEXE As Decimal
	
	Private _iMIN As Decimal
	
	Private _iBEB As Decimal
	
	Private _iVIN As Decimal
	
	Private _iCER As Decimal
	
	Private _iLIC As Decimal
	
	Private _iHAR As Decimal
	
	Private _iCAR As Decimal
	
	Private _iFEP As Decimal
	
	Private _iTAB As Decimal
	
	Private _iLOG As Decimal
	
	Private _iOTRO As Decimal
	
	Private _Total As Double
	
	Private _RutTransporte As String
	
	Private _NombreTransporte As String
	
	Private _RutChofer As String
	
	Private _NombreChofer As String
	
	Private _PatenteMovil As String
	
	Private _DTE As System.Nullable(Of Boolean)
	
	Private _Firma As System.Data.Linq.Binary
	
	Private _TED As String
	
	Private _STATUS_DTE As System.Nullable(Of Decimal)
	
	Private _StockTraspasado As System.Nullable(Of Boolean)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnRutChanging(value As String)
    End Sub
    Partial Private Sub OnRutChanged()
    End Sub
    Partial Private Sub OnAprobadoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnAprobadoChanged()
    End Sub
    Partial Private Sub OnFPagoChanging(value As String)
    End Sub
    Partial Private Sub OnFPagoChanged()
    End Sub
    Partial Private Sub OnBodegaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBodegaChanged()
    End Sub
    Partial Private Sub OnOCChanging(value As String)
    End Sub
    Partial Private Sub OnOCChanged()
    End Sub
    Partial Private Sub OnMotivoChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnMotivoChanged()
    End Sub
    Partial Private Sub OnTipoDocReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocReferenciaChanged()
    End Sub
    Partial Private Sub OnNumDocReferenciaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNumDocReferenciaChanged()
    End Sub
    Partial Private Sub OnFechaDocReferenciaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaDocReferenciaChanged()
    End Sub
    Partial Private Sub OnObservacionesChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionesChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnVendedorChanging(value As String)
    End Sub
    Partial Private Sub OnVendedorChanged()
    End Sub
    Partial Private Sub OnElectronicaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnElectronicaChanged()
    End Sub
    Partial Private Sub OnPOSChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPOSChanged()
    End Sub
    Partial Private Sub OnTicketChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTicketChanged()
    End Sub
    Partial Private Sub OnSubTotalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSubTotalChanged()
    End Sub
    Partial Private Sub OnDescuentoChanging(value As Double)
    End Sub
    Partial Private Sub OnDescuentoChanged()
    End Sub
    Partial Private Sub OnNetoChanging(value As Double)
    End Sub
    Partial Private Sub OnNetoChanged()
    End Sub
    Partial Private Sub OnIVAChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIVAChanged()
    End Sub
    Partial Private Sub OniEXEChanging(value As Decimal)
    End Sub
    Partial Private Sub OniEXEChanged()
    End Sub
    Partial Private Sub OniMINChanging(value As Decimal)
    End Sub
    Partial Private Sub OniMINChanged()
    End Sub
    Partial Private Sub OniBEBChanging(value As Decimal)
    End Sub
    Partial Private Sub OniBEBChanged()
    End Sub
    Partial Private Sub OniVINChanging(value As Decimal)
    End Sub
    Partial Private Sub OniVINChanged()
    End Sub
    Partial Private Sub OniCERChanging(value As Decimal)
    End Sub
    Partial Private Sub OniCERChanged()
    End Sub
    Partial Private Sub OniLICChanging(value As Decimal)
    End Sub
    Partial Private Sub OniLICChanged()
    End Sub
    Partial Private Sub OniHARChanging(value As Decimal)
    End Sub
    Partial Private Sub OniHARChanged()
    End Sub
    Partial Private Sub OniCARChanging(value As Decimal)
    End Sub
    Partial Private Sub OniCARChanged()
    End Sub
    Partial Private Sub OniFEPChanging(value As Decimal)
    End Sub
    Partial Private Sub OniFEPChanged()
    End Sub
    Partial Private Sub OniTABChanging(value As Decimal)
    End Sub
    Partial Private Sub OniTABChanged()
    End Sub
    Partial Private Sub OniLOGChanging(value As Decimal)
    End Sub
    Partial Private Sub OniLOGChanged()
    End Sub
    Partial Private Sub OniOTROChanging(value As Decimal)
    End Sub
    Partial Private Sub OniOTROChanged()
    End Sub
    Partial Private Sub OnTotalChanging(value As Double)
    End Sub
    Partial Private Sub OnTotalChanged()
    End Sub
    Partial Private Sub OnRutTransporteChanging(value As String)
    End Sub
    Partial Private Sub OnRutTransporteChanged()
    End Sub
    Partial Private Sub OnNombreTransporteChanging(value As String)
    End Sub
    Partial Private Sub OnNombreTransporteChanged()
    End Sub
    Partial Private Sub OnRutChoferChanging(value As String)
    End Sub
    Partial Private Sub OnRutChoferChanged()
    End Sub
    Partial Private Sub OnNombreChoferChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChoferChanged()
    End Sub
    Partial Private Sub OnPatenteMovilChanging(value As String)
    End Sub
    Partial Private Sub OnPatenteMovilChanged()
    End Sub
    Partial Private Sub OnDTEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDTEChanged()
    End Sub
    Partial Private Sub OnFirmaChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnFirmaChanged()
    End Sub
    Partial Private Sub OnTEDChanging(value As String)
    End Sub
    Partial Private Sub OnTEDChanged()
    End Sub
    Partial Private Sub OnSTATUS_DTEChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSTATUS_DTEChanged()
    End Sub
    Partial Private Sub OnStockTraspasadoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnStockTraspasadoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Decimal
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Local() As Decimal
		Get
			Return Me._Local
		End Get
		Set
			If ((Me._Local = value)  _
						= false) Then
				Me.OnLocalChanging(value)
				Me.SendPropertyChanging
				Me._Local = value
				Me.SendPropertyChanged("Local")
				Me.OnLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property TipoDoc() As String
		Get
			Return Me._TipoDoc
		End Get
		Set
			If (String.Equals(Me._TipoDoc, value) = false) Then
				Me.OnTipoDocChanging(value)
				Me.SendPropertyChanging
				Me._TipoDoc = value
				Me.SendPropertyChanged("TipoDoc")
				Me.OnTipoDocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Numero", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Numero() As Decimal
		Get
			Return Me._Numero
		End Get
		Set
			If ((Me._Numero = value)  _
						= false) Then
				Me.OnNumeroChanging(value)
				Me.SendPropertyChanging
				Me._Numero = value
				Me.SendPropertyChanged("Numero")
				Me.OnNumeroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="Char(1)")>  _
	Public Property Estado() As System.Nullable(Of Char)
		Get
			Return Me._Estado
		End Get
		Set
			If (Me._Estado.Equals(value) = false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0)")>  _
	Public Property Cliente() As System.Nullable(Of Decimal)
		Get
			Return Me._Cliente
		End Get
		Set
			If (Me._Cliente.Equals(value) = false) Then
				Me.OnClienteChanging(value)
				Me.SendPropertyChanging
				Me._Cliente = value
				Me.SendPropertyChanged("Cliente")
				Me.OnClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rut", DbType:="VarChar(12)")>  _
	Public Property Rut() As String
		Get
			Return Me._Rut
		End Get
		Set
			If (String.Equals(Me._Rut, value) = false) Then
				Me.OnRutChanging(value)
				Me.SendPropertyChanging
				Me._Rut = value
				Me.SendPropertyChanged("Rut")
				Me.OnRutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aprobado", DbType:="Bit")>  _
	Public Property Aprobado() As System.Nullable(Of Boolean)
		Get
			Return Me._Aprobado
		End Get
		Set
			If (Me._Aprobado.Equals(value) = false) Then
				Me.OnAprobadoChanging(value)
				Me.SendPropertyChanging
				Me._Aprobado = value
				Me.SendPropertyChanged("Aprobado")
				Me.OnAprobadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPago", DbType:="VarChar(2)")>  _
	Public Property FPago() As String
		Get
			Return Me._FPago
		End Get
		Set
			If (String.Equals(Me._FPago, value) = false) Then
				Me.OnFPagoChanging(value)
				Me.SendPropertyChanging
				Me._FPago = value
				Me.SendPropertyChanged("FPago")
				Me.OnFPagoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bodega", DbType:="Decimal(18,0)")>  _
	Public Property Bodega() As System.Nullable(Of Decimal)
		Get
			Return Me._Bodega
		End Get
		Set
			If (Me._Bodega.Equals(value) = false) Then
				Me.OnBodegaChanging(value)
				Me.SendPropertyChanging
				Me._Bodega = value
				Me.SendPropertyChanged("Bodega")
				Me.OnBodegaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OC", DbType:="VarChar(50)")>  _
	Public Property OC() As String
		Get
			Return Me._OC
		End Get
		Set
			If (String.Equals(Me._OC, value) = false) Then
				Me.OnOCChanging(value)
				Me.SendPropertyChanging
				Me._OC = value
				Me.SendPropertyChanged("OC")
				Me.OnOCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Motivo", DbType:="Char(1)")>  _
	Public Property Motivo() As System.Nullable(Of Char)
		Get
			Return Me._Motivo
		End Get
		Set
			If (Me._Motivo.Equals(value) = false) Then
				Me.OnMotivoChanging(value)
				Me.SendPropertyChanging
				Me._Motivo = value
				Me.SendPropertyChanged("Motivo")
				Me.OnMotivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDocReferencia", DbType:="VarChar(2)")>  _
	Public Property TipoDocReferencia() As String
		Get
			Return Me._TipoDocReferencia
		End Get
		Set
			If (String.Equals(Me._TipoDocReferencia, value) = false) Then
				Me.OnTipoDocReferenciaChanging(value)
				Me.SendPropertyChanging
				Me._TipoDocReferencia = value
				Me.SendPropertyChanged("TipoDocReferencia")
				Me.OnTipoDocReferenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumDocReferencia", DbType:="Decimal(18,0)")>  _
	Public Property NumDocReferencia() As System.Nullable(Of Decimal)
		Get
			Return Me._NumDocReferencia
		End Get
		Set
			If (Me._NumDocReferencia.Equals(value) = false) Then
				Me.OnNumDocReferenciaChanging(value)
				Me.SendPropertyChanging
				Me._NumDocReferencia = value
				Me.SendPropertyChanged("NumDocReferencia")
				Me.OnNumDocReferenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaDocReferencia", DbType:="Date")>  _
	Public Property FechaDocReferencia() As System.Nullable(Of Date)
		Get
			Return Me._FechaDocReferencia
		End Get
		Set
			If (Me._FechaDocReferencia.Equals(value) = false) Then
				Me.OnFechaDocReferenciaChanging(value)
				Me.SendPropertyChanging
				Me._FechaDocReferencia = value
				Me.SendPropertyChanged("FechaDocReferencia")
				Me.OnFechaDocReferenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observaciones", DbType:="VarChar(4000)")>  _
	Public Property Observaciones() As String
		Get
			Return Me._Observaciones
		End Get
		Set
			If (String.Equals(Me._Observaciones, value) = false) Then
				Me.OnObservacionesChanging(value)
				Me.SendPropertyChanging
				Me._Observaciones = value
				Me.SendPropertyChanged("Observaciones")
				Me.OnObservacionesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="Char(3)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vendedor", DbType:="Char(3)")>  _
	Public Property Vendedor() As String
		Get
			Return Me._Vendedor
		End Get
		Set
			If (String.Equals(Me._Vendedor, value) = false) Then
				Me.OnVendedorChanging(value)
				Me.SendPropertyChanging
				Me._Vendedor = value
				Me.SendPropertyChanged("Vendedor")
				Me.OnVendedorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Electronica", DbType:="Bit")>  _
	Public Property Electronica() As System.Nullable(Of Boolean)
		Get
			Return Me._Electronica
		End Get
		Set
			If (Me._Electronica.Equals(value) = false) Then
				Me.OnElectronicaChanging(value)
				Me.SendPropertyChanging
				Me._Electronica = value
				Me.SendPropertyChanged("Electronica")
				Me.OnElectronicaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POS", DbType:="Decimal(18,0)")>  _
	Public Property POS() As System.Nullable(Of Decimal)
		Get
			Return Me._POS
		End Get
		Set
			If (Me._POS.Equals(value) = false) Then
				Me.OnPOSChanging(value)
				Me.SendPropertyChanging
				Me._POS = value
				Me.SendPropertyChanged("POS")
				Me.OnPOSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ticket", DbType:="Decimal(18,0)")>  _
	Public Property Ticket() As System.Nullable(Of Decimal)
		Get
			Return Me._Ticket
		End Get
		Set
			If (Me._Ticket.Equals(value) = false) Then
				Me.OnTicketChanging(value)
				Me.SendPropertyChanging
				Me._Ticket = value
				Me.SendPropertyChanged("Ticket")
				Me.OnTicketChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubTotal", DbType:="Float")>  _
	Public Property SubTotal() As System.Nullable(Of Double)
		Get
			Return Me._SubTotal
		End Get
		Set
			If (Me._SubTotal.Equals(value) = false) Then
				Me.OnSubTotalChanging(value)
				Me.SendPropertyChanging
				Me._SubTotal = value
				Me.SendPropertyChanged("SubTotal")
				Me.OnSubTotalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descuento", DbType:="Float")>  _
	Public Property Descuento() As Double
		Get
			Return Me._Descuento
		End Get
		Set
			If ((Me._Descuento = value)  _
						= false) Then
				Me.OnDescuentoChanging(value)
				Me.SendPropertyChanging
				Me._Descuento = value
				Me.SendPropertyChanged("Descuento")
				Me.OnDescuentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Neto", DbType:="Float")>  _
	Public Property Neto() As Double
		Get
			Return Me._Neto
		End Get
		Set
			If ((Me._Neto = value)  _
						= false) Then
				Me.OnNetoChanging(value)
				Me.SendPropertyChanging
				Me._Neto = value
				Me.SendPropertyChanged("Neto")
				Me.OnNetoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IVA", DbType:="Decimal(18,0)")>  _
	Public Property IVA() As Decimal
		Get
			Return Me._IVA
		End Get
		Set
			If ((Me._IVA = value)  _
						= false) Then
				Me.OnIVAChanging(value)
				Me.SendPropertyChanging
				Me._IVA = value
				Me.SendPropertyChanged("IVA")
				Me.OnIVAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iEXE", DbType:="Decimal(18,0)")>  _
	Public Property iEXE() As Decimal
		Get
			Return Me._iEXE
		End Get
		Set
			If ((Me._iEXE = value)  _
						= false) Then
				Me.OniEXEChanging(value)
				Me.SendPropertyChanging
				Me._iEXE = value
				Me.SendPropertyChanged("iEXE")
				Me.OniEXEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iMIN", DbType:="Decimal(18,0)")>  _
	Public Property iMIN() As Decimal
		Get
			Return Me._iMIN
		End Get
		Set
			If ((Me._iMIN = value)  _
						= false) Then
				Me.OniMINChanging(value)
				Me.SendPropertyChanging
				Me._iMIN = value
				Me.SendPropertyChanged("iMIN")
				Me.OniMINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iBEB", DbType:="Decimal(18,0)")>  _
	Public Property iBEB() As Decimal
		Get
			Return Me._iBEB
		End Get
		Set
			If ((Me._iBEB = value)  _
						= false) Then
				Me.OniBEBChanging(value)
				Me.SendPropertyChanging
				Me._iBEB = value
				Me.SendPropertyChanged("iBEB")
				Me.OniBEBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iVIN", DbType:="Decimal(18,0)")>  _
	Public Property iVIN() As Decimal
		Get
			Return Me._iVIN
		End Get
		Set
			If ((Me._iVIN = value)  _
						= false) Then
				Me.OniVINChanging(value)
				Me.SendPropertyChanging
				Me._iVIN = value
				Me.SendPropertyChanged("iVIN")
				Me.OniVINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iCER", DbType:="Decimal(18,0)")>  _
	Public Property iCER() As Decimal
		Get
			Return Me._iCER
		End Get
		Set
			If ((Me._iCER = value)  _
						= false) Then
				Me.OniCERChanging(value)
				Me.SendPropertyChanging
				Me._iCER = value
				Me.SendPropertyChanged("iCER")
				Me.OniCERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iLIC", DbType:="Decimal(18,0)")>  _
	Public Property iLIC() As Decimal
		Get
			Return Me._iLIC
		End Get
		Set
			If ((Me._iLIC = value)  _
						= false) Then
				Me.OniLICChanging(value)
				Me.SendPropertyChanging
				Me._iLIC = value
				Me.SendPropertyChanged("iLIC")
				Me.OniLICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iHAR", DbType:="Decimal(18,0)")>  _
	Public Property iHAR() As Decimal
		Get
			Return Me._iHAR
		End Get
		Set
			If ((Me._iHAR = value)  _
						= false) Then
				Me.OniHARChanging(value)
				Me.SendPropertyChanging
				Me._iHAR = value
				Me.SendPropertyChanged("iHAR")
				Me.OniHARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iCAR", DbType:="Decimal(18,0)")>  _
	Public Property iCAR() As Decimal
		Get
			Return Me._iCAR
		End Get
		Set
			If ((Me._iCAR = value)  _
						= false) Then
				Me.OniCARChanging(value)
				Me.SendPropertyChanging
				Me._iCAR = value
				Me.SendPropertyChanged("iCAR")
				Me.OniCARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iFEP", DbType:="Decimal(18,0)")>  _
	Public Property iFEP() As Decimal
		Get
			Return Me._iFEP
		End Get
		Set
			If ((Me._iFEP = value)  _
						= false) Then
				Me.OniFEPChanging(value)
				Me.SendPropertyChanging
				Me._iFEP = value
				Me.SendPropertyChanged("iFEP")
				Me.OniFEPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iTAB", DbType:="Decimal(18,0)")>  _
	Public Property iTAB() As Decimal
		Get
			Return Me._iTAB
		End Get
		Set
			If ((Me._iTAB = value)  _
						= false) Then
				Me.OniTABChanging(value)
				Me.SendPropertyChanging
				Me._iTAB = value
				Me.SendPropertyChanged("iTAB")
				Me.OniTABChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iLOG", DbType:="Decimal(18,0)")>  _
	Public Property iLOG() As Decimal
		Get
			Return Me._iLOG
		End Get
		Set
			If ((Me._iLOG = value)  _
						= false) Then
				Me.OniLOGChanging(value)
				Me.SendPropertyChanging
				Me._iLOG = value
				Me.SendPropertyChanged("iLOG")
				Me.OniLOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iOTRO", DbType:="Decimal(18,0)")>  _
	Public Property iOTRO() As Decimal
		Get
			Return Me._iOTRO
		End Get
		Set
			If ((Me._iOTRO = value)  _
						= false) Then
				Me.OniOTROChanging(value)
				Me.SendPropertyChanging
				Me._iOTRO = value
				Me.SendPropertyChanged("iOTRO")
				Me.OniOTROChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total", DbType:="Float")>  _
	Public Property Total() As Double
		Get
			Return Me._Total
		End Get
		Set
			If ((Me._Total = value)  _
						= false) Then
				Me.OnTotalChanging(value)
				Me.SendPropertyChanging
				Me._Total = value
				Me.SendPropertyChanged("Total")
				Me.OnTotalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RutTransporte", DbType:="VarChar(12)")>  _
	Public Property RutTransporte() As String
		Get
			Return Me._RutTransporte
		End Get
		Set
			If (String.Equals(Me._RutTransporte, value) = false) Then
				Me.OnRutTransporteChanging(value)
				Me.SendPropertyChanging
				Me._RutTransporte = value
				Me.SendPropertyChanged("RutTransporte")
				Me.OnRutTransporteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreTransporte", DbType:="VarChar(50)")>  _
	Public Property NombreTransporte() As String
		Get
			Return Me._NombreTransporte
		End Get
		Set
			If (String.Equals(Me._NombreTransporte, value) = false) Then
				Me.OnNombreTransporteChanging(value)
				Me.SendPropertyChanging
				Me._NombreTransporte = value
				Me.SendPropertyChanged("NombreTransporte")
				Me.OnNombreTransporteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RutChofer", DbType:="VarChar(12)")>  _
	Public Property RutChofer() As String
		Get
			Return Me._RutChofer
		End Get
		Set
			If (String.Equals(Me._RutChofer, value) = false) Then
				Me.OnRutChoferChanging(value)
				Me.SendPropertyChanging
				Me._RutChofer = value
				Me.SendPropertyChanged("RutChofer")
				Me.OnRutChoferChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreChofer", DbType:="VarChar(50)")>  _
	Public Property NombreChofer() As String
		Get
			Return Me._NombreChofer
		End Get
		Set
			If (String.Equals(Me._NombreChofer, value) = false) Then
				Me.OnNombreChoferChanging(value)
				Me.SendPropertyChanging
				Me._NombreChofer = value
				Me.SendPropertyChanged("NombreChofer")
				Me.OnNombreChoferChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PatenteMovil", DbType:="VarChar(20)")>  _
	Public Property PatenteMovil() As String
		Get
			Return Me._PatenteMovil
		End Get
		Set
			If (String.Equals(Me._PatenteMovil, value) = false) Then
				Me.OnPatenteMovilChanging(value)
				Me.SendPropertyChanging
				Me._PatenteMovil = value
				Me.SendPropertyChanged("PatenteMovil")
				Me.OnPatenteMovilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTE", DbType:="Bit")>  _
	Public Property DTE() As System.Nullable(Of Boolean)
		Get
			Return Me._DTE
		End Get
		Set
			If (Me._DTE.Equals(value) = false) Then
				Me.OnDTEChanging(value)
				Me.SendPropertyChanging
				Me._DTE = value
				Me.SendPropertyChanged("DTE")
				Me.OnDTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Firma", DbType:="Image", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Firma() As System.Data.Linq.Binary
		Get
			Return Me._Firma
		End Get
		Set
			If (Object.Equals(Me._Firma, value) = false) Then
				Me.OnFirmaChanging(value)
				Me.SendPropertyChanging
				Me._Firma = value
				Me.SendPropertyChanged("Firma")
				Me.OnFirmaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TED", DbType:="VarChar(2000)")>  _
	Public Property TED() As String
		Get
			Return Me._TED
		End Get
		Set
			If (String.Equals(Me._TED, value) = false) Then
				Me.OnTEDChanging(value)
				Me.SendPropertyChanging
				Me._TED = value
				Me.SendPropertyChanged("TED")
				Me.OnTEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_DTE", DbType:="Decimal(18,0)")>  _
	Public Property STATUS_DTE() As System.Nullable(Of Decimal)
		Get
			Return Me._STATUS_DTE
		End Get
		Set
			If (Me._STATUS_DTE.Equals(value) = false) Then
				Me.OnSTATUS_DTEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_DTE = value
				Me.SendPropertyChanged("STATUS_DTE")
				Me.OnSTATUS_DTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockTraspasado", DbType:="Bit")>  _
	Public Property StockTraspasado() As System.Nullable(Of Boolean)
		Get
			Return Me._StockTraspasado
		End Get
		Set
			If (Me._StockTraspasado.Equals(value) = false) Then
				Me.OnStockTraspasadoChanging(value)
				Me.SendPropertyChanging
				Me._StockTraspasado = value
				Me.SendPropertyChanged("StockTraspasado")
				Me.OnStockTraspasadoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Bodegas")>  _
Partial Public Class Bodegas
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Bodega As Decimal
	
	Private _NombreBodega As String
	
	Private _Local As System.Nullable(Of Decimal)
	
	Private _Principal As System.Nullable(Of Boolean)
	
	Private _Despacho As System.Nullable(Of Boolean)
	
	Private _Movil As System.Nullable(Of Boolean)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBodegaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBodegaChanged()
    End Sub
    Partial Private Sub OnNombreBodegaChanging(value As String)
    End Sub
    Partial Private Sub OnNombreBodegaChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnPrincipalChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPrincipalChanged()
    End Sub
    Partial Private Sub OnDespachoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDespachoChanged()
    End Sub
    Partial Private Sub OnMovilChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnMovilChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bodega", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Bodega() As Decimal
		Get
			Return Me._Bodega
		End Get
		Set
			If ((Me._Bodega = value)  _
						= false) Then
				Me.OnBodegaChanging(value)
				Me.SendPropertyChanging
				Me._Bodega = value
				Me.SendPropertyChanged("Bodega")
				Me.OnBodegaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreBodega", DbType:="NChar(30)")>  _
	Public Property NombreBodega() As String
		Get
			Return Me._NombreBodega
		End Get
		Set
			If (String.Equals(Me._NombreBodega, value) = false) Then
				Me.OnNombreBodegaChanging(value)
				Me.SendPropertyChanging
				Me._NombreBodega = value
				Me.SendPropertyChanged("NombreBodega")
				Me.OnNombreBodegaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0)")>  _
	Public Property Local() As System.Nullable(Of Decimal)
		Get
			Return Me._Local
		End Get
		Set
			If (Me._Local.Equals(value) = false) Then
				Me.OnLocalChanging(value)
				Me.SendPropertyChanging
				Me._Local = value
				Me.SendPropertyChanged("Local")
				Me.OnLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Principal", DbType:="Bit")>  _
	Public Property Principal() As System.Nullable(Of Boolean)
		Get
			Return Me._Principal
		End Get
		Set
			If (Me._Principal.Equals(value) = false) Then
				Me.OnPrincipalChanging(value)
				Me.SendPropertyChanging
				Me._Principal = value
				Me.SendPropertyChanged("Principal")
				Me.OnPrincipalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Despacho", DbType:="Bit")>  _
	Public Property Despacho() As System.Nullable(Of Boolean)
		Get
			Return Me._Despacho
		End Get
		Set
			If (Me._Despacho.Equals(value) = false) Then
				Me.OnDespachoChanging(value)
				Me.SendPropertyChanging
				Me._Despacho = value
				Me.SendPropertyChanged("Despacho")
				Me.OnDespachoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Movil", DbType:="Bit")>  _
	Public Property Movil() As System.Nullable(Of Boolean)
		Get
			Return Me._Movil
		End Get
		Set
			If (Me._Movil.Equals(value) = false) Then
				Me.OnMovilChanging(value)
				Me.SendPropertyChanging
				Me._Movil = value
				Me.SendPropertyChanged("Movil")
				Me.OnMovilChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Unidades")>  _
Partial Public Class Unidades
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Unidad As String
	
	Private _DescUnidad As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUnidadChanging(value As String)
    End Sub
    Partial Private Sub OnUnidadChanged()
    End Sub
    Partial Private Sub OnDescUnidadChanging(value As String)
    End Sub
    Partial Private Sub OnDescUnidadChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Unidad", DbType:="VarChar(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Unidad() As String
		Get
			Return Me._Unidad
		End Get
		Set
			If (String.Equals(Me._Unidad, value) = false) Then
				Me.OnUnidadChanging(value)
				Me.SendPropertyChanging
				Me._Unidad = value
				Me.SendPropertyChanged("Unidad")
				Me.OnUnidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescUnidad", DbType:="VarChar(30)")>  _
	Public Property DescUnidad() As String
		Get
			Return Me._DescUnidad
		End Get
		Set
			If (String.Equals(Me._DescUnidad, value) = false) Then
				Me.OnDescUnidadChanging(value)
				Me.SendPropertyChanging
				Me._DescUnidad = value
				Me.SendPropertyChanged("DescUnidad")
				Me.OnDescUnidadChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TipoDoc")>  _
Partial Public Class TipoDoc
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TipoDoc As String
	
	Private _DescTipoDoc As String
	
	Private _Electronica As System.Nullable(Of Boolean)
	
	Private _Contable As System.Nullable(Of Boolean)
	
	Private _Filtro As String
	
	Private _Modo As String
	
	Private _Facturable As System.Nullable(Of Boolean)
	
	Private _Emision As System.Nullable(Of Boolean)
	
	Private _Cod_SII As System.Nullable(Of Decimal)
	
	Private _Nombre_Documento As String
	
	Private _Pagos As System.Nullable(Of Boolean)
	
	Private _Anula As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnDescTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnDescTipoDocChanged()
    End Sub
    Partial Private Sub OnElectronicaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnElectronicaChanged()
    End Sub
    Partial Private Sub OnContableChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnContableChanged()
    End Sub
    Partial Private Sub OnFiltroChanging(value As String)
    End Sub
    Partial Private Sub OnFiltroChanged()
    End Sub
    Partial Private Sub OnModoChanging(value As String)
    End Sub
    Partial Private Sub OnModoChanged()
    End Sub
    Partial Private Sub OnFacturableChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFacturableChanged()
    End Sub
    Partial Private Sub OnEmisionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnEmisionChanged()
    End Sub
    Partial Private Sub OnCod_SIIChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCod_SIIChanged()
    End Sub
    Partial Private Sub OnNombre_DocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_DocumentoChanged()
    End Sub
    Partial Private Sub OnPagosChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPagosChanged()
    End Sub
    Partial Private Sub OnAnulaChanging(value As String)
    End Sub
    Partial Private Sub OnAnulaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property TipoDoc() As String
		Get
			Return Me._TipoDoc
		End Get
		Set
			If (String.Equals(Me._TipoDoc, value) = false) Then
				Me.OnTipoDocChanging(value)
				Me.SendPropertyChanging
				Me._TipoDoc = value
				Me.SendPropertyChanged("TipoDoc")
				Me.OnTipoDocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescTipoDoc", DbType:="VarChar(30)")>  _
	Public Property DescTipoDoc() As String
		Get
			Return Me._DescTipoDoc
		End Get
		Set
			If (String.Equals(Me._DescTipoDoc, value) = false) Then
				Me.OnDescTipoDocChanging(value)
				Me.SendPropertyChanging
				Me._DescTipoDoc = value
				Me.SendPropertyChanged("DescTipoDoc")
				Me.OnDescTipoDocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Electronica", DbType:="Bit")>  _
	Public Property Electronica() As System.Nullable(Of Boolean)
		Get
			Return Me._Electronica
		End Get
		Set
			If (Me._Electronica.Equals(value) = false) Then
				Me.OnElectronicaChanging(value)
				Me.SendPropertyChanging
				Me._Electronica = value
				Me.SendPropertyChanged("Electronica")
				Me.OnElectronicaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contable", DbType:="Bit")>  _
	Public Property Contable() As System.Nullable(Of Boolean)
		Get
			Return Me._Contable
		End Get
		Set
			If (Me._Contable.Equals(value) = false) Then
				Me.OnContableChanging(value)
				Me.SendPropertyChanging
				Me._Contable = value
				Me.SendPropertyChanged("Contable")
				Me.OnContableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Filtro", DbType:="VarChar(1)")>  _
	Public Property Filtro() As String
		Get
			Return Me._Filtro
		End Get
		Set
			If (String.Equals(Me._Filtro, value) = false) Then
				Me.OnFiltroChanging(value)
				Me.SendPropertyChanging
				Me._Filtro = value
				Me.SendPropertyChanged("Filtro")
				Me.OnFiltroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modo", DbType:="VarChar(1)")>  _
	Public Property Modo() As String
		Get
			Return Me._Modo
		End Get
		Set
			If (String.Equals(Me._Modo, value) = false) Then
				Me.OnModoChanging(value)
				Me.SendPropertyChanging
				Me._Modo = value
				Me.SendPropertyChanged("Modo")
				Me.OnModoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Facturable", DbType:="Bit")>  _
	Public Property Facturable() As System.Nullable(Of Boolean)
		Get
			Return Me._Facturable
		End Get
		Set
			If (Me._Facturable.Equals(value) = false) Then
				Me.OnFacturableChanging(value)
				Me.SendPropertyChanging
				Me._Facturable = value
				Me.SendPropertyChanged("Facturable")
				Me.OnFacturableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Emision", DbType:="Bit")>  _
	Public Property Emision() As System.Nullable(Of Boolean)
		Get
			Return Me._Emision
		End Get
		Set
			If (Me._Emision.Equals(value) = false) Then
				Me.OnEmisionChanging(value)
				Me.SendPropertyChanging
				Me._Emision = value
				Me.SendPropertyChanged("Emision")
				Me.OnEmisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cod_SII", DbType:="Decimal(18,0)")>  _
	Public Property Cod_SII() As System.Nullable(Of Decimal)
		Get
			Return Me._Cod_SII
		End Get
		Set
			If (Me._Cod_SII.Equals(value) = false) Then
				Me.OnCod_SIIChanging(value)
				Me.SendPropertyChanging
				Me._Cod_SII = value
				Me.SendPropertyChanged("Cod_SII")
				Me.OnCod_SIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre_Documento", DbType:="VarChar(50)")>  _
	Public Property Nombre_Documento() As String
		Get
			Return Me._Nombre_Documento
		End Get
		Set
			If (String.Equals(Me._Nombre_Documento, value) = false) Then
				Me.OnNombre_DocumentoChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Documento = value
				Me.SendPropertyChanged("Nombre_Documento")
				Me.OnNombre_DocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pagos", DbType:="Bit")>  _
	Public Property Pagos() As System.Nullable(Of Boolean)
		Get
			Return Me._Pagos
		End Get
		Set
			If (Me._Pagos.Equals(value) = false) Then
				Me.OnPagosChanging(value)
				Me.SendPropertyChanging
				Me._Pagos = value
				Me.SendPropertyChanged("Pagos")
				Me.OnPagosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Anula", DbType:="VarChar(2)")>  _
	Public Property Anula() As String
		Get
			Return Me._Anula
		End Get
		Set
			If (String.Equals(Me._Anula, value) = false) Then
				Me.OnAnulaChanging(value)
				Me.SendPropertyChanging
				Me._Anula = value
				Me.SendPropertyChanged("Anula")
				Me.OnAnulaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Parametros")>  _
Partial Public Class Parametros
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Sistema As String
	
	Private _Clave As String
	
	Private _Empresa As String
	
	Private _Rut As String
	
	Private _Fantasia As String
	
	Private _Direccion As String
	
	Private _Ciudad As String
	
	Private _Representante As String
	
	Private _Telefonos As String
	
	Private _Email As String
	
	Private _Horario As String
	
	Private _SLogan As String
	
	Private _Iva As Double
	
	Private _Doc_Electronicos As Boolean
	
	Private _Logo1 As System.Data.Linq.Binary
	
	Private _Logo2 As System.Data.Linq.Binary
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSistemaChanging(value As String)
    End Sub
    Partial Private Sub OnSistemaChanged()
    End Sub
    Partial Private Sub OnClaveChanging(value As String)
    End Sub
    Partial Private Sub OnClaveChanged()
    End Sub
    Partial Private Sub OnEmpresaChanging(value As String)
    End Sub
    Partial Private Sub OnEmpresaChanged()
    End Sub
    Partial Private Sub OnRutChanging(value As String)
    End Sub
    Partial Private Sub OnRutChanged()
    End Sub
    Partial Private Sub OnFantasiaChanging(value As String)
    End Sub
    Partial Private Sub OnFantasiaChanged()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnCiudadChanging(value As String)
    End Sub
    Partial Private Sub OnCiudadChanged()
    End Sub
    Partial Private Sub OnRepresentanteChanging(value As String)
    End Sub
    Partial Private Sub OnRepresentanteChanged()
    End Sub
    Partial Private Sub OnTelefonosChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonosChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnHorarioChanging(value As String)
    End Sub
    Partial Private Sub OnHorarioChanged()
    End Sub
    Partial Private Sub OnSLoganChanging(value As String)
    End Sub
    Partial Private Sub OnSLoganChanged()
    End Sub
    Partial Private Sub OnIvaChanging(value As Double)
    End Sub
    Partial Private Sub OnIvaChanged()
    End Sub
    Partial Private Sub OnDoc_ElectronicosChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDoc_ElectronicosChanged()
    End Sub
    Partial Private Sub OnLogo1Changing(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnLogo1Changed()
    End Sub
    Partial Private Sub OnLogo2Changing(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnLogo2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sistema", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Sistema() As String
		Get
			Return Me._Sistema
		End Get
		Set
			If (String.Equals(Me._Sistema, value) = false) Then
				Me.OnSistemaChanging(value)
				Me.SendPropertyChanging
				Me._Sistema = value
				Me.SendPropertyChanged("Sistema")
				Me.OnSistemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Clave", DbType:="VarChar(1)", CanBeNull:=false)>  _
	Public Property Clave() As String
		Get
			Return Me._Clave
		End Get
		Set
			If (String.Equals(Me._Clave, value) = false) Then
				Me.OnClaveChanging(value)
				Me.SendPropertyChanging
				Me._Clave = value
				Me.SendPropertyChanged("Clave")
				Me.OnClaveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Empresa", DbType:="VarChar(100)", CanBeNull:=false)>  _
	Public Property Empresa() As String
		Get
			Return Me._Empresa
		End Get
		Set
			If (String.Equals(Me._Empresa, value) = false) Then
				Me.OnEmpresaChanging(value)
				Me.SendPropertyChanging
				Me._Empresa = value
				Me.SendPropertyChanged("Empresa")
				Me.OnEmpresaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rut", DbType:="VarChar(12)", CanBeNull:=false)>  _
	Public Property Rut() As String
		Get
			Return Me._Rut
		End Get
		Set
			If (String.Equals(Me._Rut, value) = false) Then
				Me.OnRutChanging(value)
				Me.SendPropertyChanging
				Me._Rut = value
				Me.SendPropertyChanged("Rut")
				Me.OnRutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fantasia", DbType:="VarChar(50)", CanBeNull:=false)>  _
	Public Property Fantasia() As String
		Get
			Return Me._Fantasia
		End Get
		Set
			If (String.Equals(Me._Fantasia, value) = false) Then
				Me.OnFantasiaChanging(value)
				Me.SendPropertyChanging
				Me._Fantasia = value
				Me.SendPropertyChanged("Fantasia")
				Me.OnFantasiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Direccion", DbType:="VarChar(500)", CanBeNull:=false)>  _
	Public Property Direccion() As String
		Get
			Return Me._Direccion
		End Get
		Set
			If (String.Equals(Me._Direccion, value) = false) Then
				Me.OnDireccionChanging(value)
				Me.SendPropertyChanging
				Me._Direccion = value
				Me.SendPropertyChanged("Direccion")
				Me.OnDireccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ciudad", DbType:="VarChar(3)", CanBeNull:=false)>  _
	Public Property Ciudad() As String
		Get
			Return Me._Ciudad
		End Get
		Set
			If (String.Equals(Me._Ciudad, value) = false) Then
				Me.OnCiudadChanging(value)
				Me.SendPropertyChanging
				Me._Ciudad = value
				Me.SendPropertyChanged("Ciudad")
				Me.OnCiudadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Representante", DbType:="VarChar(100)", CanBeNull:=false)>  _
	Public Property Representante() As String
		Get
			Return Me._Representante
		End Get
		Set
			If (String.Equals(Me._Representante, value) = false) Then
				Me.OnRepresentanteChanging(value)
				Me.SendPropertyChanging
				Me._Representante = value
				Me.SendPropertyChanged("Representante")
				Me.OnRepresentanteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telefonos", DbType:="VarChar(100)", CanBeNull:=false)>  _
	Public Property Telefonos() As String
		Get
			Return Me._Telefonos
		End Get
		Set
			If (String.Equals(Me._Telefonos, value) = false) Then
				Me.OnTelefonosChanging(value)
				Me.SendPropertyChanging
				Me._Telefonos = value
				Me.SendPropertyChanged("Telefonos")
				Me.OnTelefonosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100)", CanBeNull:=false)>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Horario", DbType:="VarChar(250)", CanBeNull:=false)>  _
	Public Property Horario() As String
		Get
			Return Me._Horario
		End Get
		Set
			If (String.Equals(Me._Horario, value) = false) Then
				Me.OnHorarioChanging(value)
				Me.SendPropertyChanging
				Me._Horario = value
				Me.SendPropertyChanged("Horario")
				Me.OnHorarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SLogan", DbType:="VarChar(200)", CanBeNull:=false)>  _
	Public Property SLogan() As String
		Get
			Return Me._SLogan
		End Get
		Set
			If (String.Equals(Me._SLogan, value) = false) Then
				Me.OnSLoganChanging(value)
				Me.SendPropertyChanging
				Me._SLogan = value
				Me.SendPropertyChanged("SLogan")
				Me.OnSLoganChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Iva", DbType:="Float")>  _
	Public Property Iva() As Double
		Get
			Return Me._Iva
		End Get
		Set
			If ((Me._Iva = value)  _
						= false) Then
				Me.OnIvaChanging(value)
				Me.SendPropertyChanging
				Me._Iva = value
				Me.SendPropertyChanged("Iva")
				Me.OnIvaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Doc_Electronicos", DbType:="Bit")>  _
	Public Property Doc_Electronicos() As Boolean
		Get
			Return Me._Doc_Electronicos
		End Get
		Set
			If ((Me._Doc_Electronicos = value)  _
						= false) Then
				Me.OnDoc_ElectronicosChanging(value)
				Me.SendPropertyChanging
				Me._Doc_Electronicos = value
				Me.SendPropertyChanged("Doc_Electronicos")
				Me.OnDoc_ElectronicosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Logo1", DbType:="Image", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Logo1() As System.Data.Linq.Binary
		Get
			Return Me._Logo1
		End Get
		Set
			If (Object.Equals(Me._Logo1, value) = false) Then
				Me.OnLogo1Changing(value)
				Me.SendPropertyChanging
				Me._Logo1 = value
				Me.SendPropertyChanged("Logo1")
				Me.OnLogo1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Logo2", DbType:="Image", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Logo2() As System.Data.Linq.Binary
		Get
			Return Me._Logo2
		End Get
		Set
			If (Object.Equals(Me._Logo2, value) = false) Then
				Me.OnLogo2Changing(value)
				Me.SendPropertyChanging
				Me._Logo2 = value
				Me.SendPropertyChanged("Logo2")
				Me.OnLogo2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Articulos")>  _
Partial Public Class Articulos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Articulo As String
	
	Private _Descripcion As String
	
	Private _Unidad As String
	
	Private _Familia As Decimal
	
	Private _SubFamilia As Decimal
	
	Private _Marca As String
	
	Private _SKU As String
	
	Private _Tipo As String
	
	Private _Costo As Double
	
	Private _PVenta As Double
	
	Private _Oferta As Boolean
	
	Private _MaxDescuento As Double
	
	Private _ActivoFijo As Boolean
	
	Private _Ano As Decimal
	
	Private _Grupo As String
	
	Private _Categoria As String
	
	Private _Estado As Char
	
	Private _iIVA As Decimal
	
	Private _iEXE As Boolean
	
	Private _iMIN As Decimal
	
	Private _iBEB As Decimal
	
	Private _iVIN As Decimal
	
	Private _iCER As Decimal
	
	Private _iLIC As Decimal
	
	Private _iCAR As Decimal
	
	Private _iHAR As Decimal
	
	Private _iTAB As Decimal
	
	Private _iFEP As Decimal
	
	Private _iLOG As Decimal
	
	Private _iOTRO As Decimal
	
	Private _DetalleProducto As String
	
	Private _Id As Decimal
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnArticuloChanging(value As String)
    End Sub
    Partial Private Sub OnArticuloChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnUnidadChanging(value As String)
    End Sub
    Partial Private Sub OnUnidadChanged()
    End Sub
    Partial Private Sub OnFamiliaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnFamiliaChanged()
    End Sub
    Partial Private Sub OnSubFamiliaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnSubFamiliaChanged()
    End Sub
    Partial Private Sub OnMarcaChanging(value As String)
    End Sub
    Partial Private Sub OnMarcaChanged()
    End Sub
    Partial Private Sub OnSKUChanging(value As String)
    End Sub
    Partial Private Sub OnSKUChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnCostoChanging(value As Double)
    End Sub
    Partial Private Sub OnCostoChanged()
    End Sub
    Partial Private Sub OnPVentaChanging(value As Double)
    End Sub
    Partial Private Sub OnPVentaChanged()
    End Sub
    Partial Private Sub OnOfertaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOfertaChanged()
    End Sub
    Partial Private Sub OnMaxDescuentoChanging(value As Double)
    End Sub
    Partial Private Sub OnMaxDescuentoChanged()
    End Sub
    Partial Private Sub OnActivoFijoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoFijoChanged()
    End Sub
    Partial Private Sub OnAnoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAnoChanged()
    End Sub
    Partial Private Sub OnGrupoChanging(value As String)
    End Sub
    Partial Private Sub OnGrupoChanged()
    End Sub
    Partial Private Sub OnCategoriaChanging(value As String)
    End Sub
    Partial Private Sub OnCategoriaChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As Char)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OniIVAChanging(value As Decimal)
    End Sub
    Partial Private Sub OniIVAChanged()
    End Sub
    Partial Private Sub OniEXEChanging(value As Boolean)
    End Sub
    Partial Private Sub OniEXEChanged()
    End Sub
    Partial Private Sub OniMINChanging(value As Decimal)
    End Sub
    Partial Private Sub OniMINChanged()
    End Sub
    Partial Private Sub OniBEBChanging(value As Decimal)
    End Sub
    Partial Private Sub OniBEBChanged()
    End Sub
    Partial Private Sub OniVINChanging(value As Decimal)
    End Sub
    Partial Private Sub OniVINChanged()
    End Sub
    Partial Private Sub OniCERChanging(value As Decimal)
    End Sub
    Partial Private Sub OniCERChanged()
    End Sub
    Partial Private Sub OniLICChanging(value As Decimal)
    End Sub
    Partial Private Sub OniLICChanged()
    End Sub
    Partial Private Sub OniCARChanging(value As Decimal)
    End Sub
    Partial Private Sub OniCARChanged()
    End Sub
    Partial Private Sub OniHARChanging(value As Decimal)
    End Sub
    Partial Private Sub OniHARChanged()
    End Sub
    Partial Private Sub OniTABChanging(value As Decimal)
    End Sub
    Partial Private Sub OniTABChanged()
    End Sub
    Partial Private Sub OniFEPChanging(value As Decimal)
    End Sub
    Partial Private Sub OniFEPChanged()
    End Sub
    Partial Private Sub OniLOGChanging(value As Decimal)
    End Sub
    Partial Private Sub OniLOGChanged()
    End Sub
    Partial Private Sub OniOTROChanging(value As Decimal)
    End Sub
    Partial Private Sub OniOTROChanged()
    End Sub
    Partial Private Sub OnDetalleProductoChanging(value As String)
    End Sub
    Partial Private Sub OnDetalleProductoChanged()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Articulo() As String
		Get
			Return Me._Articulo
		End Get
		Set
			If (String.Equals(Me._Articulo, value) = false) Then
				Me.OnArticuloChanging(value)
				Me.SendPropertyChanging
				Me._Articulo = value
				Me.SendPropertyChanged("Articulo")
				Me.OnArticuloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(200)", CanBeNull:=false)>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Unidad", DbType:="VarChar(2)", CanBeNull:=false)>  _
	Public Property Unidad() As String
		Get
			Return Me._Unidad
		End Get
		Set
			If (String.Equals(Me._Unidad, value) = false) Then
				Me.OnUnidadChanging(value)
				Me.SendPropertyChanging
				Me._Unidad = value
				Me.SendPropertyChanged("Unidad")
				Me.OnUnidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Familia", DbType:="Decimal(18,0)")>  _
	Public Property Familia() As Decimal
		Get
			Return Me._Familia
		End Get
		Set
			If ((Me._Familia = value)  _
						= false) Then
				Me.OnFamiliaChanging(value)
				Me.SendPropertyChanging
				Me._Familia = value
				Me.SendPropertyChanged("Familia")
				Me.OnFamiliaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubFamilia", DbType:="Decimal(18,0)")>  _
	Public Property SubFamilia() As Decimal
		Get
			Return Me._SubFamilia
		End Get
		Set
			If ((Me._SubFamilia = value)  _
						= false) Then
				Me.OnSubFamiliaChanging(value)
				Me.SendPropertyChanging
				Me._SubFamilia = value
				Me.SendPropertyChanged("SubFamilia")
				Me.OnSubFamiliaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Marca", DbType:="VarChar(50)", CanBeNull:=false)>  _
	Public Property Marca() As String
		Get
			Return Me._Marca
		End Get
		Set
			If (String.Equals(Me._Marca, value) = false) Then
				Me.OnMarcaChanging(value)
				Me.SendPropertyChanging
				Me._Marca = value
				Me.SendPropertyChanged("Marca")
				Me.OnMarcaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SKU", DbType:="VarChar(50)", CanBeNull:=false)>  _
	Public Property SKU() As String
		Get
			Return Me._SKU
		End Get
		Set
			If (String.Equals(Me._SKU, value) = false) Then
				Me.OnSKUChanging(value)
				Me.SendPropertyChanging
				Me._SKU = value
				Me.SendPropertyChanged("SKU")
				Me.OnSKUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="VarChar(50)", CanBeNull:=false)>  _
	Public Property Tipo() As String
		Get
			Return Me._Tipo
		End Get
		Set
			If (String.Equals(Me._Tipo, value) = false) Then
				Me.OnTipoChanging(value)
				Me.SendPropertyChanging
				Me._Tipo = value
				Me.SendPropertyChanged("Tipo")
				Me.OnTipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Costo", DbType:="Float")>  _
	Public Property Costo() As Double
		Get
			Return Me._Costo
		End Get
		Set
			If ((Me._Costo = value)  _
						= false) Then
				Me.OnCostoChanging(value)
				Me.SendPropertyChanging
				Me._Costo = value
				Me.SendPropertyChanged("Costo")
				Me.OnCostoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVenta", DbType:="Float")>  _
	Public Property PVenta() As Double
		Get
			Return Me._PVenta
		End Get
		Set
			If ((Me._PVenta = value)  _
						= false) Then
				Me.OnPVentaChanging(value)
				Me.SendPropertyChanging
				Me._PVenta = value
				Me.SendPropertyChanged("PVenta")
				Me.OnPVentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Oferta", DbType:="Bit")>  _
	Public Property Oferta() As Boolean
		Get
			Return Me._Oferta
		End Get
		Set
			If ((Me._Oferta = value)  _
						= false) Then
				Me.OnOfertaChanging(value)
				Me.SendPropertyChanging
				Me._Oferta = value
				Me.SendPropertyChanged("Oferta")
				Me.OnOfertaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxDescuento", DbType:="Float")>  _
	Public Property MaxDescuento() As Double
		Get
			Return Me._MaxDescuento
		End Get
		Set
			If ((Me._MaxDescuento = value)  _
						= false) Then
				Me.OnMaxDescuentoChanging(value)
				Me.SendPropertyChanging
				Me._MaxDescuento = value
				Me.SendPropertyChanged("MaxDescuento")
				Me.OnMaxDescuentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActivoFijo", DbType:="Bit")>  _
	Public Property ActivoFijo() As Boolean
		Get
			Return Me._ActivoFijo
		End Get
		Set
			If ((Me._ActivoFijo = value)  _
						= false) Then
				Me.OnActivoFijoChanging(value)
				Me.SendPropertyChanging
				Me._ActivoFijo = value
				Me.SendPropertyChanged("ActivoFijo")
				Me.OnActivoFijoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ano", DbType:="Decimal(4,0)")>  _
	Public Property Ano() As Decimal
		Get
			Return Me._Ano
		End Get
		Set
			If ((Me._Ano = value)  _
						= false) Then
				Me.OnAnoChanging(value)
				Me.SendPropertyChanging
				Me._Ano = value
				Me.SendPropertyChanged("Ano")
				Me.OnAnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grupo", DbType:="VarChar(100)", CanBeNull:=false)>  _
	Public Property Grupo() As String
		Get
			Return Me._Grupo
		End Get
		Set
			If (String.Equals(Me._Grupo, value) = false) Then
				Me.OnGrupoChanging(value)
				Me.SendPropertyChanging
				Me._Grupo = value
				Me.SendPropertyChanged("Grupo")
				Me.OnGrupoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Categoria", DbType:="VarChar(100)", CanBeNull:=false)>  _
	Public Property Categoria() As String
		Get
			Return Me._Categoria
		End Get
		Set
			If (String.Equals(Me._Categoria, value) = false) Then
				Me.OnCategoriaChanging(value)
				Me.SendPropertyChanging
				Me._Categoria = value
				Me.SendPropertyChanged("Categoria")
				Me.OnCategoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="Char(1)")>  _
	Public Property Estado() As Char
		Get
			Return Me._Estado
		End Get
		Set
			If ((Me._Estado = value)  _
						= false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iIVA", DbType:="Decimal(18,2)")>  _
	Public Property iIVA() As Decimal
		Get
			Return Me._iIVA
		End Get
		Set
			If ((Me._iIVA = value)  _
						= false) Then
				Me.OniIVAChanging(value)
				Me.SendPropertyChanging
				Me._iIVA = value
				Me.SendPropertyChanged("iIVA")
				Me.OniIVAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iEXE", DbType:="Bit")>  _
	Public Property iEXE() As Boolean
		Get
			Return Me._iEXE
		End Get
		Set
			If ((Me._iEXE = value)  _
						= false) Then
				Me.OniEXEChanging(value)
				Me.SendPropertyChanging
				Me._iEXE = value
				Me.SendPropertyChanged("iEXE")
				Me.OniEXEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iMIN", DbType:="Decimal(18,2)")>  _
	Public Property iMIN() As Decimal
		Get
			Return Me._iMIN
		End Get
		Set
			If ((Me._iMIN = value)  _
						= false) Then
				Me.OniMINChanging(value)
				Me.SendPropertyChanging
				Me._iMIN = value
				Me.SendPropertyChanged("iMIN")
				Me.OniMINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iBEB", DbType:="Decimal(18,2)")>  _
	Public Property iBEB() As Decimal
		Get
			Return Me._iBEB
		End Get
		Set
			If ((Me._iBEB = value)  _
						= false) Then
				Me.OniBEBChanging(value)
				Me.SendPropertyChanging
				Me._iBEB = value
				Me.SendPropertyChanged("iBEB")
				Me.OniBEBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iVIN", DbType:="Decimal(18,2)")>  _
	Public Property iVIN() As Decimal
		Get
			Return Me._iVIN
		End Get
		Set
			If ((Me._iVIN = value)  _
						= false) Then
				Me.OniVINChanging(value)
				Me.SendPropertyChanging
				Me._iVIN = value
				Me.SendPropertyChanged("iVIN")
				Me.OniVINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iCER", DbType:="Decimal(18,2)")>  _
	Public Property iCER() As Decimal
		Get
			Return Me._iCER
		End Get
		Set
			If ((Me._iCER = value)  _
						= false) Then
				Me.OniCERChanging(value)
				Me.SendPropertyChanging
				Me._iCER = value
				Me.SendPropertyChanged("iCER")
				Me.OniCERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iLIC", DbType:="Decimal(18,2)")>  _
	Public Property iLIC() As Decimal
		Get
			Return Me._iLIC
		End Get
		Set
			If ((Me._iLIC = value)  _
						= false) Then
				Me.OniLICChanging(value)
				Me.SendPropertyChanging
				Me._iLIC = value
				Me.SendPropertyChanged("iLIC")
				Me.OniLICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iCAR", DbType:="Decimal(18,2)")>  _
	Public Property iCAR() As Decimal
		Get
			Return Me._iCAR
		End Get
		Set
			If ((Me._iCAR = value)  _
						= false) Then
				Me.OniCARChanging(value)
				Me.SendPropertyChanging
				Me._iCAR = value
				Me.SendPropertyChanged("iCAR")
				Me.OniCARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iHAR", DbType:="Decimal(18,2)")>  _
	Public Property iHAR() As Decimal
		Get
			Return Me._iHAR
		End Get
		Set
			If ((Me._iHAR = value)  _
						= false) Then
				Me.OniHARChanging(value)
				Me.SendPropertyChanging
				Me._iHAR = value
				Me.SendPropertyChanged("iHAR")
				Me.OniHARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iTAB", DbType:="Decimal(18,2)")>  _
	Public Property iTAB() As Decimal
		Get
			Return Me._iTAB
		End Get
		Set
			If ((Me._iTAB = value)  _
						= false) Then
				Me.OniTABChanging(value)
				Me.SendPropertyChanging
				Me._iTAB = value
				Me.SendPropertyChanged("iTAB")
				Me.OniTABChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iFEP", DbType:="Decimal(18,2)")>  _
	Public Property iFEP() As Decimal
		Get
			Return Me._iFEP
		End Get
		Set
			If ((Me._iFEP = value)  _
						= false) Then
				Me.OniFEPChanging(value)
				Me.SendPropertyChanging
				Me._iFEP = value
				Me.SendPropertyChanged("iFEP")
				Me.OniFEPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iLOG", DbType:="Decimal(18,2)")>  _
	Public Property iLOG() As Decimal
		Get
			Return Me._iLOG
		End Get
		Set
			If ((Me._iLOG = value)  _
						= false) Then
				Me.OniLOGChanging(value)
				Me.SendPropertyChanging
				Me._iLOG = value
				Me.SendPropertyChanged("iLOG")
				Me.OniLOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iOTRO", DbType:="Decimal(18,2)")>  _
	Public Property iOTRO() As Decimal
		Get
			Return Me._iOTRO
		End Get
		Set
			If ((Me._iOTRO = value)  _
						= false) Then
				Me.OniOTROChanging(value)
				Me.SendPropertyChanging
				Me._iOTRO = value
				Me.SendPropertyChanged("iOTRO")
				Me.OniOTROChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DetalleProducto", DbType:="VarChar(1000)", CanBeNull:=false)>  _
	Public Property DetalleProducto() As String
		Get
			Return Me._DetalleProducto
		End Get
		Set
			If (String.Equals(Me._DetalleProducto, value) = false) Then
				Me.OnDetalleProductoChanging(value)
				Me.SendPropertyChanging
				Me._DetalleProducto = value
				Me.SendPropertyChanged("DetalleProducto")
				Me.OnDetalleProductoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.Always, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property Id() As Decimal
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
