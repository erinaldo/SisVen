'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="SisVen")>  _
Partial Public Class SisVenDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertT_Maquinas(instance As T_Maquinas)
    End Sub
  Partial Private Sub UpdateT_Maquinas(instance As T_Maquinas)
    End Sub
  Partial Private Sub DeleteT_Maquinas(instance As T_Maquinas)
    End Sub
  Partial Private Sub InsertT_Clientes(instance As T_Clientes)
    End Sub
  Partial Private Sub UpdateT_Clientes(instance As T_Clientes)
    End Sub
  Partial Private Sub DeleteT_Clientes(instance As T_Clientes)
    End Sub
  Partial Private Sub InsertT_Ciudades(instance As T_Ciudades)
    End Sub
  Partial Private Sub UpdateT_Ciudades(instance As T_Ciudades)
    End Sub
  Partial Private Sub DeleteT_Ciudades(instance As T_Ciudades)
    End Sub
  Partial Private Sub InsertT_Comunas(instance As T_Comunas)
    End Sub
  Partial Private Sub UpdateT_Comunas(instance As T_Comunas)
    End Sub
  Partial Private Sub DeleteT_Comunas(instance As T_Comunas)
    End Sub
  Partial Private Sub InsertT_DocumentosG(instance As T_DocumentosG)
    End Sub
  Partial Private Sub UpdateT_DocumentosG(instance As T_DocumentosG)
    End Sub
  Partial Private Sub DeleteT_DocumentosG(instance As T_DocumentosG)
    End Sub
  Partial Private Sub InsertT_DocumentosD(instance As T_DocumentosD)
    End Sub
  Partial Private Sub UpdateT_DocumentosD(instance As T_DocumentosD)
    End Sub
  Partial Private Sub DeleteT_DocumentosD(instance As T_DocumentosD)
    End Sub
  Partial Private Sub InsertT_TipoDoc(instance As T_TipoDoc)
    End Sub
  Partial Private Sub UpdateT_TipoDoc(instance As T_TipoDoc)
    End Sub
  Partial Private Sub DeleteT_TipoDoc(instance As T_TipoDoc)
    End Sub
  Partial Private Sub InsertT_Estados(instance As T_Estados)
    End Sub
  Partial Private Sub UpdateT_Estados(instance As T_Estados)
    End Sub
  Partial Private Sub DeleteT_Estados(instance As T_Estados)
    End Sub
  Partial Private Sub InsertT_Stocks(instance As T_Stocks)
    End Sub
  Partial Private Sub UpdateT_Stocks(instance As T_Stocks)
    End Sub
  Partial Private Sub DeleteT_Stocks(instance As T_Stocks)
    End Sub
  Partial Private Sub InsertT_FPagos(instance As T_FPagos)
    End Sub
  Partial Private Sub UpdateT_FPagos(instance As T_FPagos)
    End Sub
  Partial Private Sub DeleteT_FPagos(instance As T_FPagos)
    End Sub
  Partial Private Sub InsertT_Usuarios(instance As T_Usuarios)
    End Sub
  Partial Private Sub UpdateT_Usuarios(instance As T_Usuarios)
    End Sub
  Partial Private Sub DeleteT_Usuarios(instance As T_Usuarios)
    End Sub
  Partial Private Sub InsertT_Articulos(instance As T_Articulos)
    End Sub
  Partial Private Sub UpdateT_Articulos(instance As T_Articulos)
    End Sub
  Partial Private Sub DeleteT_Articulos(instance As T_Articulos)
    End Sub
  Partial Private Sub InsertT_Unidades(instance As T_Unidades)
    End Sub
  Partial Private Sub UpdateT_Unidades(instance As T_Unidades)
    End Sub
  Partial Private Sub DeleteT_Unidades(instance As T_Unidades)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.SisVen.My.MySettings.Default.SisVenConnectionString1, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property T_Maquinas() As System.Data.Linq.Table(Of T_Maquinas)
		Get
			Return Me.GetTable(Of T_Maquinas)
		End Get
	End Property
	
	Public ReadOnly Property T_Clientes() As System.Data.Linq.Table(Of T_Clientes)
		Get
			Return Me.GetTable(Of T_Clientes)
		End Get
	End Property
	
	Public ReadOnly Property T_Ciudades() As System.Data.Linq.Table(Of T_Ciudades)
		Get
			Return Me.GetTable(Of T_Ciudades)
		End Get
	End Property
	
	Public ReadOnly Property T_Comunas() As System.Data.Linq.Table(Of T_Comunas)
		Get
			Return Me.GetTable(Of T_Comunas)
		End Get
	End Property
	
	Public ReadOnly Property T_DocumentosG() As System.Data.Linq.Table(Of T_DocumentosG)
		Get
			Return Me.GetTable(Of T_DocumentosG)
		End Get
	End Property
	
	Public ReadOnly Property T_DocumentosD() As System.Data.Linq.Table(Of T_DocumentosD)
		Get
			Return Me.GetTable(Of T_DocumentosD)
		End Get
	End Property
	
	Public ReadOnly Property T_TipoDoc() As System.Data.Linq.Table(Of T_TipoDoc)
		Get
			Return Me.GetTable(Of T_TipoDoc)
		End Get
	End Property
	
	Public ReadOnly Property T_Estados() As System.Data.Linq.Table(Of T_Estados)
		Get
			Return Me.GetTable(Of T_Estados)
		End Get
	End Property
	
	Public ReadOnly Property T_Stocks() As System.Data.Linq.Table(Of T_Stocks)
		Get
			Return Me.GetTable(Of T_Stocks)
		End Get
	End Property
	
	Public ReadOnly Property T_FPagos() As System.Data.Linq.Table(Of T_FPagos)
		Get
			Return Me.GetTable(Of T_FPagos)
		End Get
	End Property
	
	Public ReadOnly Property T_Usuarios() As System.Data.Linq.Table(Of T_Usuarios)
		Get
			Return Me.GetTable(Of T_Usuarios)
		End Get
	End Property
	
	Public ReadOnly Property T_Articulos() As System.Data.Linq.Table(Of T_Articulos)
		Get
			Return Me.GetTable(Of T_Articulos)
		End Get
	End Property
	
	Public ReadOnly Property T_Unidades() As System.Data.Linq.Table(Of T_Unidades)
		Get
			Return Me.GetTable(Of T_Unidades)
		End Get
	End Property
	
	Public ReadOnly Property V_DetalleDocumentos() As System.Data.Linq.Table(Of V_DetalleDocumentos)
		Get
			Return Me.GetTable(Of V_DetalleDocumentos)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Maquinas")>  _
Partial Public Class T_Maquinas
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As String
	
	Private _Marca As String
	
	Private _Modelo As String
	
	Private _Ubicacion As Decimal
	
	Private _Cliente As Decimal
	
	Private _Sucursal As String
	
	Private _NombreSucursal As String
	
	Private _Garantia As Decimal
	
	Private _Guia As Decimal
	
	Private _FechaAsignacion As Date
	
	Private _Territorio As String
	
	Private _Estado As Decimal
	
	Private _FechaRecuperacion As Date
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As String)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnMarcaChanging(value As String)
    End Sub
    Partial Private Sub OnMarcaChanged()
    End Sub
    Partial Private Sub OnModeloChanging(value As String)
    End Sub
    Partial Private Sub OnModeloChanged()
    End Sub
    Partial Private Sub OnUbicacionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnUbicacionChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As Decimal)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnSucursalChanging(value As String)
    End Sub
    Partial Private Sub OnSucursalChanged()
    End Sub
    Partial Private Sub OnNombreSucursalChanging(value As String)
    End Sub
    Partial Private Sub OnNombreSucursalChanged()
    End Sub
    Partial Private Sub OnGarantiaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnGarantiaChanged()
    End Sub
    Partial Private Sub OnGuiaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnGuiaChanged()
    End Sub
    Partial Private Sub OnFechaAsignacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaAsignacionChanged()
    End Sub
    Partial Private Sub OnTerritorioChanging(value As String)
    End Sub
    Partial Private Sub OnTerritorioChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnFechaRecuperacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaRecuperacionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ID() As String
		Get
			Return Me._ID
		End Get
		Set
			If (String.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Marca", DbType:="VarChar(500) NOT NULL", CanBeNull:=false)>  _
	Public Property Marca() As String
		Get
			Return Me._Marca
		End Get
		Set
			If (String.Equals(Me._Marca, value) = false) Then
				Me.OnMarcaChanging(value)
				Me.SendPropertyChanging
				Me._Marca = value
				Me.SendPropertyChanged("Marca")
				Me.OnMarcaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modelo", DbType:="VarChar(500) NOT NULL", CanBeNull:=false)>  _
	Public Property Modelo() As String
		Get
			Return Me._Modelo
		End Get
		Set
			If (String.Equals(Me._Modelo, value) = false) Then
				Me.OnModeloChanging(value)
				Me.SendPropertyChanging
				Me._Modelo = value
				Me.SendPropertyChanged("Modelo")
				Me.OnModeloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ubicacion", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Ubicacion() As Decimal
		Get
			Return Me._Ubicacion
		End Get
		Set
			If ((Me._Ubicacion = value)  _
						= false) Then
				Me.OnUbicacionChanging(value)
				Me.SendPropertyChanging
				Me._Ubicacion = value
				Me.SendPropertyChanged("Ubicacion")
				Me.OnUbicacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Cliente() As Decimal
		Get
			Return Me._Cliente
		End Get
		Set
			If ((Me._Cliente = value)  _
						= false) Then
				Me.OnClienteChanging(value)
				Me.SendPropertyChanging
				Me._Cliente = value
				Me.SendPropertyChanged("Cliente")
				Me.OnClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sucursal", DbType:="VarChar(500) NOT NULL", CanBeNull:=false)>  _
	Public Property Sucursal() As String
		Get
			Return Me._Sucursal
		End Get
		Set
			If (String.Equals(Me._Sucursal, value) = false) Then
				Me.OnSucursalChanging(value)
				Me.SendPropertyChanging
				Me._Sucursal = value
				Me.SendPropertyChanged("Sucursal")
				Me.OnSucursalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreSucursal", DbType:="VarChar(500) NOT NULL", CanBeNull:=false)>  _
	Public Property NombreSucursal() As String
		Get
			Return Me._NombreSucursal
		End Get
		Set
			If (String.Equals(Me._NombreSucursal, value) = false) Then
				Me.OnNombreSucursalChanging(value)
				Me.SendPropertyChanging
				Me._NombreSucursal = value
				Me.SendPropertyChanged("NombreSucursal")
				Me.OnNombreSucursalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Garantia", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Garantia() As Decimal
		Get
			Return Me._Garantia
		End Get
		Set
			If ((Me._Garantia = value)  _
						= false) Then
				Me.OnGarantiaChanging(value)
				Me.SendPropertyChanging
				Me._Garantia = value
				Me.SendPropertyChanged("Garantia")
				Me.OnGarantiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Guia", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Guia() As Decimal
		Get
			Return Me._Guia
		End Get
		Set
			If ((Me._Guia = value)  _
						= false) Then
				Me.OnGuiaChanging(value)
				Me.SendPropertyChanging
				Me._Guia = value
				Me.SendPropertyChanged("Guia")
				Me.OnGuiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaAsignacion", DbType:="Date NOT NULL")>  _
	Public Property FechaAsignacion() As Date
		Get
			Return Me._FechaAsignacion
		End Get
		Set
			If ((Me._FechaAsignacion = value)  _
						= false) Then
				Me.OnFechaAsignacionChanging(value)
				Me.SendPropertyChanging
				Me._FechaAsignacion = value
				Me.SendPropertyChanged("FechaAsignacion")
				Me.OnFechaAsignacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Territorio", DbType:="VarChar(500) NOT NULL", CanBeNull:=false)>  _
	Public Property Territorio() As String
		Get
			Return Me._Territorio
		End Get
		Set
			If (String.Equals(Me._Territorio, value) = false) Then
				Me.OnTerritorioChanging(value)
				Me.SendPropertyChanging
				Me._Territorio = value
				Me.SendPropertyChanged("Territorio")
				Me.OnTerritorioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Estado() As Decimal
		Get
			Return Me._Estado
		End Get
		Set
			If ((Me._Estado = value)  _
						= false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaRecuperacion", DbType:="Date NOT NULL")>  _
	Public Property FechaRecuperacion() As Date
		Get
			Return Me._FechaRecuperacion
		End Get
		Set
			If ((Me._FechaRecuperacion = value)  _
						= false) Then
				Me.OnFechaRecuperacionChanging(value)
				Me.SendPropertyChanging
				Me._FechaRecuperacion = value
				Me.SendPropertyChanged("FechaRecuperacion")
				Me.OnFechaRecuperacionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Clientes")>  _
Partial Public Class T_Clientes
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Cliente As Decimal
	
	Private _Nombre As String
	
	Private _Rut As String
	
	Private _Fantasia As String
	
	Private _Direccion As String
	
	Private _Ciudad As String
	
	Private _Comuna As String
	
	Private _Giro As String
	
	Private _Telefonos As String
	
	Private _Contacto As String
	
	Private _Tipo As String
	
	Private _Email As String
	
	Private _Proveedor As System.Nullable(Of Boolean)
	
	Private _Comision As System.Nullable(Of Boolean)
	
	Private _MaxDescuento As System.Nullable(Of Double)
	
	Private _CupoMax As System.Nullable(Of Decimal)
	
	Private _Vencimiento As System.Nullable(Of Decimal)
	
	Private _Estado As System.Nullable(Of Char)
	
	Private _FPago As String
	
	Private _Glosa As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnClienteChanging(value As Decimal)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnRutChanging(value As String)
    End Sub
    Partial Private Sub OnRutChanged()
    End Sub
    Partial Private Sub OnFantasiaChanging(value As String)
    End Sub
    Partial Private Sub OnFantasiaChanged()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnCiudadChanging(value As String)
    End Sub
    Partial Private Sub OnCiudadChanged()
    End Sub
    Partial Private Sub OnComunaChanging(value As String)
    End Sub
    Partial Private Sub OnComunaChanged()
    End Sub
    Partial Private Sub OnGiroChanging(value As String)
    End Sub
    Partial Private Sub OnGiroChanged()
    End Sub
    Partial Private Sub OnTelefonosChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonosChanged()
    End Sub
    Partial Private Sub OnContactoChanging(value As String)
    End Sub
    Partial Private Sub OnContactoChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnProveedorChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnProveedorChanged()
    End Sub
    Partial Private Sub OnComisionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnComisionChanged()
    End Sub
    Partial Private Sub OnMaxDescuentoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMaxDescuentoChanged()
    End Sub
    Partial Private Sub OnCupoMaxChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCupoMaxChanged()
    End Sub
    Partial Private Sub OnVencimientoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnVencimientoChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnFPagoChanging(value As String)
    End Sub
    Partial Private Sub OnFPagoChanged()
    End Sub
    Partial Private Sub OnGlosaChanging(value As String)
    End Sub
    Partial Private Sub OnGlosaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Cliente() As Decimal
		Get
			Return Me._Cliente
		End Get
		Set
			If ((Me._Cliente = value)  _
						= false) Then
				Me.OnClienteChanging(value)
				Me.SendPropertyChanging
				Me._Cliente = value
				Me.SendPropertyChanged("Cliente")
				Me.OnClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(200)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rut", DbType:="VarChar(12)")>  _
	Public Property Rut() As String
		Get
			Return Me._Rut
		End Get
		Set
			If (String.Equals(Me._Rut, value) = false) Then
				Me.OnRutChanging(value)
				Me.SendPropertyChanging
				Me._Rut = value
				Me.SendPropertyChanged("Rut")
				Me.OnRutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fantasia", DbType:="VarChar(30)")>  _
	Public Property Fantasia() As String
		Get
			Return Me._Fantasia
		End Get
		Set
			If (String.Equals(Me._Fantasia, value) = false) Then
				Me.OnFantasiaChanging(value)
				Me.SendPropertyChanging
				Me._Fantasia = value
				Me.SendPropertyChanged("Fantasia")
				Me.OnFantasiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Direccion", DbType:="VarChar(255)")>  _
	Public Property Direccion() As String
		Get
			Return Me._Direccion
		End Get
		Set
			If (String.Equals(Me._Direccion, value) = false) Then
				Me.OnDireccionChanging(value)
				Me.SendPropertyChanging
				Me._Direccion = value
				Me.SendPropertyChanged("Direccion")
				Me.OnDireccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ciudad", DbType:="VarChar(3)")>  _
	Public Property Ciudad() As String
		Get
			Return Me._Ciudad
		End Get
		Set
			If (String.Equals(Me._Ciudad, value) = false) Then
				Me.OnCiudadChanging(value)
				Me.SendPropertyChanging
				Me._Ciudad = value
				Me.SendPropertyChanged("Ciudad")
				Me.OnCiudadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comuna", DbType:="VarChar(3)")>  _
	Public Property Comuna() As String
		Get
			Return Me._Comuna
		End Get
		Set
			If (String.Equals(Me._Comuna, value) = false) Then
				Me.OnComunaChanging(value)
				Me.SendPropertyChanging
				Me._Comuna = value
				Me.SendPropertyChanged("Comuna")
				Me.OnComunaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Giro", DbType:="VarChar(100)")>  _
	Public Property Giro() As String
		Get
			Return Me._Giro
		End Get
		Set
			If (String.Equals(Me._Giro, value) = false) Then
				Me.OnGiroChanging(value)
				Me.SendPropertyChanging
				Me._Giro = value
				Me.SendPropertyChanged("Giro")
				Me.OnGiroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telefonos", DbType:="VarChar(50)")>  _
	Public Property Telefonos() As String
		Get
			Return Me._Telefonos
		End Get
		Set
			If (String.Equals(Me._Telefonos, value) = false) Then
				Me.OnTelefonosChanging(value)
				Me.SendPropertyChanging
				Me._Telefonos = value
				Me.SendPropertyChanged("Telefonos")
				Me.OnTelefonosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contacto", DbType:="VarChar(100)")>  _
	Public Property Contacto() As String
		Get
			Return Me._Contacto
		End Get
		Set
			If (String.Equals(Me._Contacto, value) = false) Then
				Me.OnContactoChanging(value)
				Me.SendPropertyChanging
				Me._Contacto = value
				Me.SendPropertyChanged("Contacto")
				Me.OnContactoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="VarChar(2)")>  _
	Public Property Tipo() As String
		Get
			Return Me._Tipo
		End Get
		Set
			If (String.Equals(Me._Tipo, value) = false) Then
				Me.OnTipoChanging(value)
				Me.SendPropertyChanging
				Me._Tipo = value
				Me.SendPropertyChanged("Tipo")
				Me.OnTipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Proveedor", DbType:="Bit")>  _
	Public Property Proveedor() As System.Nullable(Of Boolean)
		Get
			Return Me._Proveedor
		End Get
		Set
			If (Me._Proveedor.Equals(value) = false) Then
				Me.OnProveedorChanging(value)
				Me.SendPropertyChanging
				Me._Proveedor = value
				Me.SendPropertyChanged("Proveedor")
				Me.OnProveedorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comision", DbType:="Bit")>  _
	Public Property Comision() As System.Nullable(Of Boolean)
		Get
			Return Me._Comision
		End Get
		Set
			If (Me._Comision.Equals(value) = false) Then
				Me.OnComisionChanging(value)
				Me.SendPropertyChanging
				Me._Comision = value
				Me.SendPropertyChanged("Comision")
				Me.OnComisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxDescuento", DbType:="Float")>  _
	Public Property MaxDescuento() As System.Nullable(Of Double)
		Get
			Return Me._MaxDescuento
		End Get
		Set
			If (Me._MaxDescuento.Equals(value) = false) Then
				Me.OnMaxDescuentoChanging(value)
				Me.SendPropertyChanging
				Me._MaxDescuento = value
				Me.SendPropertyChanged("MaxDescuento")
				Me.OnMaxDescuentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CupoMax", DbType:="Decimal(18,0)")>  _
	Public Property CupoMax() As System.Nullable(Of Decimal)
		Get
			Return Me._CupoMax
		End Get
		Set
			If (Me._CupoMax.Equals(value) = false) Then
				Me.OnCupoMaxChanging(value)
				Me.SendPropertyChanging
				Me._CupoMax = value
				Me.SendPropertyChanged("CupoMax")
				Me.OnCupoMaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vencimiento", DbType:="Decimal(18,0)")>  _
	Public Property Vencimiento() As System.Nullable(Of Decimal)
		Get
			Return Me._Vencimiento
		End Get
		Set
			If (Me._Vencimiento.Equals(value) = false) Then
				Me.OnVencimientoChanging(value)
				Me.SendPropertyChanging
				Me._Vencimiento = value
				Me.SendPropertyChanged("Vencimiento")
				Me.OnVencimientoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="Char(1)")>  _
	Public Property Estado() As System.Nullable(Of Char)
		Get
			Return Me._Estado
		End Get
		Set
			If (Me._Estado.Equals(value) = false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPago", DbType:="VarChar(2)")>  _
	Public Property FPago() As String
		Get
			Return Me._FPago
		End Get
		Set
			If (String.Equals(Me._FPago, value) = false) Then
				Me.OnFPagoChanging(value)
				Me.SendPropertyChanging
				Me._FPago = value
				Me.SendPropertyChanged("FPago")
				Me.OnFPagoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Glosa", DbType:="VarChar(1000)")>  _
	Public Property Glosa() As String
		Get
			Return Me._Glosa
		End Get
		Set
			If (String.Equals(Me._Glosa, value) = false) Then
				Me.OnGlosaChanging(value)
				Me.SendPropertyChanging
				Me._Glosa = value
				Me.SendPropertyChanged("Glosa")
				Me.OnGlosaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Ciudades")>  _
Partial Public Class T_Ciudades
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Ciudad As String
	
	Private _NombreCiudad As String
	
	Private _CodigoArea As System.Nullable(Of Short)
	
	Private _Region As System.Nullable(Of Short)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCiudadChanging(value As String)
    End Sub
    Partial Private Sub OnCiudadChanged()
    End Sub
    Partial Private Sub OnNombreCiudadChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCiudadChanged()
    End Sub
    Partial Private Sub OnCodigoAreaChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCodigoAreaChanged()
    End Sub
    Partial Private Sub OnRegionChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnRegionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ciudad", DbType:="VarChar(3) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Ciudad() As String
		Get
			Return Me._Ciudad
		End Get
		Set
			If (String.Equals(Me._Ciudad, value) = false) Then
				Me.OnCiudadChanging(value)
				Me.SendPropertyChanging
				Me._Ciudad = value
				Me.SendPropertyChanged("Ciudad")
				Me.OnCiudadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCiudad", DbType:="VarChar(50)")>  _
	Public Property NombreCiudad() As String
		Get
			Return Me._NombreCiudad
		End Get
		Set
			If (String.Equals(Me._NombreCiudad, value) = false) Then
				Me.OnNombreCiudadChanging(value)
				Me.SendPropertyChanging
				Me._NombreCiudad = value
				Me.SendPropertyChanged("NombreCiudad")
				Me.OnNombreCiudadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodigoArea", DbType:="SmallInt")>  _
	Public Property CodigoArea() As System.Nullable(Of Short)
		Get
			Return Me._CodigoArea
		End Get
		Set
			If (Me._CodigoArea.Equals(value) = false) Then
				Me.OnCodigoAreaChanging(value)
				Me.SendPropertyChanging
				Me._CodigoArea = value
				Me.SendPropertyChanged("CodigoArea")
				Me.OnCodigoAreaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="SmallInt")>  _
	Public Property Region() As System.Nullable(Of Short)
		Get
			Return Me._Region
		End Get
		Set
			If (Me._Region.Equals(value) = false) Then
				Me.OnRegionChanging(value)
				Me.SendPropertyChanging
				Me._Region = value
				Me.SendPropertyChanged("Region")
				Me.OnRegionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Comunas")>  _
Partial Public Class T_Comunas
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Comuna As String
	
	Private _NombreComuna As String
	
	Private _CodigoArea As Short
	
	Private _Region As Short
	
	Private _Ciudad As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnComunaChanging(value As String)
    End Sub
    Partial Private Sub OnComunaChanged()
    End Sub
    Partial Private Sub OnNombreComunaChanging(value As String)
    End Sub
    Partial Private Sub OnNombreComunaChanged()
    End Sub
    Partial Private Sub OnCodigoAreaChanging(value As Short)
    End Sub
    Partial Private Sub OnCodigoAreaChanged()
    End Sub
    Partial Private Sub OnRegionChanging(value As Short)
    End Sub
    Partial Private Sub OnRegionChanged()
    End Sub
    Partial Private Sub OnCiudadChanging(value As String)
    End Sub
    Partial Private Sub OnCiudadChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comuna", DbType:="VarChar(3) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Comuna() As String
		Get
			Return Me._Comuna
		End Get
		Set
			If (String.Equals(Me._Comuna, value) = false) Then
				Me.OnComunaChanging(value)
				Me.SendPropertyChanging
				Me._Comuna = value
				Me.SendPropertyChanged("Comuna")
				Me.OnComunaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreComuna", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property NombreComuna() As String
		Get
			Return Me._NombreComuna
		End Get
		Set
			If (String.Equals(Me._NombreComuna, value) = false) Then
				Me.OnNombreComunaChanging(value)
				Me.SendPropertyChanging
				Me._NombreComuna = value
				Me.SendPropertyChanged("NombreComuna")
				Me.OnNombreComunaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodigoArea", DbType:="SmallInt NOT NULL")>  _
	Public Property CodigoArea() As Short
		Get
			Return Me._CodigoArea
		End Get
		Set
			If ((Me._CodigoArea = value)  _
						= false) Then
				Me.OnCodigoAreaChanging(value)
				Me.SendPropertyChanging
				Me._CodigoArea = value
				Me.SendPropertyChanged("CodigoArea")
				Me.OnCodigoAreaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="SmallInt NOT NULL")>  _
	Public Property Region() As Short
		Get
			Return Me._Region
		End Get
		Set
			If ((Me._Region = value)  _
						= false) Then
				Me.OnRegionChanging(value)
				Me.SendPropertyChanging
				Me._Region = value
				Me.SendPropertyChanged("Region")
				Me.OnRegionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ciudad", DbType:="VarChar(3) NOT NULL", CanBeNull:=false)>  _
	Public Property Ciudad() As String
		Get
			Return Me._Ciudad
		End Get
		Set
			If (String.Equals(Me._Ciudad, value) = false) Then
				Me.OnCiudadChanging(value)
				Me.SendPropertyChanging
				Me._Ciudad = value
				Me.SendPropertyChanged("Ciudad")
				Me.OnCiudadChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DocumentosG")>  _
Partial Public Class T_DocumentosG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Decimal
	
	Private _Local As Decimal
	
	Private _TipoDoc As String
	
	Private _Numero As Decimal
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Estado As System.Nullable(Of Char)
	
	Private _Cliente As System.Nullable(Of Decimal)
	
	Private _Rut As String
	
	Private _Aprobado As System.Nullable(Of Boolean)
	
	Private _FPago As String
	
	Private _Bodega As System.Nullable(Of Decimal)
	
	Private _OC As String
	
	Private _Motivo As System.Nullable(Of Char)
	
	Private _TipoDocReferencia As String
	
	Private _NumDocReferencia As System.Nullable(Of Decimal)
	
	Private _FechaDocReferencia As System.Nullable(Of Date)
	
	Private _Observaciones As String
	
	Private _Usuario As String
	
	Private _Vendedor As String
	
	Private _Electronica As System.Nullable(Of Boolean)
	
	Private _POS As System.Nullable(Of Decimal)
	
	Private _Ticket As System.Nullable(Of Decimal)
	
	Private _SubTotal As System.Nullable(Of Double)
	
	Private _Descuento As System.Nullable(Of Double)
	
	Private _Neto As System.Nullable(Of Double)
	
	Private _IVA As System.Nullable(Of Decimal)
	
	Private _iEXE As System.Nullable(Of Decimal)
	
	Private _iMIN As System.Nullable(Of Decimal)
	
	Private _iBEB As System.Nullable(Of Decimal)
	
	Private _iVIN As System.Nullable(Of Decimal)
	
	Private _iCER As System.Nullable(Of Decimal)
	
	Private _iLIC As System.Nullable(Of Decimal)
	
	Private _iHAR As System.Nullable(Of Decimal)
	
	Private _iCAR As System.Nullable(Of Decimal)
	
	Private _iFEP As System.Nullable(Of Decimal)
	
	Private _iTAB As System.Nullable(Of Decimal)
	
	Private _iLOG As System.Nullable(Of Decimal)
	
	Private _iOTRO As System.Nullable(Of Decimal)
	
	Private _Total As System.Nullable(Of Double)
	
	Private _RutTransporte As String
	
	Private _NombreTransporte As String
	
	Private _RutChofer As String
	
	Private _NombreChofer As String
	
	Private _PatenteMovil As String
	
	Private _DTE As System.Nullable(Of Boolean)
	
	Private _Firma As System.Data.Linq.Binary
	
	Private _TED As String
	
	Private _STATUS_DTE As System.Nullable(Of Decimal)
	
	Private _StockTraspasado As System.Nullable(Of Boolean)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnRutChanging(value As String)
    End Sub
    Partial Private Sub OnRutChanged()
    End Sub
    Partial Private Sub OnAprobadoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnAprobadoChanged()
    End Sub
    Partial Private Sub OnFPagoChanging(value As String)
    End Sub
    Partial Private Sub OnFPagoChanged()
    End Sub
    Partial Private Sub OnBodegaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBodegaChanged()
    End Sub
    Partial Private Sub OnOCChanging(value As String)
    End Sub
    Partial Private Sub OnOCChanged()
    End Sub
    Partial Private Sub OnMotivoChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnMotivoChanged()
    End Sub
    Partial Private Sub OnTipoDocReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocReferenciaChanged()
    End Sub
    Partial Private Sub OnNumDocReferenciaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNumDocReferenciaChanged()
    End Sub
    Partial Private Sub OnFechaDocReferenciaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaDocReferenciaChanged()
    End Sub
    Partial Private Sub OnObservacionesChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionesChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnVendedorChanging(value As String)
    End Sub
    Partial Private Sub OnVendedorChanged()
    End Sub
    Partial Private Sub OnElectronicaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnElectronicaChanged()
    End Sub
    Partial Private Sub OnPOSChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPOSChanged()
    End Sub
    Partial Private Sub OnTicketChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTicketChanged()
    End Sub
    Partial Private Sub OnSubTotalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSubTotalChanged()
    End Sub
    Partial Private Sub OnDescuentoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDescuentoChanged()
    End Sub
    Partial Private Sub OnNetoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNetoChanged()
    End Sub
    Partial Private Sub OnIVAChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnIVAChanged()
    End Sub
    Partial Private Sub OniEXEChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniEXEChanged()
    End Sub
    Partial Private Sub OniMINChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniMINChanged()
    End Sub
    Partial Private Sub OniBEBChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniBEBChanged()
    End Sub
    Partial Private Sub OniVINChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniVINChanged()
    End Sub
    Partial Private Sub OniCERChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniCERChanged()
    End Sub
    Partial Private Sub OniLICChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniLICChanged()
    End Sub
    Partial Private Sub OniHARChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniHARChanged()
    End Sub
    Partial Private Sub OniCARChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniCARChanged()
    End Sub
    Partial Private Sub OniFEPChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniFEPChanged()
    End Sub
    Partial Private Sub OniTABChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniTABChanged()
    End Sub
    Partial Private Sub OniLOGChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniLOGChanged()
    End Sub
    Partial Private Sub OniOTROChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniOTROChanged()
    End Sub
    Partial Private Sub OnTotalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalChanged()
    End Sub
    Partial Private Sub OnRutTransporteChanging(value As String)
    End Sub
    Partial Private Sub OnRutTransporteChanged()
    End Sub
    Partial Private Sub OnNombreTransporteChanging(value As String)
    End Sub
    Partial Private Sub OnNombreTransporteChanged()
    End Sub
    Partial Private Sub OnRutChoferChanging(value As String)
    End Sub
    Partial Private Sub OnRutChoferChanged()
    End Sub
    Partial Private Sub OnNombreChoferChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChoferChanged()
    End Sub
    Partial Private Sub OnPatenteMovilChanging(value As String)
    End Sub
    Partial Private Sub OnPatenteMovilChanged()
    End Sub
    Partial Private Sub OnDTEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDTEChanged()
    End Sub
    Partial Private Sub OnFirmaChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnFirmaChanged()
    End Sub
    Partial Private Sub OnTEDChanging(value As String)
    End Sub
    Partial Private Sub OnTEDChanged()
    End Sub
    Partial Private Sub OnSTATUS_DTEChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSTATUS_DTEChanged()
    End Sub
    Partial Private Sub OnStockTraspasadoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnStockTraspasadoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Decimal
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Local() As Decimal
		Get
			Return Me._Local
		End Get
		Set
			If ((Me._Local = value)  _
						= false) Then
				Me.OnLocalChanging(value)
				Me.SendPropertyChanging
				Me._Local = value
				Me.SendPropertyChanged("Local")
				Me.OnLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property TipoDoc() As String
		Get
			Return Me._TipoDoc
		End Get
		Set
			If (String.Equals(Me._TipoDoc, value) = false) Then
				Me.OnTipoDocChanging(value)
				Me.SendPropertyChanging
				Me._TipoDoc = value
				Me.SendPropertyChanged("TipoDoc")
				Me.OnTipoDocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Numero", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Numero() As Decimal
		Get
			Return Me._Numero
		End Get
		Set
			If ((Me._Numero = value)  _
						= false) Then
				Me.OnNumeroChanging(value)
				Me.SendPropertyChanging
				Me._Numero = value
				Me.SendPropertyChanged("Numero")
				Me.OnNumeroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="Char(1)")>  _
	Public Property Estado() As System.Nullable(Of Char)
		Get
			Return Me._Estado
		End Get
		Set
			If (Me._Estado.Equals(value) = false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0)")>  _
	Public Property Cliente() As System.Nullable(Of Decimal)
		Get
			Return Me._Cliente
		End Get
		Set
			If (Me._Cliente.Equals(value) = false) Then
				Me.OnClienteChanging(value)
				Me.SendPropertyChanging
				Me._Cliente = value
				Me.SendPropertyChanged("Cliente")
				Me.OnClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rut", DbType:="VarChar(12)")>  _
	Public Property Rut() As String
		Get
			Return Me._Rut
		End Get
		Set
			If (String.Equals(Me._Rut, value) = false) Then
				Me.OnRutChanging(value)
				Me.SendPropertyChanging
				Me._Rut = value
				Me.SendPropertyChanged("Rut")
				Me.OnRutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aprobado", DbType:="Bit")>  _
	Public Property Aprobado() As System.Nullable(Of Boolean)
		Get
			Return Me._Aprobado
		End Get
		Set
			If (Me._Aprobado.Equals(value) = false) Then
				Me.OnAprobadoChanging(value)
				Me.SendPropertyChanging
				Me._Aprobado = value
				Me.SendPropertyChanged("Aprobado")
				Me.OnAprobadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPago", DbType:="VarChar(2)")>  _
	Public Property FPago() As String
		Get
			Return Me._FPago
		End Get
		Set
			If (String.Equals(Me._FPago, value) = false) Then
				Me.OnFPagoChanging(value)
				Me.SendPropertyChanging
				Me._FPago = value
				Me.SendPropertyChanged("FPago")
				Me.OnFPagoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bodega", DbType:="Decimal(18,0)")>  _
	Public Property Bodega() As System.Nullable(Of Decimal)
		Get
			Return Me._Bodega
		End Get
		Set
			If (Me._Bodega.Equals(value) = false) Then
				Me.OnBodegaChanging(value)
				Me.SendPropertyChanging
				Me._Bodega = value
				Me.SendPropertyChanged("Bodega")
				Me.OnBodegaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OC", DbType:="VarChar(50)")>  _
	Public Property OC() As String
		Get
			Return Me._OC
		End Get
		Set
			If (String.Equals(Me._OC, value) = false) Then
				Me.OnOCChanging(value)
				Me.SendPropertyChanging
				Me._OC = value
				Me.SendPropertyChanged("OC")
				Me.OnOCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Motivo", DbType:="Char(1)")>  _
	Public Property Motivo() As System.Nullable(Of Char)
		Get
			Return Me._Motivo
		End Get
		Set
			If (Me._Motivo.Equals(value) = false) Then
				Me.OnMotivoChanging(value)
				Me.SendPropertyChanging
				Me._Motivo = value
				Me.SendPropertyChanged("Motivo")
				Me.OnMotivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDocReferencia", DbType:="VarChar(2)")>  _
	Public Property TipoDocReferencia() As String
		Get
			Return Me._TipoDocReferencia
		End Get
		Set
			If (String.Equals(Me._TipoDocReferencia, value) = false) Then
				Me.OnTipoDocReferenciaChanging(value)
				Me.SendPropertyChanging
				Me._TipoDocReferencia = value
				Me.SendPropertyChanged("TipoDocReferencia")
				Me.OnTipoDocReferenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumDocReferencia", DbType:="Decimal(18,0)")>  _
	Public Property NumDocReferencia() As System.Nullable(Of Decimal)
		Get
			Return Me._NumDocReferencia
		End Get
		Set
			If (Me._NumDocReferencia.Equals(value) = false) Then
				Me.OnNumDocReferenciaChanging(value)
				Me.SendPropertyChanging
				Me._NumDocReferencia = value
				Me.SendPropertyChanged("NumDocReferencia")
				Me.OnNumDocReferenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaDocReferencia", DbType:="Date")>  _
	Public Property FechaDocReferencia() As System.Nullable(Of Date)
		Get
			Return Me._FechaDocReferencia
		End Get
		Set
			If (Me._FechaDocReferencia.Equals(value) = false) Then
				Me.OnFechaDocReferenciaChanging(value)
				Me.SendPropertyChanging
				Me._FechaDocReferencia = value
				Me.SendPropertyChanged("FechaDocReferencia")
				Me.OnFechaDocReferenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observaciones", DbType:="VarChar(4000)")>  _
	Public Property Observaciones() As String
		Get
			Return Me._Observaciones
		End Get
		Set
			If (String.Equals(Me._Observaciones, value) = false) Then
				Me.OnObservacionesChanging(value)
				Me.SendPropertyChanging
				Me._Observaciones = value
				Me.SendPropertyChanged("Observaciones")
				Me.OnObservacionesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="Char(3)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vendedor", DbType:="Char(3)")>  _
	Public Property Vendedor() As String
		Get
			Return Me._Vendedor
		End Get
		Set
			If (String.Equals(Me._Vendedor, value) = false) Then
				Me.OnVendedorChanging(value)
				Me.SendPropertyChanging
				Me._Vendedor = value
				Me.SendPropertyChanged("Vendedor")
				Me.OnVendedorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Electronica", DbType:="Bit")>  _
	Public Property Electronica() As System.Nullable(Of Boolean)
		Get
			Return Me._Electronica
		End Get
		Set
			If (Me._Electronica.Equals(value) = false) Then
				Me.OnElectronicaChanging(value)
				Me.SendPropertyChanging
				Me._Electronica = value
				Me.SendPropertyChanged("Electronica")
				Me.OnElectronicaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POS", DbType:="Decimal(18,0)")>  _
	Public Property POS() As System.Nullable(Of Decimal)
		Get
			Return Me._POS
		End Get
		Set
			If (Me._POS.Equals(value) = false) Then
				Me.OnPOSChanging(value)
				Me.SendPropertyChanging
				Me._POS = value
				Me.SendPropertyChanged("POS")
				Me.OnPOSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ticket", DbType:="Decimal(18,0)")>  _
	Public Property Ticket() As System.Nullable(Of Decimal)
		Get
			Return Me._Ticket
		End Get
		Set
			If (Me._Ticket.Equals(value) = false) Then
				Me.OnTicketChanging(value)
				Me.SendPropertyChanging
				Me._Ticket = value
				Me.SendPropertyChanged("Ticket")
				Me.OnTicketChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubTotal", DbType:="Float")>  _
	Public Property SubTotal() As System.Nullable(Of Double)
		Get
			Return Me._SubTotal
		End Get
		Set
			If (Me._SubTotal.Equals(value) = false) Then
				Me.OnSubTotalChanging(value)
				Me.SendPropertyChanging
				Me._SubTotal = value
				Me.SendPropertyChanged("SubTotal")
				Me.OnSubTotalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descuento", DbType:="Float")>  _
	Public Property Descuento() As System.Nullable(Of Double)
		Get
			Return Me._Descuento
		End Get
		Set
			If (Me._Descuento.Equals(value) = false) Then
				Me.OnDescuentoChanging(value)
				Me.SendPropertyChanging
				Me._Descuento = value
				Me.SendPropertyChanged("Descuento")
				Me.OnDescuentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Neto", DbType:="Float")>  _
	Public Property Neto() As System.Nullable(Of Double)
		Get
			Return Me._Neto
		End Get
		Set
			If (Me._Neto.Equals(value) = false) Then
				Me.OnNetoChanging(value)
				Me.SendPropertyChanging
				Me._Neto = value
				Me.SendPropertyChanged("Neto")
				Me.OnNetoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IVA", DbType:="Decimal(18,0)")>  _
	Public Property IVA() As System.Nullable(Of Decimal)
		Get
			Return Me._IVA
		End Get
		Set
			If (Me._IVA.Equals(value) = false) Then
				Me.OnIVAChanging(value)
				Me.SendPropertyChanging
				Me._IVA = value
				Me.SendPropertyChanged("IVA")
				Me.OnIVAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iEXE", DbType:="Decimal(18,0)")>  _
	Public Property iEXE() As System.Nullable(Of Decimal)
		Get
			Return Me._iEXE
		End Get
		Set
			If (Me._iEXE.Equals(value) = false) Then
				Me.OniEXEChanging(value)
				Me.SendPropertyChanging
				Me._iEXE = value
				Me.SendPropertyChanged("iEXE")
				Me.OniEXEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iMIN", DbType:="Decimal(18,0)")>  _
	Public Property iMIN() As System.Nullable(Of Decimal)
		Get
			Return Me._iMIN
		End Get
		Set
			If (Me._iMIN.Equals(value) = false) Then
				Me.OniMINChanging(value)
				Me.SendPropertyChanging
				Me._iMIN = value
				Me.SendPropertyChanged("iMIN")
				Me.OniMINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iBEB", DbType:="Decimal(18,0)")>  _
	Public Property iBEB() As System.Nullable(Of Decimal)
		Get
			Return Me._iBEB
		End Get
		Set
			If (Me._iBEB.Equals(value) = false) Then
				Me.OniBEBChanging(value)
				Me.SendPropertyChanging
				Me._iBEB = value
				Me.SendPropertyChanged("iBEB")
				Me.OniBEBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iVIN", DbType:="Decimal(18,0)")>  _
	Public Property iVIN() As System.Nullable(Of Decimal)
		Get
			Return Me._iVIN
		End Get
		Set
			If (Me._iVIN.Equals(value) = false) Then
				Me.OniVINChanging(value)
				Me.SendPropertyChanging
				Me._iVIN = value
				Me.SendPropertyChanged("iVIN")
				Me.OniVINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iCER", DbType:="Decimal(18,0)")>  _
	Public Property iCER() As System.Nullable(Of Decimal)
		Get
			Return Me._iCER
		End Get
		Set
			If (Me._iCER.Equals(value) = false) Then
				Me.OniCERChanging(value)
				Me.SendPropertyChanging
				Me._iCER = value
				Me.SendPropertyChanged("iCER")
				Me.OniCERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iLIC", DbType:="Decimal(18,0)")>  _
	Public Property iLIC() As System.Nullable(Of Decimal)
		Get
			Return Me._iLIC
		End Get
		Set
			If (Me._iLIC.Equals(value) = false) Then
				Me.OniLICChanging(value)
				Me.SendPropertyChanging
				Me._iLIC = value
				Me.SendPropertyChanged("iLIC")
				Me.OniLICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iHAR", DbType:="Decimal(18,0)")>  _
	Public Property iHAR() As System.Nullable(Of Decimal)
		Get
			Return Me._iHAR
		End Get
		Set
			If (Me._iHAR.Equals(value) = false) Then
				Me.OniHARChanging(value)
				Me.SendPropertyChanging
				Me._iHAR = value
				Me.SendPropertyChanged("iHAR")
				Me.OniHARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iCAR", DbType:="Decimal(18,0)")>  _
	Public Property iCAR() As System.Nullable(Of Decimal)
		Get
			Return Me._iCAR
		End Get
		Set
			If (Me._iCAR.Equals(value) = false) Then
				Me.OniCARChanging(value)
				Me.SendPropertyChanging
				Me._iCAR = value
				Me.SendPropertyChanged("iCAR")
				Me.OniCARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iFEP", DbType:="Decimal(18,0)")>  _
	Public Property iFEP() As System.Nullable(Of Decimal)
		Get
			Return Me._iFEP
		End Get
		Set
			If (Me._iFEP.Equals(value) = false) Then
				Me.OniFEPChanging(value)
				Me.SendPropertyChanging
				Me._iFEP = value
				Me.SendPropertyChanged("iFEP")
				Me.OniFEPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iTAB", DbType:="Decimal(18,0)")>  _
	Public Property iTAB() As System.Nullable(Of Decimal)
		Get
			Return Me._iTAB
		End Get
		Set
			If (Me._iTAB.Equals(value) = false) Then
				Me.OniTABChanging(value)
				Me.SendPropertyChanging
				Me._iTAB = value
				Me.SendPropertyChanged("iTAB")
				Me.OniTABChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iLOG", DbType:="Decimal(18,0)")>  _
	Public Property iLOG() As System.Nullable(Of Decimal)
		Get
			Return Me._iLOG
		End Get
		Set
			If (Me._iLOG.Equals(value) = false) Then
				Me.OniLOGChanging(value)
				Me.SendPropertyChanging
				Me._iLOG = value
				Me.SendPropertyChanged("iLOG")
				Me.OniLOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iOTRO", DbType:="Decimal(18,0)")>  _
	Public Property iOTRO() As System.Nullable(Of Decimal)
		Get
			Return Me._iOTRO
		End Get
		Set
			If (Me._iOTRO.Equals(value) = false) Then
				Me.OniOTROChanging(value)
				Me.SendPropertyChanging
				Me._iOTRO = value
				Me.SendPropertyChanged("iOTRO")
				Me.OniOTROChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total", DbType:="Float")>  _
	Public Property Total() As System.Nullable(Of Double)
		Get
			Return Me._Total
		End Get
		Set
			If (Me._Total.Equals(value) = false) Then
				Me.OnTotalChanging(value)
				Me.SendPropertyChanging
				Me._Total = value
				Me.SendPropertyChanged("Total")
				Me.OnTotalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RutTransporte", DbType:="VarChar(12)")>  _
	Public Property RutTransporte() As String
		Get
			Return Me._RutTransporte
		End Get
		Set
			If (String.Equals(Me._RutTransporte, value) = false) Then
				Me.OnRutTransporteChanging(value)
				Me.SendPropertyChanging
				Me._RutTransporte = value
				Me.SendPropertyChanged("RutTransporte")
				Me.OnRutTransporteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreTransporte", DbType:="VarChar(50)")>  _
	Public Property NombreTransporte() As String
		Get
			Return Me._NombreTransporte
		End Get
		Set
			If (String.Equals(Me._NombreTransporte, value) = false) Then
				Me.OnNombreTransporteChanging(value)
				Me.SendPropertyChanging
				Me._NombreTransporte = value
				Me.SendPropertyChanged("NombreTransporte")
				Me.OnNombreTransporteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RutChofer", DbType:="VarChar(12)")>  _
	Public Property RutChofer() As String
		Get
			Return Me._RutChofer
		End Get
		Set
			If (String.Equals(Me._RutChofer, value) = false) Then
				Me.OnRutChoferChanging(value)
				Me.SendPropertyChanging
				Me._RutChofer = value
				Me.SendPropertyChanged("RutChofer")
				Me.OnRutChoferChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreChofer", DbType:="VarChar(50)")>  _
	Public Property NombreChofer() As String
		Get
			Return Me._NombreChofer
		End Get
		Set
			If (String.Equals(Me._NombreChofer, value) = false) Then
				Me.OnNombreChoferChanging(value)
				Me.SendPropertyChanging
				Me._NombreChofer = value
				Me.SendPropertyChanged("NombreChofer")
				Me.OnNombreChoferChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PatenteMovil", DbType:="VarChar(20)")>  _
	Public Property PatenteMovil() As String
		Get
			Return Me._PatenteMovil
		End Get
		Set
			If (String.Equals(Me._PatenteMovil, value) = false) Then
				Me.OnPatenteMovilChanging(value)
				Me.SendPropertyChanging
				Me._PatenteMovil = value
				Me.SendPropertyChanged("PatenteMovil")
				Me.OnPatenteMovilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTE", DbType:="Bit")>  _
	Public Property DTE() As System.Nullable(Of Boolean)
		Get
			Return Me._DTE
		End Get
		Set
			If (Me._DTE.Equals(value) = false) Then
				Me.OnDTEChanging(value)
				Me.SendPropertyChanging
				Me._DTE = value
				Me.SendPropertyChanged("DTE")
				Me.OnDTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Firma", DbType:="Image", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Firma() As System.Data.Linq.Binary
		Get
			Return Me._Firma
		End Get
		Set
			If (Object.Equals(Me._Firma, value) = false) Then
				Me.OnFirmaChanging(value)
				Me.SendPropertyChanging
				Me._Firma = value
				Me.SendPropertyChanged("Firma")
				Me.OnFirmaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TED", DbType:="VarChar(2000)")>  _
	Public Property TED() As String
		Get
			Return Me._TED
		End Get
		Set
			If (String.Equals(Me._TED, value) = false) Then
				Me.OnTEDChanging(value)
				Me.SendPropertyChanging
				Me._TED = value
				Me.SendPropertyChanged("TED")
				Me.OnTEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_DTE", DbType:="Decimal(18,0)")>  _
	Public Property STATUS_DTE() As System.Nullable(Of Decimal)
		Get
			Return Me._STATUS_DTE
		End Get
		Set
			If (Me._STATUS_DTE.Equals(value) = false) Then
				Me.OnSTATUS_DTEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_DTE = value
				Me.SendPropertyChanged("STATUS_DTE")
				Me.OnSTATUS_DTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockTraspasado", DbType:="Bit")>  _
	Public Property StockTraspasado() As System.Nullable(Of Boolean)
		Get
			Return Me._StockTraspasado
		End Get
		Set
			If (Me._StockTraspasado.Equals(value) = false) Then
				Me.OnStockTraspasadoChanging(value)
				Me.SendPropertyChanging
				Me._StockTraspasado = value
				Me.SendPropertyChanged("StockTraspasado")
				Me.OnStockTraspasadoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DocumentosD")>  _
Partial Public Class T_DocumentosD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Decimal
	
	Private _Local As System.Nullable(Of Decimal)
	
	Private _TipoDoc As String
	
	Private _Numero As System.Nullable(Of Decimal)
	
	Private _Articulo As String
	
	Private _Cantidad As System.Nullable(Of Double)
	
	Private _Neto As System.Nullable(Of Double)
	
	Private _IVA As System.Nullable(Of Decimal)
	
	Private _iEXE As System.Nullable(Of Decimal)
	
	Private _iMIN As System.Nullable(Of Decimal)
	
	Private _iBEB As System.Nullable(Of Decimal)
	
	Private _iVIN As System.Nullable(Of Decimal)
	
	Private _iCER As System.Nullable(Of Decimal)
	
	Private _iLIC As System.Nullable(Of Decimal)
	
	Private _iCAR As System.Nullable(Of Decimal)
	
	Private _iHAR As System.Nullable(Of Decimal)
	
	Private _iTAB As System.Nullable(Of Decimal)
	
	Private _iFEP As System.Nullable(Of Decimal)
	
	Private _iLOG As System.Nullable(Of Decimal)
	
	Private _iOTRO As System.Nullable(Of Decimal)
	
	Private _PVenta As System.Nullable(Of Decimal)
	
	Private _Glosa As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnArticuloChanging(value As String)
    End Sub
    Partial Private Sub OnArticuloChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnNetoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNetoChanged()
    End Sub
    Partial Private Sub OnIVAChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnIVAChanged()
    End Sub
    Partial Private Sub OniEXEChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniEXEChanged()
    End Sub
    Partial Private Sub OniMINChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniMINChanged()
    End Sub
    Partial Private Sub OniBEBChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniBEBChanged()
    End Sub
    Partial Private Sub OniVINChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniVINChanged()
    End Sub
    Partial Private Sub OniCERChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniCERChanged()
    End Sub
    Partial Private Sub OniLICChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniLICChanged()
    End Sub
    Partial Private Sub OniCARChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniCARChanged()
    End Sub
    Partial Private Sub OniHARChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniHARChanged()
    End Sub
    Partial Private Sub OniTABChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniTABChanged()
    End Sub
    Partial Private Sub OniFEPChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniFEPChanged()
    End Sub
    Partial Private Sub OniLOGChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniLOGChanged()
    End Sub
    Partial Private Sub OniOTROChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniOTROChanged()
    End Sub
    Partial Private Sub OnPVentaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPVentaChanged()
    End Sub
    Partial Private Sub OnGlosaChanging(value As String)
    End Sub
    Partial Private Sub OnGlosaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Decimal
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0)")>  _
	Public Property Local() As System.Nullable(Of Decimal)
		Get
			Return Me._Local
		End Get
		Set
			If (Me._Local.Equals(value) = false) Then
				Me.OnLocalChanging(value)
				Me.SendPropertyChanging
				Me._Local = value
				Me.SendPropertyChanged("Local")
				Me.OnLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2)")>  _
	Public Property TipoDoc() As String
		Get
			Return Me._TipoDoc
		End Get
		Set
			If (String.Equals(Me._TipoDoc, value) = false) Then
				Me.OnTipoDocChanging(value)
				Me.SendPropertyChanging
				Me._TipoDoc = value
				Me.SendPropertyChanged("TipoDoc")
				Me.OnTipoDocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Numero", DbType:="Decimal(18,0)")>  _
	Public Property Numero() As System.Nullable(Of Decimal)
		Get
			Return Me._Numero
		End Get
		Set
			If (Me._Numero.Equals(value) = false) Then
				Me.OnNumeroChanging(value)
				Me.SendPropertyChanging
				Me._Numero = value
				Me.SendPropertyChanged("Numero")
				Me.OnNumeroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="VarChar(30)")>  _
	Public Property Articulo() As String
		Get
			Return Me._Articulo
		End Get
		Set
			If (String.Equals(Me._Articulo, value) = false) Then
				Me.OnArticuloChanging(value)
				Me.SendPropertyChanging
				Me._Articulo = value
				Me.SendPropertyChanged("Articulo")
				Me.OnArticuloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Float")>  _
	Public Property Cantidad() As System.Nullable(Of Double)
		Get
			Return Me._Cantidad
		End Get
		Set
			If (Me._Cantidad.Equals(value) = false) Then
				Me.OnCantidadChanging(value)
				Me.SendPropertyChanging
				Me._Cantidad = value
				Me.SendPropertyChanged("Cantidad")
				Me.OnCantidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Neto", DbType:="Float")>  _
	Public Property Neto() As System.Nullable(Of Double)
		Get
			Return Me._Neto
		End Get
		Set
			If (Me._Neto.Equals(value) = false) Then
				Me.OnNetoChanging(value)
				Me.SendPropertyChanging
				Me._Neto = value
				Me.SendPropertyChanged("Neto")
				Me.OnNetoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IVA", DbType:="Decimal(18,0)")>  _
	Public Property IVA() As System.Nullable(Of Decimal)
		Get
			Return Me._IVA
		End Get
		Set
			If (Me._IVA.Equals(value) = false) Then
				Me.OnIVAChanging(value)
				Me.SendPropertyChanging
				Me._IVA = value
				Me.SendPropertyChanged("IVA")
				Me.OnIVAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iEXE", DbType:="Decimal(18,0)")>  _
	Public Property iEXE() As System.Nullable(Of Decimal)
		Get
			Return Me._iEXE
		End Get
		Set
			If (Me._iEXE.Equals(value) = false) Then
				Me.OniEXEChanging(value)
				Me.SendPropertyChanging
				Me._iEXE = value
				Me.SendPropertyChanged("iEXE")
				Me.OniEXEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iMIN", DbType:="Decimal(18,0)")>  _
	Public Property iMIN() As System.Nullable(Of Decimal)
		Get
			Return Me._iMIN
		End Get
		Set
			If (Me._iMIN.Equals(value) = false) Then
				Me.OniMINChanging(value)
				Me.SendPropertyChanging
				Me._iMIN = value
				Me.SendPropertyChanged("iMIN")
				Me.OniMINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iBEB", DbType:="Decimal(18,0)")>  _
	Public Property iBEB() As System.Nullable(Of Decimal)
		Get
			Return Me._iBEB
		End Get
		Set
			If (Me._iBEB.Equals(value) = false) Then
				Me.OniBEBChanging(value)
				Me.SendPropertyChanging
				Me._iBEB = value
				Me.SendPropertyChanged("iBEB")
				Me.OniBEBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iVIN", DbType:="Decimal(18,0)")>  _
	Public Property iVIN() As System.Nullable(Of Decimal)
		Get
			Return Me._iVIN
		End Get
		Set
			If (Me._iVIN.Equals(value) = false) Then
				Me.OniVINChanging(value)
				Me.SendPropertyChanging
				Me._iVIN = value
				Me.SendPropertyChanged("iVIN")
				Me.OniVINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iCER", DbType:="Decimal(18,0)")>  _
	Public Property iCER() As System.Nullable(Of Decimal)
		Get
			Return Me._iCER
		End Get
		Set
			If (Me._iCER.Equals(value) = false) Then
				Me.OniCERChanging(value)
				Me.SendPropertyChanging
				Me._iCER = value
				Me.SendPropertyChanged("iCER")
				Me.OniCERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iLIC", DbType:="Decimal(18,0)")>  _
	Public Property iLIC() As System.Nullable(Of Decimal)
		Get
			Return Me._iLIC
		End Get
		Set
			If (Me._iLIC.Equals(value) = false) Then
				Me.OniLICChanging(value)
				Me.SendPropertyChanging
				Me._iLIC = value
				Me.SendPropertyChanged("iLIC")
				Me.OniLICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iCAR", DbType:="Decimal(18,0)")>  _
	Public Property iCAR() As System.Nullable(Of Decimal)
		Get
			Return Me._iCAR
		End Get
		Set
			If (Me._iCAR.Equals(value) = false) Then
				Me.OniCARChanging(value)
				Me.SendPropertyChanging
				Me._iCAR = value
				Me.SendPropertyChanged("iCAR")
				Me.OniCARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iHAR", DbType:="Decimal(18,0)")>  _
	Public Property iHAR() As System.Nullable(Of Decimal)
		Get
			Return Me._iHAR
		End Get
		Set
			If (Me._iHAR.Equals(value) = false) Then
				Me.OniHARChanging(value)
				Me.SendPropertyChanging
				Me._iHAR = value
				Me.SendPropertyChanged("iHAR")
				Me.OniHARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iTAB", DbType:="Decimal(18,0)")>  _
	Public Property iTAB() As System.Nullable(Of Decimal)
		Get
			Return Me._iTAB
		End Get
		Set
			If (Me._iTAB.Equals(value) = false) Then
				Me.OniTABChanging(value)
				Me.SendPropertyChanging
				Me._iTAB = value
				Me.SendPropertyChanged("iTAB")
				Me.OniTABChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iFEP", DbType:="Decimal(18,0)")>  _
	Public Property iFEP() As System.Nullable(Of Decimal)
		Get
			Return Me._iFEP
		End Get
		Set
			If (Me._iFEP.Equals(value) = false) Then
				Me.OniFEPChanging(value)
				Me.SendPropertyChanging
				Me._iFEP = value
				Me.SendPropertyChanged("iFEP")
				Me.OniFEPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iLOG", DbType:="Decimal(18,0)")>  _
	Public Property iLOG() As System.Nullable(Of Decimal)
		Get
			Return Me._iLOG
		End Get
		Set
			If (Me._iLOG.Equals(value) = false) Then
				Me.OniLOGChanging(value)
				Me.SendPropertyChanging
				Me._iLOG = value
				Me.SendPropertyChanged("iLOG")
				Me.OniLOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iOTRO", DbType:="Decimal(18,0)")>  _
	Public Property iOTRO() As System.Nullable(Of Decimal)
		Get
			Return Me._iOTRO
		End Get
		Set
			If (Me._iOTRO.Equals(value) = false) Then
				Me.OniOTROChanging(value)
				Me.SendPropertyChanging
				Me._iOTRO = value
				Me.SendPropertyChanged("iOTRO")
				Me.OniOTROChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVenta", DbType:="Decimal(18,0)")>  _
	Public Property PVenta() As System.Nullable(Of Decimal)
		Get
			Return Me._PVenta
		End Get
		Set
			If (Me._PVenta.Equals(value) = false) Then
				Me.OnPVentaChanging(value)
				Me.SendPropertyChanging
				Me._PVenta = value
				Me.SendPropertyChanged("PVenta")
				Me.OnPVentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Glosa", DbType:="VarChar(4000)")>  _
	Public Property Glosa() As String
		Get
			Return Me._Glosa
		End Get
		Set
			If (String.Equals(Me._Glosa, value) = false) Then
				Me.OnGlosaChanging(value)
				Me.SendPropertyChanging
				Me._Glosa = value
				Me.SendPropertyChanged("Glosa")
				Me.OnGlosaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TipoDoc")>  _
Partial Public Class T_TipoDoc
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TipoDoc As String
	
	Private _DescTipoDoc As String
	
	Private _Electronica As System.Nullable(Of Boolean)
	
	Private _Contable As System.Nullable(Of Boolean)
	
	Private _Filtro As String
	
	Private _Modo As String
	
	Private _Facturable As System.Nullable(Of Boolean)
	
	Private _Emision As System.Nullable(Of Boolean)
	
	Private _Cod_SII As System.Nullable(Of Decimal)
	
	Private _Nombre_Documento As String
	
	Private _Pagos As System.Nullable(Of Boolean)
	
	Private _Anula As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnDescTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnDescTipoDocChanged()
    End Sub
    Partial Private Sub OnElectronicaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnElectronicaChanged()
    End Sub
    Partial Private Sub OnContableChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnContableChanged()
    End Sub
    Partial Private Sub OnFiltroChanging(value As String)
    End Sub
    Partial Private Sub OnFiltroChanged()
    End Sub
    Partial Private Sub OnModoChanging(value As String)
    End Sub
    Partial Private Sub OnModoChanged()
    End Sub
    Partial Private Sub OnFacturableChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFacturableChanged()
    End Sub
    Partial Private Sub OnEmisionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnEmisionChanged()
    End Sub
    Partial Private Sub OnCod_SIIChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCod_SIIChanged()
    End Sub
    Partial Private Sub OnNombre_DocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_DocumentoChanged()
    End Sub
    Partial Private Sub OnPagosChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPagosChanged()
    End Sub
    Partial Private Sub OnAnulaChanging(value As String)
    End Sub
    Partial Private Sub OnAnulaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property TipoDoc() As String
		Get
			Return Me._TipoDoc
		End Get
		Set
			If (String.Equals(Me._TipoDoc, value) = false) Then
				Me.OnTipoDocChanging(value)
				Me.SendPropertyChanging
				Me._TipoDoc = value
				Me.SendPropertyChanged("TipoDoc")
				Me.OnTipoDocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescTipoDoc", DbType:="VarChar(30)")>  _
	Public Property DescTipoDoc() As String
		Get
			Return Me._DescTipoDoc
		End Get
		Set
			If (String.Equals(Me._DescTipoDoc, value) = false) Then
				Me.OnDescTipoDocChanging(value)
				Me.SendPropertyChanging
				Me._DescTipoDoc = value
				Me.SendPropertyChanged("DescTipoDoc")
				Me.OnDescTipoDocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Electronica", DbType:="Bit")>  _
	Public Property Electronica() As System.Nullable(Of Boolean)
		Get
			Return Me._Electronica
		End Get
		Set
			If (Me._Electronica.Equals(value) = false) Then
				Me.OnElectronicaChanging(value)
				Me.SendPropertyChanging
				Me._Electronica = value
				Me.SendPropertyChanged("Electronica")
				Me.OnElectronicaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contable", DbType:="Bit")>  _
	Public Property Contable() As System.Nullable(Of Boolean)
		Get
			Return Me._Contable
		End Get
		Set
			If (Me._Contable.Equals(value) = false) Then
				Me.OnContableChanging(value)
				Me.SendPropertyChanging
				Me._Contable = value
				Me.SendPropertyChanged("Contable")
				Me.OnContableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Filtro", DbType:="VarChar(1)")>  _
	Public Property Filtro() As String
		Get
			Return Me._Filtro
		End Get
		Set
			If (String.Equals(Me._Filtro, value) = false) Then
				Me.OnFiltroChanging(value)
				Me.SendPropertyChanging
				Me._Filtro = value
				Me.SendPropertyChanged("Filtro")
				Me.OnFiltroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modo", DbType:="VarChar(1)")>  _
	Public Property Modo() As String
		Get
			Return Me._Modo
		End Get
		Set
			If (String.Equals(Me._Modo, value) = false) Then
				Me.OnModoChanging(value)
				Me.SendPropertyChanging
				Me._Modo = value
				Me.SendPropertyChanged("Modo")
				Me.OnModoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Facturable", DbType:="Bit")>  _
	Public Property Facturable() As System.Nullable(Of Boolean)
		Get
			Return Me._Facturable
		End Get
		Set
			If (Me._Facturable.Equals(value) = false) Then
				Me.OnFacturableChanging(value)
				Me.SendPropertyChanging
				Me._Facturable = value
				Me.SendPropertyChanged("Facturable")
				Me.OnFacturableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Emision", DbType:="Bit")>  _
	Public Property Emision() As System.Nullable(Of Boolean)
		Get
			Return Me._Emision
		End Get
		Set
			If (Me._Emision.Equals(value) = false) Then
				Me.OnEmisionChanging(value)
				Me.SendPropertyChanging
				Me._Emision = value
				Me.SendPropertyChanged("Emision")
				Me.OnEmisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cod_SII", DbType:="Decimal(18,0)")>  _
	Public Property Cod_SII() As System.Nullable(Of Decimal)
		Get
			Return Me._Cod_SII
		End Get
		Set
			If (Me._Cod_SII.Equals(value) = false) Then
				Me.OnCod_SIIChanging(value)
				Me.SendPropertyChanging
				Me._Cod_SII = value
				Me.SendPropertyChanged("Cod_SII")
				Me.OnCod_SIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre_Documento", DbType:="VarChar(50)")>  _
	Public Property Nombre_Documento() As String
		Get
			Return Me._Nombre_Documento
		End Get
		Set
			If (String.Equals(Me._Nombre_Documento, value) = false) Then
				Me.OnNombre_DocumentoChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Documento = value
				Me.SendPropertyChanged("Nombre_Documento")
				Me.OnNombre_DocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pagos", DbType:="Bit")>  _
	Public Property Pagos() As System.Nullable(Of Boolean)
		Get
			Return Me._Pagos
		End Get
		Set
			If (Me._Pagos.Equals(value) = false) Then
				Me.OnPagosChanging(value)
				Me.SendPropertyChanging
				Me._Pagos = value
				Me.SendPropertyChanged("Pagos")
				Me.OnPagosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Anula", DbType:="VarChar(2)")>  _
	Public Property Anula() As String
		Get
			Return Me._Anula
		End Get
		Set
			If (String.Equals(Me._Anula, value) = false) Then
				Me.OnAnulaChanging(value)
				Me.SendPropertyChanging
				Me._Anula = value
				Me.SendPropertyChanged("Anula")
				Me.OnAnulaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Estados")>  _
Partial Public Class T_Estados
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Estado As String
	
	Private _DescEstado As String
	
	Private _Tipo As Char
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnDescEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnDescEstadoChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As Char)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="VarChar(1) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Estado() As String
		Get
			Return Me._Estado
		End Get
		Set
			If (String.Equals(Me._Estado, value) = false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescEstado", DbType:="VarChar(50)")>  _
	Public Property DescEstado() As String
		Get
			Return Me._DescEstado
		End Get
		Set
			If (String.Equals(Me._DescEstado, value) = false) Then
				Me.OnDescEstadoChanging(value)
				Me.SendPropertyChanging
				Me._DescEstado = value
				Me.SendPropertyChanged("DescEstado")
				Me.OnDescEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="Char(1) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Tipo() As Char
		Get
			Return Me._Tipo
		End Get
		Set
			If ((Me._Tipo = value)  _
						= false) Then
				Me.OnTipoChanging(value)
				Me.SendPropertyChanging
				Me._Tipo = value
				Me.SendPropertyChanged("Tipo")
				Me.OnTipoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Stocks")>  _
Partial Public Class T_Stocks
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Articulo As String
	
	Private _Bodega As Decimal
	
	Private _Local As System.Nullable(Of Decimal)
	
	Private _StockMin As System.Nullable(Of Double)
	
	Private _StockMax As System.Nullable(Of Double)
	
	Private _Stock As System.Nullable(Of Double)
	
	Private _Id As Decimal
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnArticuloChanging(value As String)
    End Sub
    Partial Private Sub OnArticuloChanged()
    End Sub
    Partial Private Sub OnBodegaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBodegaChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnStockMinChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnStockMinChanged()
    End Sub
    Partial Private Sub OnStockMaxChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnStockMaxChanged()
    End Sub
    Partial Private Sub OnStockChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnStockChanged()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="VarChar(50)")>  _
	Public Property Articulo() As String
		Get
			Return Me._Articulo
		End Get
		Set
			If (String.Equals(Me._Articulo, value) = false) Then
				Me.OnArticuloChanging(value)
				Me.SendPropertyChanging
				Me._Articulo = value
				Me.SendPropertyChanged("Articulo")
				Me.OnArticuloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bodega", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Bodega() As Decimal
		Get
			Return Me._Bodega
		End Get
		Set
			If ((Me._Bodega = value)  _
						= false) Then
				Me.OnBodegaChanging(value)
				Me.SendPropertyChanging
				Me._Bodega = value
				Me.SendPropertyChanged("Bodega")
				Me.OnBodegaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0)")>  _
	Public Property Local() As System.Nullable(Of Decimal)
		Get
			Return Me._Local
		End Get
		Set
			If (Me._Local.Equals(value) = false) Then
				Me.OnLocalChanging(value)
				Me.SendPropertyChanging
				Me._Local = value
				Me.SendPropertyChanged("Local")
				Me.OnLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockMin", DbType:="Float")>  _
	Public Property StockMin() As System.Nullable(Of Double)
		Get
			Return Me._StockMin
		End Get
		Set
			If (Me._StockMin.Equals(value) = false) Then
				Me.OnStockMinChanging(value)
				Me.SendPropertyChanging
				Me._StockMin = value
				Me.SendPropertyChanged("StockMin")
				Me.OnStockMinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockMax", DbType:="Float")>  _
	Public Property StockMax() As System.Nullable(Of Double)
		Get
			Return Me._StockMax
		End Get
		Set
			If (Me._StockMax.Equals(value) = false) Then
				Me.OnStockMaxChanging(value)
				Me.SendPropertyChanging
				Me._StockMax = value
				Me.SendPropertyChanged("StockMax")
				Me.OnStockMaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stock", DbType:="Float")>  _
	Public Property Stock() As System.Nullable(Of Double)
		Get
			Return Me._Stock
		End Get
		Set
			If (Me._Stock.Equals(value) = false) Then
				Me.OnStockChanging(value)
				Me.SendPropertyChanging
				Me._Stock = value
				Me.SendPropertyChanged("Stock")
				Me.OnStockChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Decimal
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FPagos")>  _
Partial Public Class T_FPagos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FPago As String
	
	Private _DescFPago As String
	
	Private _Dias As System.Nullable(Of Decimal)
	
	Private _Orden As System.Nullable(Of Decimal)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFPagoChanging(value As String)
    End Sub
    Partial Private Sub OnFPagoChanged()
    End Sub
    Partial Private Sub OnDescFPagoChanging(value As String)
    End Sub
    Partial Private Sub OnDescFPagoChanged()
    End Sub
    Partial Private Sub OnDiasChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDiasChanged()
    End Sub
    Partial Private Sub OnOrdenChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOrdenChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPago", DbType:="VarChar(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FPago() As String
		Get
			Return Me._FPago
		End Get
		Set
			If (String.Equals(Me._FPago, value) = false) Then
				Me.OnFPagoChanging(value)
				Me.SendPropertyChanging
				Me._FPago = value
				Me.SendPropertyChanged("FPago")
				Me.OnFPagoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescFPago", DbType:="VarChar(50)")>  _
	Public Property DescFPago() As String
		Get
			Return Me._DescFPago
		End Get
		Set
			If (String.Equals(Me._DescFPago, value) = false) Then
				Me.OnDescFPagoChanging(value)
				Me.SendPropertyChanging
				Me._DescFPago = value
				Me.SendPropertyChanged("DescFPago")
				Me.OnDescFPagoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dias", DbType:="Decimal(18,0)")>  _
	Public Property Dias() As System.Nullable(Of Decimal)
		Get
			Return Me._Dias
		End Get
		Set
			If (Me._Dias.Equals(value) = false) Then
				Me.OnDiasChanging(value)
				Me.SendPropertyChanging
				Me._Dias = value
				Me.SendPropertyChanged("Dias")
				Me.OnDiasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Orden", DbType:="Decimal(18,0)")>  _
	Public Property Orden() As System.Nullable(Of Decimal)
		Get
			Return Me._Orden
		End Get
		Set
			If (Me._Orden.Equals(value) = false) Then
				Me.OnOrdenChanging(value)
				Me.SendPropertyChanging
				Me._Orden = value
				Me.SendPropertyChanged("Orden")
				Me.OnOrdenChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Usuarios")>  _
Partial Public Class T_Usuarios
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Usuario As String
	
	Private _NombreUsr As String
	
	Private _Rut As String
	
	Private _Acceso As System.Nullable(Of Decimal)
	
	Private _Clave As String
	
	Private _Local As System.Nullable(Of Decimal)
	
	Private _Bodega As System.Nullable(Of Decimal)
	
	Private _Funcionario As System.Nullable(Of Boolean)
	
	Private _Empresa As System.Nullable(Of Decimal)
	
	Private _MaxDescuento As System.Nullable(Of Double)
	
	Private _Base As System.Nullable(Of Decimal)
	
	Private _Bruto As System.Nullable(Of Decimal)
	
	Private _AFP As System.Nullable(Of Decimal)
	
	Private _Salud As System.Nullable(Of Decimal)
	
	Private _Pactado As System.Nullable(Of Double)
	
	Private _CajaComp As System.Nullable(Of Decimal)
	
	Private _Vigencia As System.Nullable(Of Date)
	
	Private _Movilizacion As System.Nullable(Of Double)
	
	Private _Colacion As System.Nullable(Of Double)
	
	Private _Gratificacion As System.Nullable(Of Double)
	
	Private _Cargas As System.Nullable(Of Decimal)
	
	Private _MontoCargas As System.Nullable(Of Double)
	
	Private _SIS As System.Nullable(Of Double)
	
	Private _ImpuestoUnico As System.Nullable(Of Double)
	
	Private _Banco As String
	
	Private _CuentaCorriente As String
	
	Private _Correo As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnNombreUsrChanging(value As String)
    End Sub
    Partial Private Sub OnNombreUsrChanged()
    End Sub
    Partial Private Sub OnRutChanging(value As String)
    End Sub
    Partial Private Sub OnRutChanged()
    End Sub
    Partial Private Sub OnAccesoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAccesoChanged()
    End Sub
    Partial Private Sub OnClaveChanging(value As String)
    End Sub
    Partial Private Sub OnClaveChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnBodegaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBodegaChanged()
    End Sub
    Partial Private Sub OnFuncionarioChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFuncionarioChanged()
    End Sub
    Partial Private Sub OnEmpresaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnEmpresaChanged()
    End Sub
    Partial Private Sub OnMaxDescuentoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMaxDescuentoChanged()
    End Sub
    Partial Private Sub OnBaseChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBaseChanged()
    End Sub
    Partial Private Sub OnBrutoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBrutoChanged()
    End Sub
    Partial Private Sub OnAFPChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAFPChanged()
    End Sub
    Partial Private Sub OnSaludChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSaludChanged()
    End Sub
    Partial Private Sub OnPactadoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPactadoChanged()
    End Sub
    Partial Private Sub OnCajaCompChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCajaCompChanged()
    End Sub
    Partial Private Sub OnVigenciaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnVigenciaChanged()
    End Sub
    Partial Private Sub OnMovilizacionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMovilizacionChanged()
    End Sub
    Partial Private Sub OnColacionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnColacionChanged()
    End Sub
    Partial Private Sub OnGratificacionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGratificacionChanged()
    End Sub
    Partial Private Sub OnCargasChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCargasChanged()
    End Sub
    Partial Private Sub OnMontoCargasChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMontoCargasChanged()
    End Sub
    Partial Private Sub OnSISChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSISChanged()
    End Sub
    Partial Private Sub OnImpuestoUnicoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnImpuestoUnicoChanged()
    End Sub
    Partial Private Sub OnBancoChanging(value As String)
    End Sub
    Partial Private Sub OnBancoChanged()
    End Sub
    Partial Private Sub OnCuentaCorrienteChanging(value As String)
    End Sub
    Partial Private Sub OnCuentaCorrienteChanged()
    End Sub
    Partial Private Sub OnCorreoChanging(value As String)
    End Sub
    Partial Private Sub OnCorreoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(3) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreUsr", DbType:="VarChar(100)")>  _
	Public Property NombreUsr() As String
		Get
			Return Me._NombreUsr
		End Get
		Set
			If (String.Equals(Me._NombreUsr, value) = false) Then
				Me.OnNombreUsrChanging(value)
				Me.SendPropertyChanging
				Me._NombreUsr = value
				Me.SendPropertyChanged("NombreUsr")
				Me.OnNombreUsrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rut", DbType:="VarChar(12)")>  _
	Public Property Rut() As String
		Get
			Return Me._Rut
		End Get
		Set
			If (String.Equals(Me._Rut, value) = false) Then
				Me.OnRutChanging(value)
				Me.SendPropertyChanging
				Me._Rut = value
				Me.SendPropertyChanged("Rut")
				Me.OnRutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Acceso", DbType:="Decimal(18,0)")>  _
	Public Property Acceso() As System.Nullable(Of Decimal)
		Get
			Return Me._Acceso
		End Get
		Set
			If (Me._Acceso.Equals(value) = false) Then
				Me.OnAccesoChanging(value)
				Me.SendPropertyChanging
				Me._Acceso = value
				Me.SendPropertyChanged("Acceso")
				Me.OnAccesoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Clave", DbType:="VarChar(50)")>  _
	Public Property Clave() As String
		Get
			Return Me._Clave
		End Get
		Set
			If (String.Equals(Me._Clave, value) = false) Then
				Me.OnClaveChanging(value)
				Me.SendPropertyChanging
				Me._Clave = value
				Me.SendPropertyChanged("Clave")
				Me.OnClaveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0)")>  _
	Public Property Local() As System.Nullable(Of Decimal)
		Get
			Return Me._Local
		End Get
		Set
			If (Me._Local.Equals(value) = false) Then
				Me.OnLocalChanging(value)
				Me.SendPropertyChanging
				Me._Local = value
				Me.SendPropertyChanged("Local")
				Me.OnLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bodega", DbType:="Decimal(18,0)")>  _
	Public Property Bodega() As System.Nullable(Of Decimal)
		Get
			Return Me._Bodega
		End Get
		Set
			If (Me._Bodega.Equals(value) = false) Then
				Me.OnBodegaChanging(value)
				Me.SendPropertyChanging
				Me._Bodega = value
				Me.SendPropertyChanged("Bodega")
				Me.OnBodegaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Funcionario", DbType:="Bit")>  _
	Public Property Funcionario() As System.Nullable(Of Boolean)
		Get
			Return Me._Funcionario
		End Get
		Set
			If (Me._Funcionario.Equals(value) = false) Then
				Me.OnFuncionarioChanging(value)
				Me.SendPropertyChanging
				Me._Funcionario = value
				Me.SendPropertyChanged("Funcionario")
				Me.OnFuncionarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Empresa", DbType:="Decimal(18,0)")>  _
	Public Property Empresa() As System.Nullable(Of Decimal)
		Get
			Return Me._Empresa
		End Get
		Set
			If (Me._Empresa.Equals(value) = false) Then
				Me.OnEmpresaChanging(value)
				Me.SendPropertyChanging
				Me._Empresa = value
				Me.SendPropertyChanged("Empresa")
				Me.OnEmpresaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxDescuento", DbType:="Float")>  _
	Public Property MaxDescuento() As System.Nullable(Of Double)
		Get
			Return Me._MaxDescuento
		End Get
		Set
			If (Me._MaxDescuento.Equals(value) = false) Then
				Me.OnMaxDescuentoChanging(value)
				Me.SendPropertyChanging
				Me._MaxDescuento = value
				Me.SendPropertyChanged("MaxDescuento")
				Me.OnMaxDescuentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Base", DbType:="Decimal(18,0)")>  _
	Public Property Base() As System.Nullable(Of Decimal)
		Get
			Return Me._Base
		End Get
		Set
			If (Me._Base.Equals(value) = false) Then
				Me.OnBaseChanging(value)
				Me.SendPropertyChanging
				Me._Base = value
				Me.SendPropertyChanged("Base")
				Me.OnBaseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bruto", DbType:="Decimal(18,0)")>  _
	Public Property Bruto() As System.Nullable(Of Decimal)
		Get
			Return Me._Bruto
		End Get
		Set
			If (Me._Bruto.Equals(value) = false) Then
				Me.OnBrutoChanging(value)
				Me.SendPropertyChanging
				Me._Bruto = value
				Me.SendPropertyChanged("Bruto")
				Me.OnBrutoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AFP", DbType:="Decimal(18,0)")>  _
	Public Property AFP() As System.Nullable(Of Decimal)
		Get
			Return Me._AFP
		End Get
		Set
			If (Me._AFP.Equals(value) = false) Then
				Me.OnAFPChanging(value)
				Me.SendPropertyChanging
				Me._AFP = value
				Me.SendPropertyChanged("AFP")
				Me.OnAFPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Salud", DbType:="Decimal(18,0)")>  _
	Public Property Salud() As System.Nullable(Of Decimal)
		Get
			Return Me._Salud
		End Get
		Set
			If (Me._Salud.Equals(value) = false) Then
				Me.OnSaludChanging(value)
				Me.SendPropertyChanging
				Me._Salud = value
				Me.SendPropertyChanged("Salud")
				Me.OnSaludChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pactado", DbType:="Float")>  _
	Public Property Pactado() As System.Nullable(Of Double)
		Get
			Return Me._Pactado
		End Get
		Set
			If (Me._Pactado.Equals(value) = false) Then
				Me.OnPactadoChanging(value)
				Me.SendPropertyChanging
				Me._Pactado = value
				Me.SendPropertyChanged("Pactado")
				Me.OnPactadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CajaComp", DbType:="Decimal(18,0)")>  _
	Public Property CajaComp() As System.Nullable(Of Decimal)
		Get
			Return Me._CajaComp
		End Get
		Set
			If (Me._CajaComp.Equals(value) = false) Then
				Me.OnCajaCompChanging(value)
				Me.SendPropertyChanging
				Me._CajaComp = value
				Me.SendPropertyChanged("CajaComp")
				Me.OnCajaCompChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vigencia", DbType:="DateTime")>  _
	Public Property Vigencia() As System.Nullable(Of Date)
		Get
			Return Me._Vigencia
		End Get
		Set
			If (Me._Vigencia.Equals(value) = false) Then
				Me.OnVigenciaChanging(value)
				Me.SendPropertyChanging
				Me._Vigencia = value
				Me.SendPropertyChanged("Vigencia")
				Me.OnVigenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Movilizacion", DbType:="Float")>  _
	Public Property Movilizacion() As System.Nullable(Of Double)
		Get
			Return Me._Movilizacion
		End Get
		Set
			If (Me._Movilizacion.Equals(value) = false) Then
				Me.OnMovilizacionChanging(value)
				Me.SendPropertyChanging
				Me._Movilizacion = value
				Me.SendPropertyChanged("Movilizacion")
				Me.OnMovilizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Colacion", DbType:="Float")>  _
	Public Property Colacion() As System.Nullable(Of Double)
		Get
			Return Me._Colacion
		End Get
		Set
			If (Me._Colacion.Equals(value) = false) Then
				Me.OnColacionChanging(value)
				Me.SendPropertyChanging
				Me._Colacion = value
				Me.SendPropertyChanged("Colacion")
				Me.OnColacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gratificacion", DbType:="Float")>  _
	Public Property Gratificacion() As System.Nullable(Of Double)
		Get
			Return Me._Gratificacion
		End Get
		Set
			If (Me._Gratificacion.Equals(value) = false) Then
				Me.OnGratificacionChanging(value)
				Me.SendPropertyChanging
				Me._Gratificacion = value
				Me.SendPropertyChanged("Gratificacion")
				Me.OnGratificacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cargas", DbType:="Decimal(18,0)")>  _
	Public Property Cargas() As System.Nullable(Of Decimal)
		Get
			Return Me._Cargas
		End Get
		Set
			If (Me._Cargas.Equals(value) = false) Then
				Me.OnCargasChanging(value)
				Me.SendPropertyChanging
				Me._Cargas = value
				Me.SendPropertyChanged("Cargas")
				Me.OnCargasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MontoCargas", DbType:="Float")>  _
	Public Property MontoCargas() As System.Nullable(Of Double)
		Get
			Return Me._MontoCargas
		End Get
		Set
			If (Me._MontoCargas.Equals(value) = false) Then
				Me.OnMontoCargasChanging(value)
				Me.SendPropertyChanging
				Me._MontoCargas = value
				Me.SendPropertyChanged("MontoCargas")
				Me.OnMontoCargasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIS", DbType:="Float")>  _
	Public Property SIS() As System.Nullable(Of Double)
		Get
			Return Me._SIS
		End Get
		Set
			If (Me._SIS.Equals(value) = false) Then
				Me.OnSISChanging(value)
				Me.SendPropertyChanging
				Me._SIS = value
				Me.SendPropertyChanged("SIS")
				Me.OnSISChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImpuestoUnico", DbType:="Float")>  _
	Public Property ImpuestoUnico() As System.Nullable(Of Double)
		Get
			Return Me._ImpuestoUnico
		End Get
		Set
			If (Me._ImpuestoUnico.Equals(value) = false) Then
				Me.OnImpuestoUnicoChanging(value)
				Me.SendPropertyChanging
				Me._ImpuestoUnico = value
				Me.SendPropertyChanged("ImpuestoUnico")
				Me.OnImpuestoUnicoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Banco", DbType:="VarChar(3)")>  _
	Public Property Banco() As String
		Get
			Return Me._Banco
		End Get
		Set
			If (String.Equals(Me._Banco, value) = false) Then
				Me.OnBancoChanging(value)
				Me.SendPropertyChanging
				Me._Banco = value
				Me.SendPropertyChanged("Banco")
				Me.OnBancoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CuentaCorriente", DbType:="VarChar(50)")>  _
	Public Property CuentaCorriente() As String
		Get
			Return Me._CuentaCorriente
		End Get
		Set
			If (String.Equals(Me._CuentaCorriente, value) = false) Then
				Me.OnCuentaCorrienteChanging(value)
				Me.SendPropertyChanging
				Me._CuentaCorriente = value
				Me.SendPropertyChanged("CuentaCorriente")
				Me.OnCuentaCorrienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Correo", DbType:="VarChar(50)")>  _
	Public Property Correo() As String
		Get
			Return Me._Correo
		End Get
		Set
			If (String.Equals(Me._Correo, value) = false) Then
				Me.OnCorreoChanging(value)
				Me.SendPropertyChanging
				Me._Correo = value
				Me.SendPropertyChanged("Correo")
				Me.OnCorreoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Articulos")>  _
Partial Public Class T_Articulos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Articulo As String
	
	Private _Descripcion As String
	
	Private _Unidad As String
	
	Private _Familia As System.Nullable(Of Decimal)
	
	Private _SubFamilia As System.Nullable(Of Decimal)
	
	Private _Marca As String
	
	Private _SKU As String
	
	Private _Tipo As String
	
	Private _Costo As System.Nullable(Of Double)
	
	Private _PVenta As System.Nullable(Of Double)
	
	Private _Oferta As System.Nullable(Of Boolean)
	
	Private _MaxDescuento As System.Nullable(Of Double)
	
	Private _ActivoFijo As System.Nullable(Of Boolean)
	
	Private _Ano As System.Nullable(Of Decimal)
	
	Private _Grupo As String
	
	Private _Categoria As String
	
	Private _Estado As System.Nullable(Of Char)
	
	Private _iIVA As System.Nullable(Of Decimal)
	
	Private _iEXE As System.Nullable(Of Boolean)
	
	Private _iMIN As System.Nullable(Of Decimal)
	
	Private _iBEB As System.Nullable(Of Decimal)
	
	Private _iVIN As System.Nullable(Of Decimal)
	
	Private _iCER As System.Nullable(Of Decimal)
	
	Private _iLIC As System.Nullable(Of Decimal)
	
	Private _iCAR As System.Nullable(Of Decimal)
	
	Private _iHAR As System.Nullable(Of Decimal)
	
	Private _iTAB As System.Nullable(Of Decimal)
	
	Private _iFEP As System.Nullable(Of Decimal)
	
	Private _iLOG As System.Nullable(Of Decimal)
	
	Private _iOTRO As System.Nullable(Of Decimal)
	
	Private _DetalleProducto As String
	
	Private _Id As Decimal
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnArticuloChanging(value As String)
    End Sub
    Partial Private Sub OnArticuloChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnUnidadChanging(value As String)
    End Sub
    Partial Private Sub OnUnidadChanged()
    End Sub
    Partial Private Sub OnFamiliaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFamiliaChanged()
    End Sub
    Partial Private Sub OnSubFamiliaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSubFamiliaChanged()
    End Sub
    Partial Private Sub OnMarcaChanging(value As String)
    End Sub
    Partial Private Sub OnMarcaChanged()
    End Sub
    Partial Private Sub OnSKUChanging(value As String)
    End Sub
    Partial Private Sub OnSKUChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnCostoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCostoChanged()
    End Sub
    Partial Private Sub OnPVentaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPVentaChanged()
    End Sub
    Partial Private Sub OnOfertaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnOfertaChanged()
    End Sub
    Partial Private Sub OnMaxDescuentoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMaxDescuentoChanged()
    End Sub
    Partial Private Sub OnActivoFijoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnActivoFijoChanged()
    End Sub
    Partial Private Sub OnAnoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAnoChanged()
    End Sub
    Partial Private Sub OnGrupoChanging(value As String)
    End Sub
    Partial Private Sub OnGrupoChanged()
    End Sub
    Partial Private Sub OnCategoriaChanging(value As String)
    End Sub
    Partial Private Sub OnCategoriaChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OniIVAChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniIVAChanged()
    End Sub
    Partial Private Sub OniEXEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OniEXEChanged()
    End Sub
    Partial Private Sub OniMINChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniMINChanged()
    End Sub
    Partial Private Sub OniBEBChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniBEBChanged()
    End Sub
    Partial Private Sub OniVINChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniVINChanged()
    End Sub
    Partial Private Sub OniCERChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniCERChanged()
    End Sub
    Partial Private Sub OniLICChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniLICChanged()
    End Sub
    Partial Private Sub OniCARChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniCARChanged()
    End Sub
    Partial Private Sub OniHARChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniHARChanged()
    End Sub
    Partial Private Sub OniTABChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniTABChanged()
    End Sub
    Partial Private Sub OniFEPChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniFEPChanged()
    End Sub
    Partial Private Sub OniLOGChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniLOGChanged()
    End Sub
    Partial Private Sub OniOTROChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OniOTROChanged()
    End Sub
    Partial Private Sub OnDetalleProductoChanging(value As String)
    End Sub
    Partial Private Sub OnDetalleProductoChanged()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Articulo() As String
		Get
			Return Me._Articulo
		End Get
		Set
			If (String.Equals(Me._Articulo, value) = false) Then
				Me.OnArticuloChanging(value)
				Me.SendPropertyChanging
				Me._Articulo = value
				Me.SendPropertyChanged("Articulo")
				Me.OnArticuloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(200)")>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Unidad", DbType:="VarChar(2)")>  _
	Public Property Unidad() As String
		Get
			Return Me._Unidad
		End Get
		Set
			If (String.Equals(Me._Unidad, value) = false) Then
				Me.OnUnidadChanging(value)
				Me.SendPropertyChanging
				Me._Unidad = value
				Me.SendPropertyChanged("Unidad")
				Me.OnUnidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Familia", DbType:="Decimal(18,0)")>  _
	Public Property Familia() As System.Nullable(Of Decimal)
		Get
			Return Me._Familia
		End Get
		Set
			If (Me._Familia.Equals(value) = false) Then
				Me.OnFamiliaChanging(value)
				Me.SendPropertyChanging
				Me._Familia = value
				Me.SendPropertyChanged("Familia")
				Me.OnFamiliaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubFamilia", DbType:="Decimal(18,0)")>  _
	Public Property SubFamilia() As System.Nullable(Of Decimal)
		Get
			Return Me._SubFamilia
		End Get
		Set
			If (Me._SubFamilia.Equals(value) = false) Then
				Me.OnSubFamiliaChanging(value)
				Me.SendPropertyChanging
				Me._SubFamilia = value
				Me.SendPropertyChanged("SubFamilia")
				Me.OnSubFamiliaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Marca", DbType:="VarChar(50)")>  _
	Public Property Marca() As String
		Get
			Return Me._Marca
		End Get
		Set
			If (String.Equals(Me._Marca, value) = false) Then
				Me.OnMarcaChanging(value)
				Me.SendPropertyChanging
				Me._Marca = value
				Me.SendPropertyChanged("Marca")
				Me.OnMarcaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SKU", DbType:="VarChar(50)")>  _
	Public Property SKU() As String
		Get
			Return Me._SKU
		End Get
		Set
			If (String.Equals(Me._SKU, value) = false) Then
				Me.OnSKUChanging(value)
				Me.SendPropertyChanging
				Me._SKU = value
				Me.SendPropertyChanged("SKU")
				Me.OnSKUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="VarChar(50)")>  _
	Public Property Tipo() As String
		Get
			Return Me._Tipo
		End Get
		Set
			If (String.Equals(Me._Tipo, value) = false) Then
				Me.OnTipoChanging(value)
				Me.SendPropertyChanging
				Me._Tipo = value
				Me.SendPropertyChanged("Tipo")
				Me.OnTipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Costo", DbType:="Float")>  _
	Public Property Costo() As System.Nullable(Of Double)
		Get
			Return Me._Costo
		End Get
		Set
			If (Me._Costo.Equals(value) = false) Then
				Me.OnCostoChanging(value)
				Me.SendPropertyChanging
				Me._Costo = value
				Me.SendPropertyChanged("Costo")
				Me.OnCostoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVenta", DbType:="Float")>  _
	Public Property PVenta() As System.Nullable(Of Double)
		Get
			Return Me._PVenta
		End Get
		Set
			If (Me._PVenta.Equals(value) = false) Then
				Me.OnPVentaChanging(value)
				Me.SendPropertyChanging
				Me._PVenta = value
				Me.SendPropertyChanged("PVenta")
				Me.OnPVentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Oferta", DbType:="Bit")>  _
	Public Property Oferta() As System.Nullable(Of Boolean)
		Get
			Return Me._Oferta
		End Get
		Set
			If (Me._Oferta.Equals(value) = false) Then
				Me.OnOfertaChanging(value)
				Me.SendPropertyChanging
				Me._Oferta = value
				Me.SendPropertyChanged("Oferta")
				Me.OnOfertaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxDescuento", DbType:="Float")>  _
	Public Property MaxDescuento() As System.Nullable(Of Double)
		Get
			Return Me._MaxDescuento
		End Get
		Set
			If (Me._MaxDescuento.Equals(value) = false) Then
				Me.OnMaxDescuentoChanging(value)
				Me.SendPropertyChanging
				Me._MaxDescuento = value
				Me.SendPropertyChanged("MaxDescuento")
				Me.OnMaxDescuentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActivoFijo", DbType:="Bit")>  _
	Public Property ActivoFijo() As System.Nullable(Of Boolean)
		Get
			Return Me._ActivoFijo
		End Get
		Set
			If (Me._ActivoFijo.Equals(value) = false) Then
				Me.OnActivoFijoChanging(value)
				Me.SendPropertyChanging
				Me._ActivoFijo = value
				Me.SendPropertyChanged("ActivoFijo")
				Me.OnActivoFijoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ano", DbType:="Decimal(4,0)")>  _
	Public Property Ano() As System.Nullable(Of Decimal)
		Get
			Return Me._Ano
		End Get
		Set
			If (Me._Ano.Equals(value) = false) Then
				Me.OnAnoChanging(value)
				Me.SendPropertyChanging
				Me._Ano = value
				Me.SendPropertyChanged("Ano")
				Me.OnAnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grupo", DbType:="VarChar(100)")>  _
	Public Property Grupo() As String
		Get
			Return Me._Grupo
		End Get
		Set
			If (String.Equals(Me._Grupo, value) = false) Then
				Me.OnGrupoChanging(value)
				Me.SendPropertyChanging
				Me._Grupo = value
				Me.SendPropertyChanged("Grupo")
				Me.OnGrupoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Categoria", DbType:="VarChar(100)")>  _
	Public Property Categoria() As String
		Get
			Return Me._Categoria
		End Get
		Set
			If (String.Equals(Me._Categoria, value) = false) Then
				Me.OnCategoriaChanging(value)
				Me.SendPropertyChanging
				Me._Categoria = value
				Me.SendPropertyChanged("Categoria")
				Me.OnCategoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="Char(1)")>  _
	Public Property Estado() As System.Nullable(Of Char)
		Get
			Return Me._Estado
		End Get
		Set
			If (Me._Estado.Equals(value) = false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iIVA", DbType:="Decimal(18,2)")>  _
	Public Property iIVA() As System.Nullable(Of Decimal)
		Get
			Return Me._iIVA
		End Get
		Set
			If (Me._iIVA.Equals(value) = false) Then
				Me.OniIVAChanging(value)
				Me.SendPropertyChanging
				Me._iIVA = value
				Me.SendPropertyChanged("iIVA")
				Me.OniIVAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iEXE", DbType:="Bit")>  _
	Public Property iEXE() As System.Nullable(Of Boolean)
		Get
			Return Me._iEXE
		End Get
		Set
			If (Me._iEXE.Equals(value) = false) Then
				Me.OniEXEChanging(value)
				Me.SendPropertyChanging
				Me._iEXE = value
				Me.SendPropertyChanged("iEXE")
				Me.OniEXEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iMIN", DbType:="Decimal(18,2)")>  _
	Public Property iMIN() As System.Nullable(Of Decimal)
		Get
			Return Me._iMIN
		End Get
		Set
			If (Me._iMIN.Equals(value) = false) Then
				Me.OniMINChanging(value)
				Me.SendPropertyChanging
				Me._iMIN = value
				Me.SendPropertyChanged("iMIN")
				Me.OniMINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iBEB", DbType:="Decimal(18,2)")>  _
	Public Property iBEB() As System.Nullable(Of Decimal)
		Get
			Return Me._iBEB
		End Get
		Set
			If (Me._iBEB.Equals(value) = false) Then
				Me.OniBEBChanging(value)
				Me.SendPropertyChanging
				Me._iBEB = value
				Me.SendPropertyChanged("iBEB")
				Me.OniBEBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iVIN", DbType:="Decimal(18,2)")>  _
	Public Property iVIN() As System.Nullable(Of Decimal)
		Get
			Return Me._iVIN
		End Get
		Set
			If (Me._iVIN.Equals(value) = false) Then
				Me.OniVINChanging(value)
				Me.SendPropertyChanging
				Me._iVIN = value
				Me.SendPropertyChanged("iVIN")
				Me.OniVINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iCER", DbType:="Decimal(18,2)")>  _
	Public Property iCER() As System.Nullable(Of Decimal)
		Get
			Return Me._iCER
		End Get
		Set
			If (Me._iCER.Equals(value) = false) Then
				Me.OniCERChanging(value)
				Me.SendPropertyChanging
				Me._iCER = value
				Me.SendPropertyChanged("iCER")
				Me.OniCERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iLIC", DbType:="Decimal(18,2)")>  _
	Public Property iLIC() As System.Nullable(Of Decimal)
		Get
			Return Me._iLIC
		End Get
		Set
			If (Me._iLIC.Equals(value) = false) Then
				Me.OniLICChanging(value)
				Me.SendPropertyChanging
				Me._iLIC = value
				Me.SendPropertyChanged("iLIC")
				Me.OniLICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iCAR", DbType:="Decimal(18,2)")>  _
	Public Property iCAR() As System.Nullable(Of Decimal)
		Get
			Return Me._iCAR
		End Get
		Set
			If (Me._iCAR.Equals(value) = false) Then
				Me.OniCARChanging(value)
				Me.SendPropertyChanging
				Me._iCAR = value
				Me.SendPropertyChanged("iCAR")
				Me.OniCARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iHAR", DbType:="Decimal(18,2)")>  _
	Public Property iHAR() As System.Nullable(Of Decimal)
		Get
			Return Me._iHAR
		End Get
		Set
			If (Me._iHAR.Equals(value) = false) Then
				Me.OniHARChanging(value)
				Me.SendPropertyChanging
				Me._iHAR = value
				Me.SendPropertyChanged("iHAR")
				Me.OniHARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iTAB", DbType:="Decimal(18,2)")>  _
	Public Property iTAB() As System.Nullable(Of Decimal)
		Get
			Return Me._iTAB
		End Get
		Set
			If (Me._iTAB.Equals(value) = false) Then
				Me.OniTABChanging(value)
				Me.SendPropertyChanging
				Me._iTAB = value
				Me.SendPropertyChanged("iTAB")
				Me.OniTABChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iFEP", DbType:="Decimal(18,2)")>  _
	Public Property iFEP() As System.Nullable(Of Decimal)
		Get
			Return Me._iFEP
		End Get
		Set
			If (Me._iFEP.Equals(value) = false) Then
				Me.OniFEPChanging(value)
				Me.SendPropertyChanging
				Me._iFEP = value
				Me.SendPropertyChanged("iFEP")
				Me.OniFEPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iLOG", DbType:="Decimal(18,2)")>  _
	Public Property iLOG() As System.Nullable(Of Decimal)
		Get
			Return Me._iLOG
		End Get
		Set
			If (Me._iLOG.Equals(value) = false) Then
				Me.OniLOGChanging(value)
				Me.SendPropertyChanging
				Me._iLOG = value
				Me.SendPropertyChanged("iLOG")
				Me.OniLOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iOTRO", DbType:="Decimal(18,2)")>  _
	Public Property iOTRO() As System.Nullable(Of Decimal)
		Get
			Return Me._iOTRO
		End Get
		Set
			If (Me._iOTRO.Equals(value) = false) Then
				Me.OniOTROChanging(value)
				Me.SendPropertyChanging
				Me._iOTRO = value
				Me.SendPropertyChanged("iOTRO")
				Me.OniOTROChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DetalleProducto", DbType:="VarChar(1000)")>  _
	Public Property DetalleProducto() As String
		Get
			Return Me._DetalleProducto
		End Get
		Set
			If (String.Equals(Me._DetalleProducto, value) = false) Then
				Me.OnDetalleProductoChanging(value)
				Me.SendPropertyChanging
				Me._DetalleProducto = value
				Me.SendPropertyChanged("DetalleProducto")
				Me.OnDetalleProductoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.Always, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property Id() As Decimal
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Unidades")>  _
Partial Public Class T_Unidades
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Unidad As String
	
	Private _DescUnidad As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUnidadChanging(value As String)
    End Sub
    Partial Private Sub OnUnidadChanged()
    End Sub
    Partial Private Sub OnDescUnidadChanging(value As String)
    End Sub
    Partial Private Sub OnDescUnidadChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Unidad", DbType:="VarChar(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Unidad() As String
		Get
			Return Me._Unidad
		End Get
		Set
			If (String.Equals(Me._Unidad, value) = false) Then
				Me.OnUnidadChanging(value)
				Me.SendPropertyChanging
				Me._Unidad = value
				Me.SendPropertyChanged("Unidad")
				Me.OnUnidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescUnidad", DbType:="VarChar(30)")>  _
	Public Property DescUnidad() As String
		Get
			Return Me._DescUnidad
		End Get
		Set
			If (String.Equals(Me._DescUnidad, value) = false) Then
				Me.OnDescUnidadChanging(value)
				Me.SendPropertyChanging
				Me._DescUnidad = value
				Me.SendPropertyChanged("DescUnidad")
				Me.OnDescUnidadChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DetalleDocumentos")>  _
Partial Public Class V_DetalleDocumentos
	
	Private _ID As Decimal
	
	Private _Local As System.Nullable(Of Decimal)
	
	Private _TipoDoc As String
	
	Private _Numero As System.Nullable(Of Decimal)
	
	Private _Articulo As String
	
	Private _Cantidad As System.Nullable(Of Double)
	
	Private _Neto As System.Nullable(Of Double)
	
	Private _IVA As System.Nullable(Of Decimal)
	
	Private _iEXE As System.Nullable(Of Decimal)
	
	Private _iMIN As System.Nullable(Of Decimal)
	
	Private _iBEB As System.Nullable(Of Decimal)
	
	Private _iVIN As System.Nullable(Of Decimal)
	
	Private _iCER As System.Nullable(Of Decimal)
	
	Private _iLIC As System.Nullable(Of Decimal)
	
	Private _iCAR As System.Nullable(Of Decimal)
	
	Private _iHAR As System.Nullable(Of Decimal)
	
	Private _iTAB As System.Nullable(Of Decimal)
	
	Private _iFEP As System.Nullable(Of Decimal)
	
	Private _iLOG As System.Nullable(Of Decimal)
	
	Private _iOTRO As System.Nullable(Of Decimal)
	
	Private _PVenta As System.Nullable(Of Decimal)
	
	Private _Glosa As String
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Descripcion As String
	
	Private _DescUnidad As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property ID() As Decimal
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0)")>  _
	Public Property Local() As System.Nullable(Of Decimal)
		Get
			Return Me._Local
		End Get
		Set
			If (Me._Local.Equals(value) = false) Then
				Me._Local = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2)")>  _
	Public Property TipoDoc() As String
		Get
			Return Me._TipoDoc
		End Get
		Set
			If (String.Equals(Me._TipoDoc, value) = false) Then
				Me._TipoDoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Numero", DbType:="Decimal(18,0)")>  _
	Public Property Numero() As System.Nullable(Of Decimal)
		Get
			Return Me._Numero
		End Get
		Set
			If (Me._Numero.Equals(value) = false) Then
				Me._Numero = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="VarChar(30)")>  _
	Public Property Articulo() As String
		Get
			Return Me._Articulo
		End Get
		Set
			If (String.Equals(Me._Articulo, value) = false) Then
				Me._Articulo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Float")>  _
	Public Property Cantidad() As System.Nullable(Of Double)
		Get
			Return Me._Cantidad
		End Get
		Set
			If (Me._Cantidad.Equals(value) = false) Then
				Me._Cantidad = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Neto", DbType:="Float")>  _
	Public Property Neto() As System.Nullable(Of Double)
		Get
			Return Me._Neto
		End Get
		Set
			If (Me._Neto.Equals(value) = false) Then
				Me._Neto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IVA", DbType:="Decimal(18,0)")>  _
	Public Property IVA() As System.Nullable(Of Decimal)
		Get
			Return Me._IVA
		End Get
		Set
			If (Me._IVA.Equals(value) = false) Then
				Me._IVA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iEXE", DbType:="Decimal(18,0)")>  _
	Public Property iEXE() As System.Nullable(Of Decimal)
		Get
			Return Me._iEXE
		End Get
		Set
			If (Me._iEXE.Equals(value) = false) Then
				Me._iEXE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iMIN", DbType:="Decimal(18,0)")>  _
	Public Property iMIN() As System.Nullable(Of Decimal)
		Get
			Return Me._iMIN
		End Get
		Set
			If (Me._iMIN.Equals(value) = false) Then
				Me._iMIN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iBEB", DbType:="Decimal(18,0)")>  _
	Public Property iBEB() As System.Nullable(Of Decimal)
		Get
			Return Me._iBEB
		End Get
		Set
			If (Me._iBEB.Equals(value) = false) Then
				Me._iBEB = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iVIN", DbType:="Decimal(18,0)")>  _
	Public Property iVIN() As System.Nullable(Of Decimal)
		Get
			Return Me._iVIN
		End Get
		Set
			If (Me._iVIN.Equals(value) = false) Then
				Me._iVIN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iCER", DbType:="Decimal(18,0)")>  _
	Public Property iCER() As System.Nullable(Of Decimal)
		Get
			Return Me._iCER
		End Get
		Set
			If (Me._iCER.Equals(value) = false) Then
				Me._iCER = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iLIC", DbType:="Decimal(18,0)")>  _
	Public Property iLIC() As System.Nullable(Of Decimal)
		Get
			Return Me._iLIC
		End Get
		Set
			If (Me._iLIC.Equals(value) = false) Then
				Me._iLIC = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iCAR", DbType:="Decimal(18,0)")>  _
	Public Property iCAR() As System.Nullable(Of Decimal)
		Get
			Return Me._iCAR
		End Get
		Set
			If (Me._iCAR.Equals(value) = false) Then
				Me._iCAR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iHAR", DbType:="Decimal(18,0)")>  _
	Public Property iHAR() As System.Nullable(Of Decimal)
		Get
			Return Me._iHAR
		End Get
		Set
			If (Me._iHAR.Equals(value) = false) Then
				Me._iHAR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iTAB", DbType:="Decimal(18,0)")>  _
	Public Property iTAB() As System.Nullable(Of Decimal)
		Get
			Return Me._iTAB
		End Get
		Set
			If (Me._iTAB.Equals(value) = false) Then
				Me._iTAB = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iFEP", DbType:="Decimal(18,0)")>  _
	Public Property iFEP() As System.Nullable(Of Decimal)
		Get
			Return Me._iFEP
		End Get
		Set
			If (Me._iFEP.Equals(value) = false) Then
				Me._iFEP = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iLOG", DbType:="Decimal(18,0)")>  _
	Public Property iLOG() As System.Nullable(Of Decimal)
		Get
			Return Me._iLOG
		End Get
		Set
			If (Me._iLOG.Equals(value) = false) Then
				Me._iLOG = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iOTRO", DbType:="Decimal(18,0)")>  _
	Public Property iOTRO() As System.Nullable(Of Decimal)
		Get
			Return Me._iOTRO
		End Get
		Set
			If (Me._iOTRO.Equals(value) = false) Then
				Me._iOTRO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVenta", DbType:="Decimal(18,0)")>  _
	Public Property PVenta() As System.Nullable(Of Decimal)
		Get
			Return Me._PVenta
		End Get
		Set
			If (Me._PVenta.Equals(value) = false) Then
				Me._PVenta = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Glosa", DbType:="VarChar(4000)")>  _
	Public Property Glosa() As String
		Get
			Return Me._Glosa
		End Get
		Set
			If (String.Equals(Me._Glosa, value) = false) Then
				Me._Glosa = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Datetime")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me._Fecha = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(200)")>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me._Descripcion = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescUnidad", DbType:="VarChar(30)")>  _
	Public Property DescUnidad() As String
		Get
			Return Me._DescUnidad
		End Get
		Set
			If (String.Equals(Me._DescUnidad, value) = false) Then
				Me._DescUnidad = value
			End If
		End Set
	End Property
End Class
