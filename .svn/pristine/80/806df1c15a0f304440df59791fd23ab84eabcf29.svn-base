Imports System.ComponentModel
Imports C1.Win.C1FlexGrid

Public Class Documentos
    Const T_ID = 0
    Const T_ARTICULO = 1
    Const T_DESCRIPCION = 2
    Const T_UNIDAD = 3
    Const T_BARRA = 4
    Const T_CANTIDAD = 5
    Const T_PRECIO = 6
    Const T_SUBTOTAL = 7

    Dim BodegaParcial As Integer
    Dim ConPagos As Boolean = False
    Dim ModoBodega As String = 0

    Private Sub WinDeco1_Load(sender As Object, e As EventArgs) Handles WinDeco1.Load

    End Sub

    Private Sub Aceptar_Click(sender As Object, e As EventArgs) Handles Aceptar.Click
        Dim xFPago As String, xTipoDoc As String, xTipoGui As String, FacGui As Boolean
        Dim cUltimo As Double, wTipoDoc As String

        If Buscar("TipoDoc", "DescTipoDoc", cTipoDoc.Text) Then
            xTipoDoc = Swap.Fields("TipoDoc").Value
            ModoBodega = Swap("Modo").Value
            ConPagos = Swap("Pagos").Value
        Else
            MsgError("Error en Tipo de Documento")
            Exit Sub
        End If
        If Val(xNumero) = 0 Then
            MsgError("Falta Número del Documento")
            Exit Sub
        End If
        If xRut.Text = "__.___.___-_" Or Trim(xNombre.Text) = "" Then
            MsgError("Falta Cliente")
            Exit Sub
        End If
        If Buscar("FPagos", "DescFPago", cFPago.Text) Then
            xFPago = Swap("FPago").Value
        Else
            MsgError("Error en Forma de Pago")
            Exit Sub
        End If
        If xNombre.Text = "" Then
            MsgError("Error en Rut/Cliente")
            Exit Sub
        End If

        If xTabla.Rows.Count - 1 = 0 Then
            MsgError("Falta Detalle")
            Exit Sub
        End If
        If Val(xTotal) = 0 Then
            MsgError("Documento no puede tener valor 0")
            Exit Sub
        End If

        If ValidarDeuda Then
            Exit Sub
        End If

        If Trim(xVendedor.Text) = "" Or Trim(xNomVen.Text) = "" Then
            MsgError("Falta Vendedor")
            xVendedor.Focus()
            Exit Sub
        End If

        xTipoGui = "X"
        If Buscar("TipoGui", "DescTipoGui", cTipoDocRef.Text, "TipoGui") Then
            xTipoGui = Swap("TipoGui").Value
        End If

        'Verificar Documento Repetido
        DocG = SQL("Select * from DocumentosG where Local=" + Num(LocalActual) + " and TipoDoc = '" + xTipoDoc + "' and Numero =" + Num(xNumero.Text))
        If DocG.RecordCount > 0 Then
            MsgError("El Documento ya fue Ingresado en el Sistema")
            Exit Sub
        End If

        '--------------------------------------
        'Si el Documento requiere pagos...
        'If ConPagos Then
        '    With ModuloFPagos
        '        .Show
        '        .xNumero = xNumero
        '        .xTipoDoc = cTipoDoc.Text
        '        .xFPago = cFPago.Text
        '        .xCliente = xCliente.Text
        '        .xFecha = xFecha.Value
        '        .xNombre = xNombre
        '        .xVendedor = xVendedor
        '        .xMonto = xTotal
        '    End With

        '    Me.Enabled = False
        '    While Me.Enabled = False
        '        DoEvents()
        'Wend

        'Verificar que se le hayan hecho los pagos
        'DocP = SQL("Select * from DocumentosP where Local=" + Num(LocalActual) + " and TipoDoc = '" + xTipoDoc + "' and Numero =" + Num(xNumero))
        '    If DocP.RecordCount = 0 Then
        '        MsgError("No se registraron pagos, documento no registrado.")
        '        Exit Sub
        '    End If
        'End If
        '--------------------------------------

        If xVendedor.Text = "" Then xVendedor.Text = UsuarioActual


        DocG.AddNew()
        DocG("Local").Value = LocalActual
        DocG("TipoDoc").Value = xTipoDoc
        DocG("Numero").Value = Val(xNumero)
        If cTipoDocRef.Text.ToString.Trim = "Ticket" Then
            DocG("Ticket").Value = DocG("OC").Value = Val(xNumDocRef.Text)
        End If
        DocG("Electronica").Value = oElectronica.Checked
        DocG("Fecha").Value = xFecha
        DocG("Estado").Value = "A"
        DocG("Bodega").Value = BodegaParcial
        DocG("Cliente").Value = xCliente
        DocG("Rut").Value = xRut
        DocG("Aprobado").Value = True
        DocG("FPago").Value = xFPago
        DocG("Observaciones").Value = Trim(xObs.Text)
        DocG("Usuario").Value = UsuarioActual
        DocG("Vendedor").Value = xVendedor
        DocG("SubTotal").Value = CDbl(xSubTotal.Text)
        DocG("Descuento").Value = CDbl(xDescuento.Text)
        If cTipoDocRef.Text.ToString.Trim = "Orden de Compra" Then
            DocG("OC").Value = Trim(xNumDocRef.Text)
        End If
        DocG("TipoGui").Value = xTipoGui
        DocG("Neto").Value = CDbl(xNeto.Text)
        DocG("IVA").Value = CDbl(xIVA.Text)
        DocG("iFEPP").Value = Val(xFEPP.Text)
        DocG("iMIN").Value = Val(xMIN.Text)
        DocG("iBEB").Value = Val(xBEB.Text)
        DocG("iCER").Value = Val(xCER.Text)
        DocG("iVIN").Value = Val(xVIN.Text)
        DocG("iLIC").Value = Val(xLIC.Text)
        DocG("iICAR").Value = Val(xICAR.Text)
        DocG("iIHA").Value = Val(xIHA.Text)
        DocG("iTAB").Value = Val(xTAB.Text)
        DocG("Total").Value = CDbl(xTotal.Text)
        DocG.Update()

        FacGui = False
        DocD = SQL("Select * from DocumentosD")
        For i = 1 To xTabla.Rows.Count - 1
            DocD.AddNew()
            DocD("Local").Value = LocalActual
            DocD("TipoDoc").Value = xTipoDoc
            DocD("Numero").Value = Val(xNumero)
            DocD("Articulo").Value = xTabla.GetData(i, T_ARTICULO)
            DocD("Cantidad").Value = xTabla.GetData(i, T_CANTIDAD)
            DocD("Precio").Value = xTabla.GetData(i, T_PRECIO)
            If Trim(xTabla.GetData(i, T_ARTICULO)) = "0" Then
                DocD("Glosa").Value = xTabla.GetData(i, T_DESCRIPCION)
                FacGui = True
            End If
            DocD.Update()

            'Actualizar Stocks
            If Trim(xTabla.GetData(i, T_ARTICULO)) <> "0" Then
                Call Stocks(Trim(xTabla.GetData(i, T_ARTICULO)), Val(BodegaParcial), Val(LocalActual), CDbl(xTabla.GetData(i, T_CANTIDAD)), ModoBodega)
            End If
        Next i

        If xTipoDoc = "F" Then
            'Actualizar Ventas
            Ven = SQL("Select Top 1 * from Ventas")
            Ven.AddNew()
            Ven("Ticket").Value = Val(xNumDocRef.Text)
            Ven("Fecha").Value = Now
            Ven("Usuario").Value = xVendedor
            Ven("Local").Value = LocalActual
            Ven("Caja").Value = CajaActual
            Ven("TipoDoc").Value = xTipoDoc
            Ven("NumDoc").Value = Val(xNumero)
            Ven("FPago").Value = xFPago
            Ven("SubTotal").Value = CDbl(xNeto.Text)
            Ven("Descuento").Value = CDbl(xDescuento.Text)
            Ven("Total").Value = CDbl(xTotal.Text)
            Ven.Update()
        End If

        'Marcar Guias como Facturadas
        If FacGui Then
            'Swap = SQL("Update DocumentosG set Factura=" + Num(xNumero.Text) + " where Factura=0 and Fecha>='" + Format(F1.value, "dd/mm/yyyy") + "' and Fecha<='" + Format(F2, "dd/mm/yyyy") + "' and Cliente=" + Num(xCliente) + " and TipoDoc = 'G' and Estado ='A'")
        End If

        'Si los documentos son electronicos, no se imprimen, ya que se generan pero la impresion se hace por SII
        If Pregunta("¿Desea Imprimir el documento?") Then
            Call Emitir_Documento(Val(LocalActual), xTipoDoc, Val(xNumero))
        End If

        Respuesta = PoneCorrelativo(Val(LocalActual), 0, xTipoDoc, Val(xNumero))
        cUltimo = SacaCorr(Val(LocalActual), 0, xTipoDoc)

        Mensaje(cTipoDoc.Text + " N°" + Num(xNumero.Text) + " Ingresada.")

        wTipoDoc = cTipoDoc.Text
        Limpiar_Click(sender, e)
        cTipoDoc.Text = wTipoDoc
        Auditoria(Me.Text, PR_GUARDAR, "", 0)
    End Sub

    Private Sub Agregar_Click(sender As Object, e As EventArgs) Handles Agregar.Click
        Dim xBarra As String

        If gClave = "W" Then
            If Trim(xArticulo.Text) = "" Then
                xArticulo.Text = "0"
            End If
        End If

        xArticulo.Focus()
        xArticulo_Cargar()

        If Trim(xDescripcion.Text) <> "" Then
            Art = SQL("Select * from Articulos where Articulo = '" & Trim(xArticulo.Text) & "'")
            If Esta_en_Tabla(xArticulo.Text) = 0 Then
                xTabla.AddItem("")
                Lin = xTabla.Rows.Count - 1
                xTabla.SetData(Lin, T_ID, "")
                xTabla.SetData(Lin, T_ARTICULO, Trim(Art("Articulo").Value))
                xTabla.SetData(Lin, T_DESCRIPCION, Trim(xDescripcion.Text))
                xTabla.SetData(Lin, T_UNIDAD, Trim(Art("Unidad").Value))
                xBarra = ""
                Bar = SQL("Select Top 1 Barra from Barras where Articulo = '" & xArticulo.Text & "'")
                If Bar.RecordCount > 0 Then
                    xBarra = Trim(Bar("Barra").Value)
                End If
                xTabla.SetData(Lin, T_BARRA, xBarra)
                xTabla.SetData(Lin, T_CANTIDAD, 1)
                If xArticulo.Text = "0" Then
                    xTabla.SetData(Lin, T_PRECIO, 0)
                Else
                    If oMayorista.Checked Then
                        xTabla.SetData(Lin, T_PRECIO, Math.Round(Saca_PVenta(oMayorista.Checked), 0))
                    Else
                        xTabla.SetData(Lin, T_PRECIO, Math.Round(Saca_PVenta(oMayorista.Checked), 0))
                    End If
                End If
                xTabla.SetData(Lin, T_SUBTOTAL, 0)
                bLimpiarArt_Click(sender, e)
                xTabla.Focus()
                xTabla.Row = Lin
                If gClave = "W" Then
                    xTabla.Col = T_DESCRIPCION
                    If xTabla.GetData(Lin, T_DESCRIPCION) = "." Then
                        xTabla.SetData(Lin, T_DESCRIPCION, "SERVICIOS INFORMATICOS")
                    End If
                Else
                    xTabla.Col = T_CANTIDAD
                End If
                xTabla_Click(sender, e)
            Else
                MsgError("Articulo ya Ingresado")
            End If
        End If

    End Sub

    Private Sub bBuscarCli_Click(sender As Object, e As EventArgs) Handles bBuscarCli.Click
        Modulo = "Documentos"
        BuscarClientes.Show()
    End Sub

    Private Sub bProcesarDoc_Click(sender As Object, e As EventArgs) Handles bProcesarDoc.Click
        'TICKET
        If cTipoDocRef.Text = "Ticket" Then
            If Val(xNumDocRef.Text) > 0 Then
                TkG = SQL("Select * from TikGen where Ticket = " + Num(xNumDocRef.Text))
                If TkG.RecordCount > 0 Then
                    If TkG("Estado").Value = "E" Or TkG("Estado").Value = "V" Then
                        If CDate(Format(TkG("Fecha"), "dd/mm/yyyy")) = xFecha.Value Then
                            Cargar_Ticket()
                        Else
                            MsgError("Ticket fuera de fecha")
                            Exit Sub
                        End If
                    Else
                        MsgError("Ticket No se puede usar")
                        Exit Sub
                    End If
                Else
                    MsgError("Ticket No Encontrado")
                    Exit Sub
                End If
            End If
            Exit Sub
        End If

        'OTROS DOCUMENTOS
        Titulos()

        If xNumDocRef.Text = "" Then
            MsgError("Falta Número de Documento")
            Exit Sub
        End If

        TDo = SQL("Select TipoDoc From TipoDoc Where DescTipoDoc like '%" & Trim(cTipoDocRef.Text) & "%'")
        If TDo.EOF Then
            MsgError("No hay un Tipo de documento seleccionado")
            Exit Sub
        End If

        DocG = SQL("Select Numero,Neto from DocumentosG where Numero=0 " &
                   " Cliente=" + Num(xCliente.Text) + " and TipoDoc = '" & cTipoDocRef.Text & "' and Estado = 'A'")
        If DocG.RecordCount > 0 Then
            While Not DocG.EOF
                DocG.MoveNext()
            End While
            xArticulo.Text = "0"
            Agregar_Click(sender, e)

            If cTipoDocRef.Text = "Cotización" Then
                Agregar.Enabled = False
                bEliminar.Enabled = False
                BuscarArt.Enabled = False
                bLimpiarArt.Enabled = False
                xArticulo.Enabled = False
                xDescripcion.Enabled = False
                xCliente.Enabled = False
                bBuscarCli.Enabled = False
                bCrearCli.Enabled = False
            Else
                Agregar.Enabled = True
                xCliente.Enabled = True
                bEliminar.Enabled = True
                BuscarArt.Enabled = True
                bLimpiarArt.Enabled = True
                xArticulo.Enabled = True
                xDescripcion.Enabled = True
                bBuscarCli.Enabled = True
                bCrearCli.Enabled = True
            End If
        Else
            MsgError("No se Encontraró Documento")
        End If
    End Sub

    Private Sub bCrearCli_Click(sender As Object, e As EventArgs) Handles bCrearCli.Click
        ManCliente.Show()
        ManCliente.xCliente.Text = xCliente.Text
        ManCliente.Focus()
    End Sub

    Private Sub bEliminar_Click(sender As Object, e As EventArgs) Handles bEliminar.Click
        If xTabla.Row > 0 Then
            If Pregunta("¿Desea Eliminar Artículo:" & vbCrLf & xTabla.GetData(xTabla.Row, T_DESCRIPCION) & "?") Then
                xTabla.RemoveItem(xTabla.Row)
                Calcular_Total()
                xArticulo.Focus()
            End If
        End If
    End Sub

    Private Sub bLimpiarArt_Click(Optional sender As Object = Nothing, Optional e As EventArgs = Nothing) Handles bLimpiarArt.Click
        xArticulo.Text = ""
        xDescripcion.Text = ""
        xArticulo.Focus()
    End Sub

    Private Sub BuscarArt_Click(sender As Object, e As EventArgs) Handles BuscarArt.Click
        Modulo = "Documentos"
        'FiltroArt = EmpresaActual
        BuscarArticulos.Show()
    End Sub

    Private Sub Correlativo_Click(sender As Object, e As EventArgs) Handles Correlativo.Click
        Dim nCorr As Double

        nCorr = CambiaCorrelativo(LocalActual, 0, Mid(cTipoDoc.Text, 1, 1))
        Call Saca_Corr()
    End Sub

    Private Sub cTipoDoc_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cTipoDoc.SelectedIndexChanged
        Call Saca_Corr()

        If cTipoDoc.Text = "Guía de Despacho" Then
            Swap = SQL("Select * from TipoGui")
            If Swap.RecordCount > 0 Then
                While Not Swap.EOF
                    cMotivo.Items.Add(Trim(Swap("DescTipoGui").Value))
                    Swap.MoveNext()
                End While
            End If
        Else
            cMotivo.Text = ""
        End If

        TDo = SQL("Select * from TipoDoc where DescTipoDoc = '" + cTipoDoc.Text + "'")
        If TDo.RecordCount > 0 Then
            xTipoDoc.Text = TDo("TipoDoc").Value
        Else
            cTipoDoc.Text = ""
            xTipoDoc.Text = ""
        End If

    End Sub

    Private Sub Documentos_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        Titulos()
        TDo = SQL("Select * from TipoDoc Order by DescTipoDoc")
        While Not TDo.EOF
            DoEvents()
            cTipoDoc.Items.Add(Trim(TDo("DescTipoDoc").Value))
            If gClave = "W" Then
                If cTipoDoc.Text = "" Then
                    If TDo("TipoDoc").Value = "F" Then
                        cTipoDoc.Text = Trim(TDo("DescTipoDoc").Value)
                    End If
                End If
            End If
            TDo.MoveNext()
        End While

        FPa = SQL("Select * from FPagos Order by DescFPago")
        While Not FPa.EOF
            DoEvents()
            cFPago.Items.Add(Trim(FPa("DescFPago").Value))
            If gClave = "W" Then
                If FPa("FPago").Value = "C" Then
                    cFPago.Text = Trim(FPa("DescFPago").Value)
                End If
            End If
            FPa.MoveNext()
        End While

        xVendedor.Text = UsuarioActual

        xFecha.Value = Now.Date
        Loc = SQL("Select NombreLocal from Locales where Local = " + LocalActual.ToString)
        If Loc.RecordCount > 0 Then
            xLocal.Text = Loc.Fields("NombreLocal").Value
        Else
            xLocal.Text = ""
        End If

        If Not Supervisor Then
            xVendedor.Text = ""
            xVendedor.Enabled = True
            xVendedor.ReadOnly = False
        Else
            xVendedor.Text = UsuarioActual
        End If
        Auditoria(Me.Text, PR_INGRESAR, "", 0)
    End Sub

    Private Sub Limpiar_Click(sender As Object, e As EventArgs) Handles Limpiar.Click
        If xTabla.Rows.Count > 1 Then
            If Not Pregunta("¿Desea Limpiar Datos?") Then
                Exit Sub
            End If
        End If

        xFecha.Value = Now.Date
        xNumero.Text = ""
        cTipoDoc.Text = ""
        cFPago.Text = "CHEQUE"
        xRut.Text = "__.___.___-_"
        xNombre.Text = ""
        xArticulo.Text = ""
        xDescripcion.Text = ""
        xObs.Text = ""
        Titulos()
        xSubTotal.Text = 0
        xDescuento.Text = 0
        xNeto.Text = 0
        xIVA.Text = 0
        xTotal.Text = 0
        xNumDocRef.Text = ""
        oElectronica.Checked = True

        xFEPP.Text = 0
        xIHA.Text = 0
        xICAR.Text = 0
        xTAB.Text = 0
        xMIN.Text = 0
        xBEB.Text = 0
        xCER.Text = 0
        xVIN.Text = 0
        xLIC.Text = 0

        If Not Supervisor Then
            xVendedor.Text = ""
            xVendedor.Enabled = True
            xVendedor.ReadOnly = False
        Else
            xVendedor.Text = UsuarioActual
        End If

        xNumDocRef.Text = ""
        xCliente.Text = ""
        xDireccion.Text = ""
        nLineas.Text = 0
        cTipoDocRef.Text = ""
        oMayorista.Checked = False
        Calcular_Total()
        Agregar.Enabled = True
        bEliminar.Enabled = True
        BuscarArt.Enabled = True
        bLimpiarArt.Enabled = True
        xArticulo.Enabled = True
        xDescripcion.Enabled = True
        xCliente.Enabled = True
        bBuscarCli.Enabled = True
        bCrearCli.Enabled = True
    End Sub

    Private Sub Salir_Click(sender As Object, e As EventArgs) Handles Salir.Click
        Me.Close()
    End Sub

    Private Sub Documentos_Closing(sender As Object, e As CancelEventArgs) Handles Me.Closing
        If xTabla.Rows.Count - 1 > 0 Then
            If Not Pregunta("¿Desea Salir?") Then
                e.Cancel = 1
            End If
        End If
    End Sub

    Private Sub xArticulo_TextChanged(sender As Object, e As EventArgs) Handles xArticulo.TextChanged

    End Sub

    Sub Titulos()
        xTabla.Redraw = True

        xTabla.Clear()
        xTabla.Rows.Count = 1
        xTabla.Cols.Count = 8

        xTabla.SetData(0, T_ID, "Id")
        xTabla.SetData(0, T_ARTICULO, "Artículo")
        xTabla.SetData(0, T_DESCRIPCION, "Descripción")
        xTabla.SetData(0, T_UNIDAD, "Unidad")
        xTabla.SetData(0, T_BARRA, "Barra")
        xTabla.SetData(0, T_CANTIDAD, "Cantidad")
        xTabla.SetData(0, T_PRECIO, "Precio Neto")
        xTabla.SetData(0, T_SUBTOTAL, "SubTotal")

        xTabla.Cols(T_ID).Width = 0
        xTabla.Cols(T_ARTICULO).Width = 100
        xTabla.Cols(T_DESCRIPCION).Width = 280
        xTabla.Cols(T_UNIDAD).Width = 80
        xTabla.Cols(T_BARRA).Width = 0
        xTabla.Cols(T_CANTIDAD).Width = 100
        xTabla.Cols(T_PRECIO).Width = 100
        xTabla.Cols(T_SUBTOTAL).Width = 100

        xTabla.Cols(T_ID).TextAlign = TextAlignEnum.LeftCenter
        xTabla.Cols(T_ARTICULO).TextAlign = TextAlignEnum.LeftCenter
        xTabla.Cols(T_DESCRIPCION).TextAlign = TextAlignEnum.LeftCenter
        xTabla.Cols(T_UNIDAD).TextAlign = TextAlignEnum.LeftCenter
        xTabla.Cols(T_BARRA).TextAlign = TextAlignEnum.LeftCenter
        xTabla.Cols(T_CANTIDAD).TextAlign = TextAlignEnum.RightCenter
        xTabla.Cols(T_PRECIO).TextAlign = TextAlignEnum.RightCenter
        xTabla.Cols(T_SUBTOTAL).TextAlign = TextAlignEnum.RightCenter

    End Sub

    Private Sub xArticulo_KeyPress(sender As Object, e As KeyPressEventArgs) Handles xArticulo.KeyPress
        If e.KeyChar = vbCr Then
            xArticulo_Cargar()
        End If
    End Sub

    Sub xArticulo_Cargar()
        If Trim(xArticulo.Text) <> "" Then
            xArticulo.Text = BuscaBarra(xArticulo.Text)
            If Trim(xArticulo.Text) = "" Then
                MsgError("Articulo No Existe")
                bLimpiarArt_Click()
            Else
                Art = SQL("Select * from Articulos where Articulo = '" & Trim(xArticulo.Text) & "'")
                If Art.RecordCount > 0 Then
                    xDescripcion.Text = Trim(Art("Descripcion").Value)
                    Agregar.Focus()
                Else
                    MsgError("Articulo No Encontrado")
                    Call bLimpiarArt_Click()
                End If
            End If
        End If
    End Sub

    Private Sub xFEPP_KeyPress(sender As Object, e As KeyPressEventArgs) Handles xFEPP.KeyPress
        If e.KeyChar = vbCr Then
            Calcular_Total()
        End If
    End Sub

    Private Sub xMIN_KeyPress(sender As Object, e As KeyPressEventArgs) Handles xMIN.KeyPress
        If e.KeyChar = vbCr Then
            Calcular_Total()
        End If
    End Sub

    Private Sub xCER_KeyPress(sender As Object, e As KeyPressEventArgs) Handles xMIN.KeyPress
        If e.KeyChar = vbCr Then
            Calcular_Total()
        End If
    End Sub

    Private Sub xVIN_KeyPress(sender As Object, e As KeyPressEventArgs) Handles xMIN.KeyPress
        If e.KeyChar = vbCr Then
            Calcular_Total()
        End If
    End Sub

    Private Sub xLIC_KeyPress(sender As Object, e As KeyPressEventArgs) Handles xMIN.KeyPress
        If e.KeyChar = vbCr Then
            Calcular_Total()
        End If
    End Sub

    Private Sub xCAR_KeyPress(sender As Object, e As KeyPressEventArgs) Handles xMIN.KeyPress
        If e.KeyChar = vbCr Then
            Calcular_Total()
        End If
    End Sub

    Private Sub xIHA_KeyPress(sender As Object, e As KeyPressEventArgs) Handles xMIN.KeyPress
        If e.KeyChar = vbCr Then
            Calcular_Total()
        End If
    End Sub

    Private Sub xTAB_KeyPress(sender As Object, e As KeyPressEventArgs) Handles xMIN.KeyPress
        If e.KeyChar = vbCr Then
            Calcular_Total()
        End If
    End Sub

    Private Sub xCliente_TextChanged(sender As Object, e As EventArgs) Handles xCliente.TextChanged

    End Sub

    Private Sub xBEB_KeyPress(sender As Object, e As KeyPressEventArgs) Handles xMIN.KeyPress
        If e.KeyChar = vbCr Then
            Calcular_Total()
        End If
    End Sub

    Private Sub xCliente_GotFocus(sender As Object, e As EventArgs) Handles xCliente.GotFocus
        xCliente.SelectAll()
    End Sub

    Private Sub xDescuento_TextChanged(sender As Object, e As EventArgs) Handles xDescuento.TextChanged
        Call Calcular_Total()
    End Sub

    Private Sub xNumero_TextChanged(sender As Object, e As EventArgs) Handles xNumero.TextChanged

    End Sub

    Private Sub xCliente_KeyPress(sender As Object, e As KeyPressEventArgs) Handles xCliente.KeyPress
        If e.KeyChar = vbCr Then
            If Val(xCliente.Text) > 0 Then
                If Buscar("Clientes", "Cliente", xCliente.Text) Then
                    xRut.Text = Swap("Rut").Value
                    xNombre.Text = Swap("Nombre").Value
                    xDireccion.Text = Trim(Swap("Direccion").Value) + ", " + Trim(Swap("Ciudad").Value)
                Else
                    MsgError("Cliente no Existe")
                    xNombre.Text = ""
                    xRut.Text = "__.___.___-_"
                    xDireccion.Text = ""
                    Exit Sub
                End If
            End If
        End If
    End Sub

    Private Sub xNumDocRef_TextChanged(sender As Object, e As EventArgs) Handles xNumDocRef.TextChanged

    End Sub

    Private Sub xNumero_LostFocus(sender As Object, e As EventArgs) Handles xNumero.LostFocus
        If Val(xNumero) > 0 Then
            If Buscar("TipoDoc", "DescTipoDoc", cTipoDoc.Text) Then
                xTipoDoc.Text = Swap("TipoDoc").Value
                ModoBodega = Swap("Modo").Value
                ConPagos = Swap("Pagos").Value
            Else
                MsgError("Error en Tipo de Documento")
                Exit Sub
            End If
            DocG = SQL("Select * from DocumentosG where Local=" + Num(LocalActual) + " and TipoDoc = '" + xTipoDoc.Text + "' and Numero =" + Num(xNumero.Text))
            If DocG.RecordCount > 0 Then
                MsgError("El Documento ya fue Ingresado en el Sistema")
                Exit Sub
            End If
        End If

    End Sub

    Private Sub xRut_MaskInputRejected(sender As Object, e As MaskInputRejectedEventArgs) Handles xRut.MaskInputRejected

    End Sub

    Private Sub xNumDocRef_GotFocus(sender As Object, e As EventArgs) Handles xNumDocRef.GotFocus
        xNumDocRef.SelectAll()
    End Sub

    Private Sub xTabla_Click(Optional sender As Object = Nothing, Optional e As EventArgs = Nothing) Handles xTabla.Click
        Try
            If xTabla.Col = T_CANTIDAD Or xTabla.Col = T_PRECIO Then
                xTabla.StartEditing()
            End If
            If xTabla.Col = T_DESCRIPCION And Trim(xTabla.GetData(xTabla.Row, T_ARTICULO)) = "0" Then
                xTabla.StartEditing()
            End If
        Catch ex As Exception
        End Try
    End Sub

    Private Sub xRut_KeyPress(sender As Object, e As KeyPressEventArgs) Handles xRut.KeyPress
        If e.KeyChar = vbCr Then
            If xRut.Text <> "__.___.___-_" Then
                If Buscar("Clientes", "Rut", xRut.Text) Then
                    xNombre.Text = Swap("Nombre").Value
                Else
                    MsgError("Cliente no Existe")
                    xNombre.Text = ""
                    xRut.Text = "__.___.___-_"
                    Exit Sub
                End If
            End If
        End If
    End Sub

    Private Sub xTabla_AfterEdit(sender As Object, e As RowColEventArgs) Handles xTabla.AfterEdit
        If xTabla.Col <> T_DESCRIPCION Then
            If Not IsNumeric(xTabla.GetData(xTabla.Row, xTabla.Col)) Then
                MsgError("Cantidad Incorrecta")
                xTabla.SetData(xTabla.Row, xTabla.Col, 0)
                Exit Sub
            End If
            Call Calcular_Total()
        Else
            xTabla.Col = T_PRECIO
        End If
    End Sub

    Private Sub xTabla_BeforeEdit(sender As Object, e As RowColEventArgs) Handles xTabla.BeforeEdit
        Call Calcular_Total()
    End Sub

    Sub Calcular_Total()
        Dim Total As Double, iLineas As Integer

        If xIVA.Text = "" Then xIVA.Text = 0

        xImpuestos.Text = Val(xFEPP.Text) + Val(xTAB.Text) + Val(xMIN.Text) + Val(xBEB.Text) + Val(xVIN.Text) + Val(xCER.Text) + Val(xLIC.Text) + Val(xICAR.Text) + Val(xIHA.Text)

        Total = 0 : iLineas = 0
        For i = 1 To xTabla.Rows.Count - 1
            If Not IsNumeric(xTabla.GetData(i, T_CANTIDAD)) Then
                MsgError("Cantidad Incorrecta")
                xTabla.SetData(i, T_CANTIDAD, 0)
            End If
            Try
                If xTabla.GetData(i, T_CANTIDAD) = "" Then xTabla.SetData(i, T_CANTIDAD, 0)
                If xTabla.GetData(i, T_PRECIO) = "" Then xTabla.SetData(i, T_PRECIO, 0)
                If xTabla.GetData(i, T_SUBTOTAL) = "" Then xTabla.SetData(i, T_SUBTOTAL, 0)
            Catch ex As Exception
            End Try
            xTabla.SetData(i, T_SUBTOTAL, Math.Round(xTabla.GetData(i, T_CANTIDAD) * xTabla.GetData(i, T_PRECIO), 3))
            iLineas = iLineas + 1
            Total = Total + CDbl(xTabla.GetData(i, T_SUBTOTAL))
        Next i

        xSubTotal.Text = Math.Round(Total, 0)
        If xDescuento.Text = "" Then xDescuento.Text = 0
        If xImpuestos.Text = "" Then xImpuestos.Text = 0
        xNeto.Text = Math.Round(Total - CDbl(xDescuento.Text), 0)
        xIVA.Text = Math.Round(xNeto.Text * (gIVA / 100))
        xTotal.Text = CDbl(xNeto.Text) + CDbl(xIVA.Text) + CDbl(xImpuestos.Text)
        nLineas.Text = iLineas.ToString
    End Sub

    Private Sub xTabla_KeyPress(sender As Object, e As KeyPressEventArgs) Handles xTabla.KeyPress
        If e.KeyChar = vbCr Then
            If xTabla.Col = T_CANTIDAD Or xTabla.Col = T_PRECIO Then
                xTabla.StartEditing()
            End If
        End If
        If e.KeyChar = "*" Then
            xArticulo.Focus()
        End If
    End Sub

    Private Sub xTabla_KeyPressEdit(sender As Object, e As KeyPressEditEventArgs) Handles xTabla.KeyPressEdit
        If e.KeyChar = vbCr Then
            If xTabla.Col = T_CANTIDAD Then
                If Val(xTabla.GetData(xTabla.Row, T_PRECIO)) > 0 Then
                    'xArticulo.focus
                Else
                    xTabla.Col = T_PRECIO
                    SendKeys("{ENTER}")
                End If
            End If
        End If

    End Sub

    Function Esta_en_Tabla(tArticulo As Object) As Integer
        Esta_en_Tabla = 0
        For i = 1 To xTabla.Rows.Count - 1
            If Trim(xTabla.GetData(i, T_ARTICULO)) = Trim(tArticulo) And Val(tArticulo) <> 0 Then
                Esta_en_Tabla = i
            End If
        Next i
    End Function

    Sub Saca_Corr()
        If Trim(cTipoDoc.Text) = "" Then
            xNumero.Text = 0
        Else
            Swap = SQL("Select * from TipoDoc where DescTipoDoc = '" + Trim(cTipoDoc.Text) + "'")
            If Swap.RecordCount > 0 Then
                Cor = SQL("Select Correlativo from Correlativos  Where Local = " + Num(LocalActual) + " and Caja = " + Num(CajaActual) + " and TipoDoc = '" + Swap("TipoDoc").Value + "'")
                If Cor.RecordCount > 0 Then
                    xNumero.Text = Cor("Correlativo").Value
                Else
                    xNumero.Text = 0
                End If
            Else
                xNumero.Text = 0
            End If
        End If
    End Sub

    Private Sub xVendedor_TextChanged(sender As Object, e As EventArgs) Handles xVendedor.TextChanged
        If Trim(xVendedor.Text) = "" Then
            xNomVen.Text = ""
            BodegaParcial = BodegaActual
            Exit Sub
        End If
        If Buscar("Usuarios", "Usuario", Trim(xVendedor.Text), "NombreUsr,Bodega") Then
            xNomVen.Text = Trim(Swap("NombreUsr").Value)
            BodegaParcial = Swap("Bodega").Value
        Else
            xNomVen.Text = ""
            BodegaParcial = BodegaActual
        End If

    End Sub

    Sub Cargar_Ticket()
        Dim Suma_Abonos As Double

        Titulos()

        Suma_Abonos = 0
        xTotal.Text = 0
        xSubTotal.Text = 0
        xDescuento .text= 0


        oMayorista.Checked = False
        If Val(xNumDocRef.Text) = 0 Then
            Exit Sub
        End If

        TkD = SQL("Select * from TikDet where Ticket = " + Num(xNumDocRef.Text))
        If TkD.RecordCount > 0 Then
            While Not TkD.EOF
                xTabla.AddItem("")
                Lin = xTabla.Rows.Count - 1
                xTabla.SetData(Lin, T_ID, "")
                xTabla.SetData(Lin, T_ARTICULO, Trim(TkD("Articulo").Value))
                Art = SQL("Select * from Articulos where Articulo = '" + Trim(TkD("Articulo").Value) + "'")
                If Art.RecordCount > 0 Then
                    xTabla.SetData(Lin, T_DESCRIPCION, Trim(Art("Descripcion").Value))
                End If
                xTabla.SetData(Lin, T_UNIDAD, Trim(Art("Unidad").Value))
                xTabla.SetData(Lin, T_BARRA, Trim(TkD("Barra").Value))
                xTabla.SetData(Lin, T_CANTIDAD, CDbl(TkD("Cantidad").Value))
                xTabla.SetData(Lin, T_PRECIO, Saca_Neto(TkD("PVenta").Value))
                xTabla.SetData(Lin, T_SUBTOTAL, CDbl(xTabla.GetData(Lin, T_CANTIDAD)) * CDbl(xTabla.GetData(Lin, T_PRECIO)))
                bLimpiarArt_Click()
                xTabla.Focus()
                xTabla.Row = Lin
                xTabla.Col = T_CANTIDAD
                xTabla_Click()

                TkD.MoveNext()
            End While
        End If

        Suma_Abonos = 0
        Abo = SQL("Select Sum(Total) as Abonado, sum(Descuento) as Descuentos from Ventas where Ticket = " + Num(xNumDocRef.Text))
        If Abo.RecordCount > 0 Then
            If Not IsDBNull(Abo("Abonado").Value) Then
                Suma_Abonos = Abo("Abonado").Value
                xDescuento.Text = Format(Suma_Abonos, "###,###,###")
            End If
            If Not IsDBNull(Abo("Descuentos")) Then
                xDescuento.Text = Abo("Descuentos").Value
            End If
        End If
        xTabla.Focus()
        SendKeys("{ENTER}")
        Calcular_Total()

    End Sub

    Private Sub xVendedor_GotFocus(sender As Object, e As EventArgs) Handles xVendedor.GotFocus
        xVendedor.SelectAll()
    End Sub

    Sub Emitir_Documento(iLocal As Double, iTipo As String, iDoc As Double)
        On Error GoTo 0
        On Error GoTo ErrorImp

        'Salida.Reset
        'Salida.DiscardSavedData = True
        'If iTipo = "F" Then
        '    Salida.ReportFileName = Ruta_Imprimir("Facturas.rpt")
        'End If
        'If iTipo = "C" Then
        '    Salida.ReportFileName = Ruta_Imprimir("Cotizacion.rpt")
        'End If
        'If iTipo = "G" Then
        '    Salida.ReportFileName = Ruta_Imprimir("Guia.rpt")
        'End If
        'If iTipo = "N" Then
        '    Salida.ReportFileName = Ruta_Imprimir("NCredito.rpt")
        'End If
        'If iTipo = "O" Then
        '    Salida.ReportFileName = Ruta_Imprimir("OCompra.rpt")
        'End If
        'If iTipo = "U" Then
        '    Salida.ReportFileName = Ruta_Imprimir("FCompra.rpt")
        'End If
        'If iTipo = "T" Then
        '    Salida.ReportFileName = Ruta_Imprimir("NVenta.rpt")
        'End If
        'Salida.SelectionFormula = "{DocumentosG.Local}= " + Num(iLocal) + " and {DocumentosG.TipoDoc}='" + Trim(iTipo) + "' and {DocumentosG.Numero}= " + Num(iDoc)
        'Salida.Destination = crptToPrinter
        'Salida.Connect = ConectaReporte

        'Salida.Action = 1
        On Error GoTo 0
        Exit Sub

ErrorImp:
        MsgError("Error al Imprimir Documento")
        On Error GoTo 0
        Exit Sub
    End Sub

    Public Function ValidarDeuda() As Boolean
        If xCliente.Text <> "" Then
            If cFPago.Text = "Crédito" Then
                If cTipoDoc.Text = "Factura de Venta" Then
                    Dim wDeuda, wPagado, wCredito, wSaldo, wTotalDeuda, wCupo As Double
                    Dim wCupos As String
                    'Sacar Credito Cliente
                    Cli = SQL("Select CupoMax From Clientes Where Cliente=" & Val(xCliente.Text) & "")
                    wCredito = Cli.Fields("CupoMax").Value
                    If wCredito > 0 Then
                        'Sacar Total de Deuda
                        Mov = SQL("Select Coalesce(SUM(Total),0) as Deuda From Documentosg " &
                                  " where Cliente=" & Val(xCliente.Text) & " and " &
                                  " FPago='Cr' and TipoDoc='F'")
                        wDeuda = Mov.Fields("Deuda").Value
                        'Sacar Total Pagado
                        Doc = SQL("Select Coalesce(SUM(Monto),0) as Pagado From DocumentosP " &
                                  " Where Cliente=" & Val(xCliente.Text) & " and TipoDoc='F' and FPago='Cr'")
                        wPagado = Doc.Fields("Pagado").Value
                        wSaldo = wDeuda - wPagado
                        wTotalDeuda = wSaldo + Val(xTotal.Text)
                        wCupo = wCredito - wSaldo

                        If wCupo < 0 Then
                            wCupos = 0
                        Else
                            wCupos = Format(wCupo, "###,###,###")
                        End If

                        If wTotalDeuda > wCredito Then
                            MsgError("No se generará Factura de Venta al Cliente actual." & vbCrLf &
                                  "El Cliente cuenta con una deuda de $" & Format(wSaldo, "###,###,###") & vbCrLf &
                                  "Saldo Disponible a Favor de $" & wCupos)
                            ValidarDeuda = True
                            Exit Function
                        End If
                    End If

                End If
            End If
        End If
        ValidarDeuda = False
    End Function

End Class